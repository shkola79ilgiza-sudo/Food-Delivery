// –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –¥–∏–∞–±–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–µ–Ω—é
export const diabeticRestrictions = {
  // –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã (‚ùå)
  forbidden: [
    '—Å–∞—Ö–∞—Ä', '—Å–∞—Ö–∞—Ä-–ø–µ—Å–æ–∫', '—Å–∞—Ö–∞—Ä-—Ä–∞—Ñ–∏–Ω–∞–¥', '—Ç—Ä–æ—Å—Ç–Ω–∏–∫–æ–≤—ã–π —Å–∞—Ö–∞—Ä',
    '–±–µ–ª—ã–π —Ö–ª–µ–±', '–±–∞—Ç–æ–Ω', '—Å–¥–æ–±–∞', '–ø–µ—á–µ–Ω—å–µ', '—Ç–æ—Ä—Ç', '–ø–∏—Ä–æ–∂–Ω–æ–µ',
    '–≥–∞–∑–∏—Ä–æ–≤–∫–∞', '–∫–æ–ª–∞', '–ø–µ–ø—Å–∏', '—Ñ–∞–Ω—Ç–∞', '—Å–ø—Ä–∞–π—Ç',
    '–∫–æ–Ω—Ñ–µ—Ç—ã', '—à–æ–∫–æ–ª–∞–¥', '–ª–µ–¥–µ–Ω—Ü—ã', '–∫–∞—Ä–∞–º–µ–ª—å',
    '–≤–∞—Ä–µ–Ω—å–µ', '–¥–∂–µ–º', '—Å–∏—Ä–æ–ø', '–º–µ–¥',
    '–±–µ–ª—ã–π —Ä–∏—Å', '–º–∞–Ω–Ω–∞—è –∫–∞—à–∞', '–∫—É–∫—É—Ä—É–∑–Ω—ã–µ —Ö–ª–æ–ø—å—è',
    '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏', '—á–∏–ø—Å—ã', '—Å—É—Ö–∞—Ä–∏–∫–∏',
    '–∞–ª–∫–æ–≥–æ–ª—å', '–ø–∏–≤–æ', '–≤–∏–Ω–æ', '–≤–æ–¥–∫–∞'
  ],

  // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã (‚ö†Ô∏è) - –º–æ–∂–Ω–æ –≤ –º–∞–ª—ã—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞—Ö
  limited: [
    '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å', '—Å–≤–µ–∫–ª–∞', '–º–æ—Ä–∫–æ–≤—å', '—Ç—ã–∫–≤–∞',
    '–±–∞–Ω–∞–Ω', '–≤–∏–Ω–æ–≥—Ä–∞–¥', '—Ö—É—Ä–º–∞', '–∏–Ω–∂–∏—Ä',
    '–±–µ–ª—ã–π —Ä–∏—Å', '–º–∞–Ω–∫–∞', '–∫—É–∫—É—Ä—É–∑–∞',
    '–º–∞–∫–∞—Ä–æ–Ω—ã', '–ª–∞–ø—à–∞', '–≤–µ—Ä–º–∏—à–µ–ª—å',
    '—Ö–ª–µ–±', '–±—É–ª–æ—á–∫–∏', '–∫—Ä—É–∞—Å—Å–∞–Ω—ã'
  ],

  // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∑–∞–º–µ–Ω–∏—Ç–µ–ª–∏ (‚úÖ)
  substitutes: {
    sugar: ['—Å—Ç–µ–≤–∏—è', '—ç—Ä–∏—Ç—Ä–∏—Ç', '–∫—Å–∏–ª–∏—Ç', '—Å–æ—Ä–±–∏—Ç', '–∞—Å–ø–∞—Ä—Ç–∞–º', '—Å–∞—Ö–∞—Ä–∏–Ω'],
    flour: ['–º–∏–Ω–¥–∞–ª—å–Ω–∞—è –º—É–∫–∞', '–∫–æ–∫–æ—Å–æ–≤–∞—è –º—É–∫–∞', '–ª—å–Ω—è–Ω–∞—è –º—É–∫–∞', '–æ–≤—Å—è–Ω–∞—è –º—É–∫–∞'],
    sweeteners: ['—Ñ–∏–Ω–∏–∫–∏', '–∏–∑—é–º', '–∫—É—Ä–∞–≥–∞', '—á–µ—Ä–Ω–æ—Å–ª–∏–≤', '—è–±–ª–æ—á–Ω–æ–µ –ø—é—Ä–µ']
  },

  // –ü—Ä–æ–¥—É–∫—Ç—ã —Å –≤—ã—Å–æ–∫–∏–º –ì–ò (>70)
  highGI: [
    '—Å–∞—Ö–∞—Ä', '—Å–∞—Ö–∞—Ä-–ø–µ—Å–æ–∫', '—Å–∞—Ö–∞—Ä-—Ä–∞—Ñ–∏–Ω–∞–¥', '—Ç—Ä–æ—Å—Ç–Ω–∏–∫–æ–≤—ã–π —Å–∞—Ö–∞—Ä',
    '–±–µ–ª—ã–π —Ö–ª–µ–±', '–±–∞—Ç–æ–Ω', '—Å–¥–æ–±–∞', '–ø–µ—á–µ–Ω—å–µ',
    '–±–µ–ª—ã–π —Ä–∏—Å', '–º–∞–Ω–Ω–∞—è –∫–∞—à–∞', '–∫—É–∫—É—Ä—É–∑–Ω—ã–µ —Ö–ª–æ–ø—å—è',
    '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å', '—Å–≤–µ–∫–ª–∞', '—Ç—ã–∫–≤–∞',
    '–±–∞–Ω–∞–Ω', '–≤–∏–Ω–æ–≥—Ä–∞–¥', '—Ö—É—Ä–º–∞'
  ],

  // –ü—Ä–æ–¥—É–∫—Ç—ã —Å–æ —Å—Ä–µ–¥–Ω–∏–º –ì–ò (50-70)
  mediumGI: [
    '–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π —Ä–∏—Å', '–æ–≤—Å—è–Ω–∫–∞', '–≥—Ä–µ—á–∫–∞',
    '—è–±–ª–æ–∫–∏', '–≥—Ä—É—à–∏', '–ø–µ—Ä—Å–∏–∫–∏',
    '–º–æ—Ä–∫–æ–≤—å', '–≥–æ—Ä–æ—Ö', '—Ñ–∞—Å–æ–ª—å'
  ],

  // –ü—Ä–æ–¥—É–∫—Ç—ã —Å –Ω–∏–∑–∫–∏–º –ì–ò (<50)
  lowGI: [
    '–±—Ä–æ–∫–∫–æ–ª–∏', '–∫–∞–ø—É—Å—Ç–∞', '–æ–≥—É—Ä—Ü—ã', '–ø–æ–º–∏–¥–æ—Ä—ã',
    '–ª–∏—Å—Ç–æ–≤–∞—è –∑–µ–ª–µ–Ω—å', '—à–ø–∏–Ω–∞—Ç', '—Ä—É–∫–∫–æ–ª–∞',
    '–æ—Ä–µ—Ö–∏', '—Å–µ–º–µ–Ω–∞', '–∞–≤–æ–∫–∞–¥–æ',
    '—Ä—ã–±–∞', '–∫—É—Ä–∏—Ü–∞', '–∏–Ω–¥–µ–π–∫–∞', '—è–π—Ü–∞'
  ]
};

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –¥–∏–∞–±–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
export const checkDiabeticRestrictions = (ingredients) => {
  if (!ingredients || typeof ingredients !== 'string') {
    return {
      isDiabeticFriendly: false,
      warnings: ['–ù–µ —É–∫–∞–∑–∞–Ω—ã –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'],
      recommendations: ['–£–∫–∞–∂–∏—Ç–µ –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏']
    };
  }

  const ingredientList = ingredients.toLowerCase().split(/[,\n\r]+/).map(i => i.trim());
  const warnings = [];
  const recommendations = [];
  let isDiabeticFriendly = true;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
  for (const ingredient of ingredientList) {
    for (const forbidden of diabeticRestrictions.forbidden) {
      if (ingredient.includes(forbidden)) {
        warnings.push(`‚ö†Ô∏è "${ingredient}" —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç: ${forbidden}`);
        isDiabeticFriendly = false;
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    for (const limited of diabeticRestrictions.limited) {
      if (ingredient.includes(limited)) {
        warnings.push(`‚ö†Ô∏è "${ingredient}" - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –º–∞–ª—ã—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞—Ö`);
      }
    }
  }

  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–º–µ–Ω–∏—Ç–µ–ª—è–º
  if (ingredients.toLowerCase().includes('—Å–∞—Ö–∞—Ä')) {
    recommendations.push('üí° –ó–∞–º–µ–Ω–∏—Ç–µ —Å–∞—Ö–∞—Ä –Ω–∞ —Å—Ç–µ–≤–∏—é, —ç—Ä–∏—Ç—Ä–∏—Ç –∏–ª–∏ –∫—Å–∏–ª–∏—Ç');
  }
  if (ingredients.toLowerCase().includes('–±–µ–ª–∞—è –º—É–∫–∞')) {
    recommendations.push('üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∏–Ω–¥–∞–ª—å–Ω—É—é –∏–ª–∏ –∫–æ–∫–æ—Å–æ–≤—É—é –º—É–∫—É –≤–º–µ—Å—Ç–æ –±–µ–ª–æ–π');
  }
  if (ingredients.toLowerCase().includes('–±–µ–ª—ã–π —Ö–ª–µ–±')) {
    recommendations.push('üí° –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤–æ–π —Ö–ª–µ–± –∏–ª–∏ —Ö–ª–µ–±—Ü—ã');
  }

  return {
    isDiabeticFriendly,
    warnings,
    recommendations,
    ingredientCount: ingredientList.length,
    forbiddenCount: warnings.filter(w => w.includes('–∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π')).length,
    limitedCount: warnings.filter(w => w.includes('–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π')).length
  };
};

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –≥–ª–∏–∫–µ–º–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –±–ª—é–¥–∞
export const calculateDishGI = (ingredients) => {
  if (!ingredients || typeof ingredients !== 'string') {
    return { gi: 0, level: 'unknown', description: '–ù–µ —É–∫–∞–∑–∞–Ω—ã –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã' };
  }

  const ingredientList = ingredients.toLowerCase().split(/[,\n\r]+/).map(i => i.trim());
  let totalGI = 0;
  let ingredientCount = 0;

  for (const ingredient of ingredientList) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã—Å–æ–∫–∏–π –ì–ò
    for (const highGI of diabeticRestrictions.highGI) {
      if (ingredient.includes(highGI)) {
        totalGI += 80; // –°—Ä–µ–¥–Ω–∏–π –≤—ã—Å–æ–∫–∏–π –ì–ò
        ingredientCount++;
        break;
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–µ–¥–Ω–∏–π –ì–ò
    for (const mediumGI of diabeticRestrictions.mediumGI) {
      if (ingredient.includes(mediumGI)) {
        totalGI += 60; // –°—Ä–µ–¥–Ω–∏–π –ì–ò
        ingredientCount++;
        break;
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∏–∑–∫–∏–π –ì–ò
    for (const lowGI of diabeticRestrictions.lowGI) {
      if (ingredient.includes(lowGI)) {
        totalGI += 30; // –ù–∏–∑–∫–∏–π –ì–ò
        ingredientCount++;
        break;
      }
    }

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å–∞—Ö–∞—Ä–∞ - –æ–Ω –¥–æ–ª–∂–µ–Ω –¥–∞–≤–∞—Ç—å –≤—ã—Å–æ–∫–∏–π –ì–ò
    if (ingredient.includes('—Å–∞—Ö–∞—Ä')) {
      totalGI += 100; // –°–∞—Ö–∞—Ä –∏–º–µ–µ—Ç –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –ì–ò
      ingredientCount++;
    }
  }

  const averageGI = ingredientCount > 0 ? totalGI / ingredientCount : 0;
  
  let level, description;
  if (averageGI >= 70) {
    level = 'high';
    description = '–í—ã—Å–æ–∫–∏–π –ì–ò - –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤';
  } else if (averageGI >= 50) {
    level = 'medium';
    description = '–°—Ä–µ–¥–Ω–∏–π –ì–ò - –º–æ–∂–Ω–æ –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞—Ö';
  } else {
    level = 'low';
    description = '–ù–∏–∑–∫–∏–π –ì–ò - –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤';
  }

  return {
    gi: Math.round(averageGI),
    level,
    description
  };
};

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤
export const generateDiabeticRecommendations = (ingredients, gi, isDiabeticFriendly) => {
  const recommendations = [];

  if (isDiabeticFriendly) {
    recommendations.push('‚úÖ –ë–ª—é–¥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–∏–∞–±–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–µ–Ω—é');
    
    if (gi.level === 'low') {
      recommendations.push('üü¢ –ù–∏–∑–∫–∏–π –≥–ª–∏–∫–µ–º–∏—á–µ—Å–∫–∏–π –∏–Ω–¥–µ–∫—Å - –æ—Ç–ª–∏—á–Ω–æ –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤');
    } else if (gi.level === 'medium') {
      recommendations.push('üü° –°—Ä–µ–¥–Ω–∏–π –≥–ª–∏–∫–µ–º–∏—á–µ—Å–∫–∏–π –∏–Ω–¥–µ–∫—Å - –º–æ–∂–Ω–æ –≤ —É–º–µ—Ä–µ–Ω–Ω—ã—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞—Ö');
    }
  } else {
    recommendations.push('‚ùå –ë–ª—é–¥–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–∏–∞–±–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–µ–Ω—é');
    recommendations.push('üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤');
  }

  // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  if (ingredients.toLowerCase().includes('–æ–≤–æ—â–∏')) {
    recommendations.push('ü•¨ –û–≤–æ—â–∏ - –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤');
  }
  if (ingredients.toLowerCase().includes('–±–µ–ª–æ–∫')) {
    recommendations.push('ü•© –ë–µ–ª–æ–∫ –ø–æ–º–æ–≥–∞–µ—Ç —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞');
  }
  if (ingredients.toLowerCase().includes('–∫–ª–µ—Ç—á–∞—Ç–∫–∞')) {
    recommendations.push('üåæ –ö–ª–µ—Ç—á–∞—Ç–∫–∞ –∑–∞–º–µ–¥–ª—è–µ—Ç –≤—Å–∞—Å—ã–≤–∞–Ω–∏–µ —É–≥–ª–µ–≤–æ–¥–æ–≤');
  }

  return recommendations;
};
