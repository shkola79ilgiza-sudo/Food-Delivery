/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è localStorage
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–∏
 */

class StorageManager {
  constructor() {
    this.maxSize = 5 * 1024 * 1024; // 5 –ú–ë (–ø—Ä–∏–º–µ—Ä–Ω—ã–π –ª–∏–º–∏—Ç localStorage)
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä localStorage –≤ –±–∞–π—Ç–∞—Ö
   */
  getCurrentSize() {
    let total = 0;
    for (let key in localStorage) {
      if (localStorage.hasOwnProperty(key)) {
        total += localStorage[key].length + key.length;
      }
    }
    return total;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
   */
  getReadableSize(bytes) {
    if (bytes < 1024) return bytes + ' B';
    if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(2) + ' KB';
    return (bytes / (1024 * 1024)).toFixed(2) + ' MB';
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ localStorage –±–æ–ª–µ–µ —á–µ–º –Ω–∞ X%
   */
  isAlmostFull(threshold = 80) {
    const currentSize = this.getCurrentSize();
    const percentFull = (currentSize / this.maxSize) * 100;
    return percentFull > threshold;
  }

  /**
   * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–æ–π
   */
  safeSetItem(key, value, onSuccess, onError) {
    try {
      localStorage.setItem(key, value);
      if (onSuccess) onSuccess();
      return true;
    } catch (e) {
      if (e.name === 'QuotaExceededError') {
        console.warn('‚ö†Ô∏è localStorage –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω!');
        console.log(`üìä –¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: ${this.getReadableSize(this.getCurrentSize())}`);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞
        const cleaned = this.autoClean();
        
        if (cleaned) {
          // –ü—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–Ω–æ–≤–∞
          try {
            localStorage.setItem(key, value);
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏');
            if (onSuccess) onSuccess();
            return true;
          } catch (err) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏');
            if (onError) onError(err);
            return false;
          }
        } else {
          if (onError) onError(e);
          return false;
        }
      } else {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', e);
        if (onError) onError(e);
        return false;
      }
    }
  }

  /**
   * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö/–±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
   */
  autoClean() {
    console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É localStorage...');
    
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É–¥–∞–ª–µ–Ω–∏—è (–æ—Ç –º–µ–Ω–µ–µ –≤–∞–∂–Ω–æ–≥–æ –∫ –±–æ–ª–µ–µ –≤–∞–∂–Ω–æ–º—É)
    const cleanupPriority = [
      'referenceObjects',    // –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ (–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–Ω–æ–≤–æ)
      'orderHistory',        // –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ (—Å—Ç–∞—Ä–∞—è)
      'clientOrders',        // –ó–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–∞ (—Å—Ç–∞—Ä—ã–µ)
      'dishes',              // –ë–ª—é–¥–∞ (–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–Ω–æ–≤–æ)
      'favorites',           // –ò–∑–±—Ä–∞–Ω–Ω–æ–µ (–º–µ–Ω–µ–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)
      'deliveryInfo',        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ (–º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ)
      'paymentInfo'          // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ (–º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ)
    ];
    
    let cleaned = false;
    const sizeBefore = this.getCurrentSize();
    
    for (const key of cleanupPriority) {
      if (localStorage.getItem(key)) {
        const itemSize = localStorage.getItem(key).length;
        localStorage.removeItem(key);
        console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ: ${key} (${this.getReadableSize(itemSize)})`);
        cleaned = true;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –º–µ—Å—Ç–∞ –æ—Å–≤–æ–±–æ–¥–∏–ª–∏
        const sizeAfter = this.getCurrentSize();
        const freed = sizeBefore - sizeAfter;
        
        if (freed > 1024 * 1024) { // –ï—Å–ª–∏ –æ—Å–≤–æ–±–æ–¥–∏–ª–∏ –±–æ–ª—å—à–µ 1 –ú–ë
          console.log(`‚úÖ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ: ${this.getReadableSize(freed)}`);
          break;
        }
      }
    }
    
    const sizeAfter = this.getCurrentSize();
    console.log(`üìä –†–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: ${this.getReadableSize(sizeAfter)}`);
    
    return cleaned;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ localStorage
   */
  getInfo() {
    const currentSize = this.getCurrentSize();
    const percentFull = (currentSize / this.maxSize) * 100;
    
    const items = [];
    for (let key in localStorage) {
      if (localStorage.hasOwnProperty(key)) {
        const value = localStorage[key];
        items.push({
          key,
          size: value.length,
          readableSize: this.getReadableSize(value.length)
        });
      }
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–∞–∑–º–µ—Ä—É (–æ—Ç –±–æ–ª—å—à–µ–≥–æ –∫ –º–µ–Ω—å—à–µ–º—É)
    items.sort((a, b) => b.size - a.size);
    
    return {
      totalSize: currentSize,
      readableSize: this.getReadableSize(currentSize),
      maxSize: this.maxSize,
      percentFull: percentFull.toFixed(2),
      itemsCount: items.length,
      items: items
    };
  }

  /**
   * –í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å
   */
  logInfo() {
    const info = this.getInfo();
    console.log('üìä localStorage Info:');
    console.log(`   –†–∞–∑–º–µ—Ä: ${info.readableSize} / ${this.getReadableSize(info.maxSize)} (${info.percentFull}%)`);
    console.log(`   –≠–ª–µ–º–µ–Ω—Ç–æ–≤: ${info.itemsCount}`);
    console.log('   –¢–æ–ø-5 —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:');
    info.items.slice(0, 5).forEach((item, index) => {
      console.log(`   ${index + 1}. ${item.key}: ${item.readableSize}`);
    });
  }

  /**
   * –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ localStorage (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
   */
  clearAll() {
    console.warn('‚ö†Ô∏è –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ localStorage!');
    localStorage.clear();
    console.log('‚úÖ localStorage –æ—á–∏—â–µ–Ω');
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
   */
  clearTemp() {
    const tempKeys = [
      'referenceObjects',
      'orderHistory',
      'clientOrders',
      'dishes'
    ];
    
    tempKeys.forEach(key => {
      if (localStorage.getItem(key)) {
        localStorage.removeItem(key);
        console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ: ${key}`);
      }
    });
    
    console.log('‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
  }
}

// –°–æ–∑–¥–∞—ë–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const storageManager = new StorageManager();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
export default storageManager;

// –î–æ–±–∞–≤–ª—è–µ–º –≤ window –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
if (typeof window !== 'undefined') {
  window.storageManager = storageManager;
  console.log('üí° –î–æ—Å—Ç—É–ø –∫ storageManager —á–µ—Ä–µ–∑ window.storageManager');
  console.log('   –ö–æ–º–∞–Ω–¥—ã:');
  console.log('   - storageManager.logInfo() - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ localStorage');
  console.log('   - storageManager.clearTemp() - –æ—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  console.log('   - storageManager.clearAll() - –ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)');
}

