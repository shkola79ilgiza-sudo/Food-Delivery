/**
 * üéÑ AI-–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö –°–µ—Ç-–ú–µ–Ω—é
 *
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–æ—Ç–æ–≤—ã–µ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã –±–ª—é–¥ –¥–ª—è –ø–æ–≤–∞—Ä–æ–≤
 * –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –º–µ–Ω—é –∏ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤.
 */

class AIHolidaySetMenuGenerator {
  constructor() {
    // –ë–∞–∑–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –†–æ—Å—Å–∏–∏ –∏ –º–∏—Ä–∞
    this.holidays = {
      "–ù–æ–≤—ã–π –≥–æ–¥": {
        date: "31.12",
        keywords: [
          "–æ–ª–∏–≤—å–µ",
          "—Å–µ–ª–µ–¥–∫–∞ –ø–æ–¥ —à—É–±–æ–π",
          "–º–∞–Ω–¥–∞—Ä–∏–Ω—ã",
          "—à–∞–º–ø–∞–Ω—Å–∫–æ–µ",
          "—Ö–æ–ª–æ–¥–µ—Ü",
        ],
        targetAudience: "—Å–µ–º—å—è",
        avgBudget: 5000,
        color: "#ff4444",
      },
      "8 –ú–∞—Ä—Ç–∞": {
        date: "08.03",
        keywords: ["—Ç–æ—Ä—Ç", "–¥–µ—Å–µ—Ä—Ç", "—à–∞–º–ø–∞–Ω—Å–∫–æ–µ", "—Å–∞–ª–∞—Ç", "—Ñ—Ä—É–∫—Ç—ã", "—Ü–≤–µ—Ç—ã"],
        targetAudience: "–∂–µ–Ω—â–∏–Ω—ã",
        avgBudget: 3000,
        color: "#ff69b4",
      },
      "23 –§–µ–≤—Ä–∞–ª—è": {
        date: "23.02",
        keywords: ["–º—è—Å–æ", "—à–∞—à–ª—ã–∫", "–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å", "—Å–æ–ª–µ–Ω—å—è", "–ø–∏–≤–æ", "–∑–∞–∫—É—Å–∫–∏"],
        targetAudience: "–º—É–∂—á–∏–Ω—ã",
        avgBudget: 3500,
        color: "#4a90e2",
      },
      –ü–∞—Å—Ö–∞: {
        date: "variable",
        keywords: ["–∫—É–ª–∏—á", "–ø–∞—Å—Ö–∞", "—è–π—Ü–∞", "—Ç–≤–æ—Ä–æ–≥", "—Å—ã—Ä–Ω–∞—è –ø–∞—Å—Ö–∞"],
        targetAudience: "—Å–µ–º—å—è",
        avgBudget: 2500,
        color: "#ffd700",
      },
      "–î–µ–Ω—å –ü–æ–±–µ–¥—ã": {
        date: "09.05",
        keywords: ["–±–æ—Ä—â", "–ø–∏—Ä–æ–∂–∫–∏", "–∫–∞—à–∞", "–∫–æ–º–ø–æ—Ç", "—Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –±–ª—é–¥–∞"],
        targetAudience: "–ø–æ–∂–∏–ª—ã–µ, —Å–µ–º—å—è",
        avgBudget: 2000,
        color: "#ff6b6b",
      },
      –ú–∞—Å–ª–µ–Ω–∏—Ü–∞: {
        date: "variable",
        keywords: ["–±–ª–∏–Ω—ã", "–∏–∫—Ä–∞", "—Å–º–µ—Ç–∞–Ω–∞", "–º—ë–¥", "–≤–∞—Ä–µ–Ω—å–µ"],
        targetAudience: "—Å–µ–º—å—è",
        avgBudget: 1500,
        color: "#ffaa00",
      },
      "–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è": {
        date: "any",
        keywords: ["—Ç–æ—Ä—Ç", "–ø–∏—Ü—Ü–∞", "—Å–∞–ª–∞—Ç—ã", "–Ω–∞–ø–∏—Ç–∫–∏", "–∑–∞–∫—É—Å–∫–∏"],
        targetAudience: "–ª—é–±–∞—è",
        avgBudget: 4000,
        color: "#9c27b0",
      },
      –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤: {
        date: "any",
        keywords: ["—Ñ—É—Ä—à–µ—Ç", "–∫–∞–Ω–∞–ø–µ", "—Å–∞–ª–∞—Ç—ã", "–≥–æ—Ä—è—á–µ–µ", "–¥–µ—Å–µ—Ä—Ç"],
        targetAudience: "–æ—Ñ–∏—Å",
        avgBudget: 8000,
        color: "#3f51b5",
      },
    };

    // –¢–∏–ø—ã —Å–µ—Ç-–º–µ–Ω—é –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–µ—Ä—Å–æ–Ω
    this.setTypes = {
      romantic: { persons: 2, name: "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —É–∂–∏–Ω", margin: 50 },
      family: { persons: 4, name: "–°–µ–º–µ–π–Ω—ã–π –Ω–∞–±–æ—Ä", margin: 45 },
      party: { persons: 8, name: "–í–µ—á–µ—Ä–∏–Ω–∫–∞", margin: 40 },
      corporate: { persons: 15, name: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π", margin: 35 },
      banquet: { persons: 30, name: "–ë–∞–Ω–∫–µ—Ç", margin: 30 },
    };
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –±–ª–∏–∂–∞–π—à–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫
   */
  getUpcomingHoliday() {
    const today = new Date();
    const currentMonth = today.getMonth() + 1;
    const currentDay = today.getDate();

    // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞: –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –±–ª–∏–∂–∞–π—à–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –ø–æ –¥–∞—Ç–µ
    if (currentMonth === 12 && currentDay >= 20) return "–ù–æ–≤—ã–π –≥–æ–¥";
    if (currentMonth === 2 && currentDay >= 15) return "23 –§–µ–≤—Ä–∞–ª—è";
    if (currentMonth === 3 && currentDay <= 10) return "8 –ú–∞—Ä—Ç–∞";
    if (currentMonth === 4 || currentMonth === 5) return "–ü–∞—Å—Ö–∞";
    if (currentMonth === 5 && currentDay <= 12) return "–î–µ–Ω—å –ü–æ–±–µ–¥—ã";
    if (currentMonth === 2 && currentDay <= 15) return "–ú–∞—Å–ª–µ–Ω–∏—Ü–∞";

    return "–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ —Å–µ—Ç-–º–µ–Ω—é —Å –ø–æ–º–æ—â—å—é AI
   *
   * @param {Array} chefDishes - –±–ª—é–¥–∞ –ø–æ–≤–∞—Ä–∞
   * @param {String} holiday - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞
   * @param {String} setType - —Ç–∏–ø –Ω–∞–±–æ—Ä–∞ (romantic, family, party, etc.)
   * @param {Object} options - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
   * @returns {Object} —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–µ—Ç-–º–µ–Ω—é
   */
  async generateHolidaySet(
    chefDishes,
    holiday = null,
    setType = "family",
    options = {}
  ) {
    try {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–∑–¥–Ω–∏–∫
      const selectedHoliday = holiday || this.getUpcomingHoliday();
      const holidayData = this.holidays[selectedHoliday];
      const setTypeData = this.setTypes[setType];

      if (!holidayData || !setTypeData) {
        throw new Error("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –∏–ª–∏ —Ç–∏–ø –Ω–∞–±–æ—Ä–∞");
      }

      console.log(`üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç-–º–µ–Ω—é –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏–∫–∞: ${selectedHoliday}`);

      // –§–∏–ª—å—Ç—Ä—É–µ–º –±–ª—é–¥–∞ –ø–æ–≤–∞—Ä–∞ –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫—É
      const relevantDishes = this.filterDishesByHoliday(
        chefDishes,
        holidayData
      );

      if (relevantDishes.length === 0) {
        return {
          success: false,
          error:
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –±–ª—é–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞",
        };
      }

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–º–ø–æ–∑–∏—Ü–∏—é –Ω–∞–±–æ—Ä–∞
      const setComposition = this.composeSet(
        relevantDishes,
        setTypeData.persons,
        holidayData,
        options
      );

      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É —Å –º–∞—Ä–∂–æ–π
      const pricing = this.calculateSetPricing(
        setComposition,
        setTypeData.margin,
        holidayData.avgBudget
      );

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º AI-–æ–ø–∏—Å–∞–Ω–∏–µ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
      const aiDescription = await this.generateAIDescription(
        selectedHoliday,
        setComposition,
        setTypeData,
        pricing
      );

      // –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      return {
        success: true,
        set: {
          id: `holiday-set-${Date.now()}`,
          name: aiDescription.name,
          holiday: selectedHoliday,
          type: setType,
          persons: setTypeData.persons,
          dishes: setComposition,
          pricing: pricing,
          description: aiDescription.description,
          tags: aiDescription.tags,
          promoText: aiDescription.promoText,
          validUntil: this.getHolidayDeadline(selectedHoliday),
          color: holidayData.color,
        },
      };
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ç-–º–µ–Ω—é:", error);
      return {
        success: false,
        error: error.message,
      };
    }
  }

  /**
   * –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –±–ª—é–¥ –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫—É
   */
  filterDishesByHoliday(dishes, holidayData) {
    return dishes
      .map((dish) => {
        let relevanceScore = 0;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        const dishText = `${dish.name} ${dish.description || ""} ${
          dish.ingredients || ""
        }`.toLowerCase();

        holidayData.keywords.forEach((keyword) => {
          if (dishText.includes(keyword.toLowerCase())) {
            relevanceScore += 10;
          }
        });

        // –ë–æ–Ω—É—Å –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        if (
          dish.category === "salads" &&
          holidayData.keywords.includes("—Å–∞–ª–∞—Ç")
        )
          relevanceScore += 5;
        if (
          dish.category === "desserts" &&
          holidayData.keywords.includes("–¥–µ—Å–µ—Ä—Ç")
        )
          relevanceScore += 5;
        if (
          dish.category === "mainCourses" &&
          holidayData.keywords.includes("–º—è—Å–æ")
        )
          relevanceScore += 5;

        return {
          ...dish,
          relevanceScore,
        };
      })
      .filter((dish) => dish.relevanceScore > 0)
      .sort((a, b) => b.relevanceScore - a.relevanceScore);
  }

  /**
   * –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –Ω–∞–±–æ—Ä–∞
   */
  composeSet(dishes, persons, holidayData, options = {}) {
    const composition = [];
    const categories = {
      salads: Math.ceil(persons / 4), // 1 —Å–∞–ª–∞—Ç –Ω–∞ 4 —á–µ–ª–æ–≤–µ–∫–∞
      mainCourses: Math.ceil(persons / 3), // 1 –≥–æ—Ä—è—á–µ–µ –Ω–∞ 3 —á–µ–ª–æ–≤–µ–∫–∞
      desserts: Math.ceil(persons / 4), // 1 –¥–µ—Å–µ—Ä—Ç –Ω–∞ 4 —á–µ–ª–æ–≤–µ–∫–∞
      appetizers: Math.ceil(persons / 5), // 1 –∑–∞–∫—É—Å–∫–∞ –Ω–∞ 5 —á–µ–ª–æ–≤–µ–∫
      beverages: Math.ceil(persons / 6), // 1 –Ω–∞–ø–∏—Ç–æ–∫ –Ω–∞ 6 —á–µ–ª–æ–≤–µ–∫
    };

    // –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞–±–æ—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    Object.keys(categories).forEach((category) => {
      const categoryDishes = dishes.filter((d) => d.category === category);
      const needed = categories[category];

      for (let i = 0; i < needed && i < categoryDishes.length; i++) {
        composition.push({
          ...categoryDishes[i],
          quantity: 1,
          portionsPerDish: Math.ceil(persons / needed),
        });
      }
    });

    // –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–ª—é–¥, –¥–æ–±–∞–≤–ª—è–µ–º —Å–∞–º—ã–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ
    if (composition.length < 3) {
      dishes.slice(0, 5 - composition.length).forEach((dish) => {
        if (!composition.find((d) => d.id === dish.id)) {
          composition.push({
            ...dish,
            quantity: 1,
            portionsPerDish: Math.ceil(persons / 3),
          });
        }
      });
    }

    return composition;
  }

  /**
   * –†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã –Ω–∞–±–æ—Ä–∞ —Å –º–∞—Ä–∂–æ–π
   */
  calculateSetPricing(composition, targetMargin, avgBudget) {
    let totalCost = 0;
    let totalCalories = 0;
    let totalProtein = 0;
    let totalCarbs = 0;
    let totalFat = 0;

    composition.forEach((item) => {
      const itemCost = (item.price || 0) * (item.quantity || 1);
      totalCost += itemCost;

      // –ö–ë–ñ–£ –Ω–∞ –≤—Å–µ –ø–æ—Ä—Ü–∏–∏
      const portions = item.portionsPerDish || 1;
      totalCalories += (item.calories || 0) * portions;
      totalProtein += (item.protein || 0) * portions;
      totalCarbs += (item.carbs || 0) * portions;
      totalFat += (item.fat || 0) * portions;
    });

    // –¶–µ–Ω–∞ —Å –º–∞—Ä–∂–æ–π
    const priceWithMargin = Math.ceil(totalCost * (1 + targetMargin / 100));

    // –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ –∫—Ä–∞—Å–∏–≤–æ–≥–æ —á–∏—Å–ª–∞
    const finalPrice = Math.ceil(priceWithMargin / 100) * 100;

    // –°–∫–∏–¥–∫–∞ –¥–ª—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const discount = Math.floor(Math.random() * 15) + 10; // 10-25%
    const discountedPrice = Math.ceil(finalPrice * (1 - discount / 100));

    return {
      baseCost: totalCost,
      recommendedPrice: finalPrice,
      discountedPrice: discountedPrice,
      discount: discount,
      margin: Math.round(((finalPrice - totalCost) / totalCost) * 100),
      savings: finalPrice - discountedPrice,
      nutrition: {
        totalCalories,
        totalProtein,
        totalCarbs,
        totalFat,
        perPerson: {
          calories: Math.round(
            totalCalories / composition[0]?.portionsPerDish || 1
          ),
          protein: Math.round(
            totalProtein / composition[0]?.portionsPerDish || 1
          ),
          carbs: Math.round(totalCarbs / composition[0]?.portionsPerDish || 1),
          fat: Math.round(totalFat / composition[0]?.portionsPerDish || 1),
        },
      },
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è AI-–æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞–±–æ—Ä–∞
   */
  async generateAIDescription(holiday, composition, setTypeData, pricing) {
    const dishNames = composition.map((d) => d.name).join(", ");
    const persons = setTypeData.persons;

    // –°–∏–º—É–ª—è—Ü–∏—è AI (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ - –≤—ã–∑–æ–≤ GPT/Gemini)
    const aiPrompt = `
      –°–æ–∑–¥–∞–π –ø—Ä–æ–¥–∞—é—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞:
      –ü—Ä–∞–∑–¥–Ω–∏–∫: ${holiday}
      –ë–ª—é–¥–∞: ${dishNames}
      –ü–µ—Ä—Å–æ–Ω: ${persons}
      –¶–µ–Ω–∞: ${pricing.discountedPrice}‚ÇΩ (—Å–∫–∏–¥–∫–∞ ${pricing.discount}%)
    `;

    console.log("ü§ñ AI –ü—Ä–æ–º—Ç:", aiPrompt);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞
    const names = {
      "–ù–æ–≤—ã–π –≥–æ–¥": `üéÑ –ù–æ–≤–æ–≥–æ–¥–Ω–∏–π –°–µ–º–µ–π–Ω—ã–π –°—Ç–æ–ª –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω`,
      "8 –ú–∞—Ä—Ç–∞": `üå∏ –í–µ—Å–µ–Ω–Ω–∏–π –ù–∞–±–æ—Ä –∫ 8 –ú–∞—Ä—Ç–∞ –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω`,
      "23 –§–µ–≤—Ä–∞–ª—è": `üéñÔ∏è –ú—É–∂—Å–∫–æ–π –ù–∞–±–æ—Ä –∫ 23 –§–µ–≤—Ä–∞–ª—è –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω`,
      –ü–∞—Å—Ö–∞: `ü•ö –ü–∞—Å—Ö–∞–ª—å–Ω—ã–π –°—Ç–æ–ª –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω`,
      "–î–µ–Ω—å –ü–æ–±–µ–¥—ã": `üéóÔ∏è –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –ù–∞–±–æ—Ä –∫–æ –î–Ω—é –ü–æ–±–µ–¥—ã –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω`,
      –ú–∞—Å–ª–µ–Ω–∏—Ü–∞: `ü•û –ú–∞—Å–ª–µ–Ω–∏—á–Ω—ã–π –ù–∞–±–æ—Ä –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω`,
      "–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è": `üéÇ –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –ù–∞–±–æ—Ä –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω`,
      –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤: `üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ù–∞–±–æ—Ä –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω`,
    };

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    const descriptions = {
      "–ù–æ–≤—ã–π –≥–æ–¥": `–í—Å—Ç—Ä–µ—á–∞–π—Ç–µ –ù–æ–≤—ã–π –≥–æ–¥ —Å –Ω–∞—à–∏–º –≥–æ—Ç–æ–≤—ã–º –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–º —Å—Ç–æ–ª–æ–º! –í–∫–ª—é—á–∞–µ—Ç ${composition.length} –∏–∑—ã—Å–∫–∞–Ω–Ω—ã—Ö –±–ª—é–¥: ${dishNames}. –í—Å–µ –±–ª—é–¥–∞ —Å–≤–µ–∂–µ–ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ, —É–ø–∞–∫–æ–≤–∞–Ω—ã –≤ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—É—é —É–ø–∞–∫–æ–≤–∫—É. –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ + —Å–∫–∏–¥–∫–∞ ${pricing.discount}%!`,
      "8 –ú–∞—Ä—Ç–∞": `–ü–æ—Ä–∞–¥—É–π—Ç–µ –ª—é–±–∏–º—ã—Ö –∂–µ–Ω—â–∏–Ω! –ì–æ—Ç–æ–≤—ã–π –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –Ω–∞–±–æ—Ä –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω. –í —Å–æ—Å—Ç–∞–≤–µ: ${dishNames}. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ + –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞. –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${pricing.discountedPrice}‚ÇΩ –≤–º–µ—Å—Ç–æ ${pricing.recommendedPrice}‚ÇΩ!`,
      "23 –§–µ–≤—Ä–∞–ª—è": `–ú—É–∂—Å–∫–æ–π –ø—Ä–∞–∑–¥–Ω–∏–∫ —Ç—Ä–µ–±—É–µ—Ç –º—É–∂—Å–∫–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞! –°—ã—Ç–Ω—ã–π –Ω–∞–±–æ—Ä –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω: ${dishNames}. –í—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –æ—Ç–ª–∏—á–Ω–æ–≥–æ –≤–µ—á–µ—Ä–∞. –°–∫–∏–¥–∫–∞ ${pricing.discount}%!`,
      –ü–∞—Å—Ö–∞: `–°–≤–µ—Ç–ª—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –ü–∞—Å—Ö–∏ - —Å–≤–µ—Ç–ª—ã–µ —ç–º–æ—Ü–∏–∏! –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω. –í —Å–æ—Å—Ç–∞–≤–µ: ${dishNames}. –û—Å–≤—è—â–µ–Ω–æ —Å –ª—é–±–æ–≤—å—é, –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ —Å –∑–∞–±–æ—Ç–æ–π!`,
      "–î–µ–Ω—å –ü–æ–±–µ–¥—ã": `–í –ø–∞–º—è—Ç—å –æ –≤–µ–ª–∏–∫–æ–º –ø–æ–¥–≤–∏–≥–µ! –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω: ${dishNames}. –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞ —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ –≤–µ—Ç–µ—Ä–∞–Ω–∞–º.`,
      –ú–∞—Å–ª–µ–Ω–∏—Ü–∞: `–®–∏—Ä–æ–∫–∞—è –ú–∞—Å–ª–µ–Ω–∏—Ü–∞ –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω! –ë–ª–∏–Ω—ã –∏ –≤—Å—ë, —á—Ç–æ –∫ –Ω–∏–º –Ω—É–∂–Ω–æ: ${dishNames}. –ì–æ—Ç–æ–≤–æ –∫ —Å—Ç–æ–ª—É - –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–æ–≥—Ä–µ–π!`,
      "–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è": `–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è - —ç—Ç–æ –ª–µ–≥–∫–æ! –ì–æ—Ç–æ–≤—ã–π –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —Å—Ç–æ–ª –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω: ${dishNames}. –í–∞–º –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≥–æ—Å—Ç–µ–π!`,
      –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤: `–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω –±–µ–∑ —Ö–ª–æ–ø–æ—Ç! –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ—É—Ä—à–µ—Ç: ${dishNames}. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ –æ—Ñ–∏—Å + —Å–µ—Ä–≤–∏—Ä–æ–≤–∫–∞!`,
    };

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–º–æ-—Ç–µ–∫—Å—Ç
    const promoTexts = {
      "–ù–æ–≤—ã–π –≥–æ–¥": `üéÅ –ù–û–í–û–ì–û–î–ù–Ø–Ø –ê–ö–¶–ò–Ø! –ó–∞–∫–∞–∂–∏—Ç–µ —Å–µ—Ç-–º–µ–Ω—é –¥–æ 28 –¥–µ–∫–∞–±—Ä—è –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ —à–∞–º–ø–∞–Ω—Å–∫–æ–µ + –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –¥–µ–∫–æ—Ä —Å—Ç–æ–ª–∞!`,
      "8 –ú–∞—Ä—Ç–∞": `üíê –ö 8 –ú–∞—Ä—Ç–∞: –ö–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ - —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –æ—Ç–∫—Ä—ã—Ç–∫–æ–π –∏ —Ü–≤–µ—Ç–æ—á–Ω–æ–π –∫–æ–º–ø–æ–∑–∏—Ü–∏–µ–π! –¢–æ–ª—å–∫–æ –¥–æ 7 –º–∞—Ä—Ç–∞!`,
      "23 –§–µ–≤—Ä–∞–ª—è": `üéñÔ∏è –ó–∞—â–∏—Ç–Ω–∏–∫–∞–º —Å–∫–∏–¥–∫–∞! –ü—Ä–∏ –∑–∞–∫–∞–∑–µ –Ω–∞–±–æ—Ä–∞ - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ + —Ç–æ—Å—Ç –∑–∞ –≥–µ—Ä–æ–µ–≤!`,
      –ü–∞—Å—Ö–∞: `üïäÔ∏è –•—Ä–∏—Å—Ç–æ—Å –í–æ—Å–∫—Ä–µ—Å–µ! –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–∞ –ø–∞—Å—Ö–∞–ª—å–Ω—ã–µ –Ω–∞–±–æ—Ä—ã + –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞ –¥–ª—è –∫—É–ª–∏—á–∞!`,
      "–î–µ–Ω—å –ü–æ–±–µ–¥—ã": `üéóÔ∏è –°–æ —Å–≤–µ—Ç–ª—ã–º –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º! –°–∫–∏–¥–∫–∞ 9% –Ω–∞ –≤—Å–µ –Ω–∞–±–æ—Ä—ã –≤ —á–µ—Å—Ç—å –î–Ω—è –ü–æ–±–µ–¥—ã!`,
      –ú–∞—Å–ª–µ–Ω–∏—Ü–∞: `üî• –ú–∞—Å–ª–µ–Ω–∏—á–Ω–∞—è –Ω–µ–¥–µ–ª—è! –ó–∞–∫–∞–∂–∏ –Ω–∞–±–æ—Ä –∏ –ø–æ–ª—É—á–∏ —Ä–µ—Ü–µ–ø—Ç —Ñ–∏—Ä–º–µ–Ω–Ω—ã—Ö –±–ª–∏–Ω–æ–≤ –æ—Ç —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞!`,
      "–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è": `üéà –ò–º–µ–Ω–∏–Ω–Ω–∏–∫–∞–º –≤–µ–∑—ë—Ç! –°–∫–∏–¥–∫–∞ 15% –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –∑–∞ 3 –¥–Ω—è + –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Å–≤–µ—á–∞ –Ω–∞ —Ç–æ—Ä—Ç!`,
      –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤: `üè¢ –î–ª—è –∫–æ–º–ø–∞–Ω–∏–π –æ—Ç 15 —á–µ–ª–æ–≤–µ–∫ - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞, —Å–µ—Ä–≤–∏—Ä–æ–≤–∫–∞ –∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —á–µ–∫!`,
    };

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–≥–∏
    const tags = [
      `${holiday}`,
      `–ù–∞ ${persons} –ø–µ—Ä—Å–æ–Ω`,
      `–°–∫–∏–¥–∫–∞ ${pricing.discount}%`,
      "–ì–æ—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä",
      "–ü—Ä–∞–∑–¥–Ω–∏—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞",
    ];

    return {
      name: names[holiday] || `–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –ù–∞–±–æ—Ä –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω`,
      description:
        descriptions[holiday] ||
        `–ì–æ—Ç–æ–≤—ã–π –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —Å—Ç–æ–ª –Ω–∞ ${persons} –ø–µ—Ä—Å–æ–Ω. –í —Å–æ—Å—Ç–∞–≤–µ: ${dishNames}. –í—Å—ë –≤–∫–ª—é—á–µ–Ω–æ!`,
      promoText:
        promoTexts[holiday] ||
        `üéâ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ! –°–∫–∏–¥–∫–∞ ${pricing.discount}% –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã!`,
      tags: tags,
    };
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω –¥–ª—è –∑–∞–∫–∞–∑–∞ (–∑–∞ 2 –¥–Ω—è –¥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞)
   */
  getHolidayDeadline(holiday) {
    const holidayData = this.holidays[holiday];
    if (
      !holidayData ||
      holidayData.date === "any" ||
      holidayData.date === "variable"
    ) {
      return null;
    }

    const [day, month] = holidayData.date.split(".");
    const currentYear = new Date().getFullYear();
    const holidayDate = new Date(
      currentYear,
      parseInt(month) - 1,
      parseInt(day)
    );

    // –ó–∞ 2 –¥–Ω—è –¥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞
    const deadline = new Date(holidayDate);
    deadline.setDate(deadline.getDate() - 2);

    return deadline.toLocaleDateString("ru-RU");
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∞–±–æ—Ä–æ–≤
   */
  async generateMultipleVariants(chefDishes, holiday = null, options = {}) {
    const selectedHoliday = holiday || this.getUpcomingHoliday();
    const variants = [];

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä—Å–æ–Ω
    const types = ["romantic", "family", "party"];

    for (const type of types) {
      const variant = await this.generateHolidaySet(
        chefDishes,
        selectedHoliday,
        type,
        options
      );
      if (variant.success) {
        variants.push(variant.set);
      }
    }

    return {
      success: true,
      holiday: selectedHoliday,
      variants: variants,
      deadline: this.getHolidayDeadline(selectedHoliday),
    };
  }

  /**
   * AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –Ω–∞–±–æ—Ä–∞
   */
  generateOptimizationTips(set) {
    const tips = [];

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ö–ë–ñ–£
    const avgCalories = set.pricing.nutrition.perPerson.calories;
    if (avgCalories > 800) {
      tips.push({
        type: "warning",
        message: `‚ö†Ô∏è –í—ã—Å–æ–∫–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å (${avgCalories} –∫–∫–∞–ª/—á–µ–ª). –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å –ª—ë–≥–∫–∏–π —Å–∞–ª–∞—Ç –∏–ª–∏ –∑–∞–º–µ–Ω–∏—Ç—å –æ–¥–Ω–æ –±–ª—é–¥–æ.`,
      });
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω—ã
    const holidayData = this.holidays[set.holiday];
    if (set.pricing.discountedPrice > holidayData.avgBudget * 1.2) {
      tips.push({
        type: "info",
        message: `üí∞ –¶–µ–Ω–∞ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ ${Math.round(
          (set.pricing.discountedPrice / holidayData.avgBudget - 1) * 100
        )}%. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —É–≤–µ–ª–∏—á–∏—Ç—å —Å–∫–∏–¥–∫—É –∏–ª–∏ —É–º–µ–Ω—å—à–∏—Ç—å –ø–æ—Ä—Ü–∏–∏.`,
      });
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    if (set.dishes.length < 4) {
      tips.push({
        type: "suggestion",
        message: `üí° –î–æ–±–∞–≤—å—Ç–µ –µ—â—ë ${
          4 - set.dishes.length
        } –±–ª—é–¥–æ(–∞) –¥–ª—è –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞–±–æ—Ä–∞.`,
      });
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ë–ñ–£
    const protein = set.pricing.nutrition.perPerson.protein;
    const carbs = set.pricing.nutrition.perPerson.carbs;

    if (protein < 20) {
      tips.push({
        type: "suggestion",
        message: `ü•© –ù–∏–∑–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –±–µ–ª–∫–∞ (${protein}–≥). –î–æ–±–∞–≤—å—Ç–µ –º—è—Å–Ω–æ–µ –∏–ª–∏ —Ä—ã–±–Ω–æ–µ –±–ª—é–¥–æ.`,
      });
    }

    if (carbs > 100) {
      tips.push({
        type: "warning",
        message: `üçû –ú–Ω–æ–≥–æ —É–≥–ª–µ–≤–æ–¥–æ–≤ (${carbs}–≥). –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–±–æ—Ä –æ–≤–æ—â–∞–º–∏.`,
      });
    }

    return tips;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
   */
  getAvailableHolidays() {
    return Object.keys(this.holidays).map((name) => ({
      name,
      ...this.holidays[name],
    }));
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
   */
  getCurrentMonthHolidays() {
    const currentMonth = new Date().getMonth() + 1;
    const upcoming = [];

    Object.keys(this.holidays).forEach((name) => {
      const holiday = this.holidays[name];
      if (holiday.date !== "any" && holiday.date !== "variable") {
        const [month] = holiday.date.split("."); // day –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
        if (
          parseInt(month) === currentMonth ||
          parseInt(month) === currentMonth + 1
        ) {
          upcoming.push({
            name,
            ...holiday,
          });
        }
      }
    });

    return upcoming;
  }
}

// –°–æ–∑–¥–∞–µ–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
const aiHolidaySetMenuGenerator = new AIHolidaySetMenuGenerator();
export default aiHolidaySetMenuGenerator;
