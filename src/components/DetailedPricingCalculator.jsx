import React, { useState, useEffect } from 'react';
import { enhancedPricingCalculator } from '../utils/enhancedPricingCalculator';

const DetailedPricingCalculator = ({ dishData, onPriceChange }) => {
  const [calculation, setCalculation] = useState(null);
  const [customPrice, setCustomPrice] = useState(0);
  const [showBreakdown, setShowBreakdown] = useState(false);

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const [settings, setSettings] = useState({
    chefLevel: '–æ–ø—ã—Ç–Ω—ã–π',
    energyType: '–≥–∞–∑',
    packagingType: '–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π',
    deliveryType: '–¥–æ—Å—Ç–∞–≤–∫–∞_—Å—Ä–µ–¥–Ω–µ',
    platformType: 'mid-range',
    preparationTime: 30,
    servingSize: 1
  });

  // –ü–µ—Ä–µ—Å—á–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (dishData && dishData.ingredients) {
      const fullCalculation = enhancedPricingCalculator.calculateFullPrice({
        ...dishData,
        ...settings
      });
      setCalculation(fullCalculation);
      setCustomPrice(fullCalculation.recommendedPrice);
      
      if (onPriceChange) {
        onPriceChange(fullCalculation);
      }
    }
  }, [dishData, settings, onPriceChange]);

  const handleSettingChange = (key, value) => {
    setSettings(prev => ({
      ...prev,
      [key]: value
    }));
  };

  const handleCustomPriceChange = (price) => {
    setCustomPrice(price);
    if (calculation) {
      const newMargin = Math.round(((price - calculation.totalCost) / price) * 100);
      setCalculation(prev => ({
        ...prev,
        recommendedPrice: price,
        profitMargin: newMargin
      }));
    }
  };

  if (!calculation) {
    return (
      <div style={{
        padding: '20px',
        textAlign: 'center',
        color: '#666',
        background: '#f5f5f5',
        borderRadius: '8px'
      }}>
        –í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã
      </div>
    );
  }

  const getMarginColor = (margin) => {
    if (margin >= 40) return '#4CAF50';
    if (margin >= 25) return '#FF9800';
    return '#F44336';
  };

  return (
    <div style={{
      padding: '20px',
      background: 'linear-gradient(135deg, #f5f7fa, #c3cfe2)',
      borderRadius: '12px',
      margin: '20px 0',
      fontFamily: 'Arial, sans-serif'
    }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginBottom: '20px',
        paddingBottom: '15px',
        borderBottom: '2px solid #3498db'
      }}>
        <h2 style={{ color: '#2c3e50', margin: 0, fontSize: '24px' }}>
          üí∞ –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Ü–µ–Ω—ã –±–ª—é–¥–∞
        </h2>
        <button
          onClick={() => setShowBreakdown(!showBreakdown)}
          style={{
            padding: '8px 16px',
            background: '#3498db',
            color: 'white',
            border: 'none',
            borderRadius: '6px',
            cursor: 'pointer',
            fontSize: '14px'
          }}
        >
          {showBreakdown ? '–°–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏' : '–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏'}
        </button>
      </div>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
        gap: '15px',
        marginBottom: '20px',
        padding: '15px',
        background: 'white',
        borderRadius: '8px',
        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
      }}>
        <div>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', fontSize: '12px' }}>
            –£—Ä–æ–≤–µ–Ω—å –ø–æ–≤–∞—Ä–∞:
          </label>
          <select
            value={settings.chefLevel}
            onChange={(e) => handleSettingChange('chefLevel', e.target.value)}
            style={{ width: '100%', padding: '6px', border: '1px solid #ddd', borderRadius: '4px' }}
          >
            <option value="–Ω–æ–≤–∏—á–æ–∫">–ù–æ–≤–∏—á–æ–∫ (200‚ÇΩ/—á–∞—Å)</option>
            <option value="–æ–ø—ã—Ç–Ω—ã–π">–û–ø—ã—Ç–Ω—ã–π (400‚ÇΩ/—á–∞—Å)</option>
            <option value="–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª (600‚ÇΩ/—á–∞—Å)</option>
            <option value="—à–µ—Ñ-–ø–æ–≤–∞—Ä">–®–µ—Ñ-–ø–æ–≤–∞—Ä (1000‚ÇΩ/—á–∞—Å)</option>
          </select>
        </div>

        <div>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', fontSize: '12px' }}>
            –≠–Ω–µ—Ä–≥–∏—è:
          </label>
          <select
            value={settings.energyType}
            onChange={(e) => handleSettingChange('energyType', e.target.value)}
            style={{ width: '100%', padding: '6px', border: '1px solid #ddd', borderRadius: '4px' }}
          >
            <option value="–≥–∞–∑">–ì–∞–∑ (15‚ÇΩ/—á–∞—Å)</option>
            <option value="—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ">–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ (25‚ÇΩ/—á–∞—Å)</option>
            <option value="–∏–Ω–¥—É–∫—Ü–∏—è">–ò–Ω–¥—É–∫—Ü–∏—è (20‚ÇΩ/—á–∞—Å)</option>
            <option value="–º–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞">–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞ (10‚ÇΩ/—á–∞—Å)</option>
          </select>
        </div>

        <div>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', fontSize: '12px' }}>
            –£–ø–∞–∫–æ–≤–∫–∞:
          </label>
          <select
            value={settings.packagingType}
            onChange={(e) => handleSettingChange('packagingType', e.target.value)}
            style={{ width: '100%', padding: '6px', border: '1px solid #ddd', borderRadius: '4px' }}
          >
            <option value="–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π">–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π (15‚ÇΩ)</option>
            <option value="–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç–æ–Ω–Ω—ã–π">–ö–∞—Ä—Ç–æ–Ω–Ω—ã–π (8‚ÇΩ)</option>
            <option value="–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–∏–æ—Ä–∞–∑–ª–∞–≥–∞–µ–º—ã–π">–ë–∏–æ—Ä–∞–∑–ª–∞–≥–∞–µ–º—ã–π (25‚ÇΩ)</option>
            <option value="—É–ø–∞–∫–æ–≤–∫–∞ –ø—Ä–µ–º–∏—É–º">–ü—Ä–µ–º–∏—É–º (50‚ÇΩ)</option>
          </select>
        </div>

        <div>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', fontSize: '12px' }}>
            –î–æ—Å—Ç–∞–≤–∫–∞:
          </label>
          <select
            value={settings.deliveryType}
            onChange={(e) => handleSettingChange('deliveryType', e.target.value)}
            style={{ width: '100%', padding: '6px', border: '1px solid #ddd', borderRadius: '4px' }}
          >
            <option value="—Å–∞–º–æ–≤—ã–≤–æ–∑">–°–∞–º–æ–≤—ã–≤–æ–∑ (0‚ÇΩ)</option>
            <option value="–¥–æ—Å—Ç–∞–≤–∫–∞_–±–ª–∏–∑–∫–æ">–ë–ª–∏–∑–∫–æ (50‚ÇΩ)</option>
            <option value="–¥–æ—Å—Ç–∞–≤–∫–∞_—Å—Ä–µ–¥–Ω–µ">–°—Ä–µ–¥–Ω–µ (100‚ÇΩ)</option>
            <option value="–¥–æ—Å—Ç–∞–≤–∫–∞_–¥–∞–ª–µ–∫–æ">–î–∞–ª–µ–∫–æ (150‚ÇΩ)</option>
            <option value="–¥–æ—Å—Ç–∞–≤–∫–∞_—Å—Ä–æ—á–Ω–∞—è">–°—Ä–æ—á–Ω–∞—è (200‚ÇΩ)</option>
          </select>
        </div>

        <div>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', fontSize: '12px' }}>
            –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è (–º–∏–Ω):
          </label>
          <input
            type="number"
            value={settings.preparationTime}
            onChange={(e) => handleSettingChange('preparationTime', parseInt(e.target.value))}
            min="5"
            max="180"
            style={{ width: '100%', padding: '6px', border: '1px solid #ddd', borderRadius: '4px' }}
          />
        </div>

        <div>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', fontSize: '12px' }}>
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π:
          </label>
          <input
            type="number"
            value={settings.servingSize}
            onChange={(e) => handleSettingChange('servingSize', parseInt(e.target.value))}
            min="1"
            max="10"
            style={{ width: '100%', padding: '6px', border: '1px solid #ddd', borderRadius: '4px' }}
          />
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
        gap: '15px',
        marginBottom: '20px'
      }}>
        {/* –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å */}
        <div style={{
          padding: '15px',
          background: 'white',
          borderRadius: '8px',
          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '12px', color: '#666', marginBottom: '5px' }}>
            –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å
          </div>
          <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#e74c3c' }}>
            {Math.round(calculation.totalCost)}‚ÇΩ
          </div>
        </div>

        {/* –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ü–µ–Ω–∞ */}
        <div style={{
          padding: '15px',
          background: 'white',
          borderRadius: '8px',
          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '12px', color: '#666', marginBottom: '5px' }}>
            –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ü–µ–Ω–∞
          </div>
          <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#27ae60' }}>
            {calculation.recommendedPrice}‚ÇΩ
          </div>
        </div>

        {/* –ú–∞—Ä–∂–∞ */}
        <div style={{
          padding: '15px',
          background: 'white',
          borderRadius: '8px',
          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '12px', color: '#666', marginBottom: '5px' }}>
            –ú–∞—Ä–∂–∞
          </div>
          <div style={{ 
            fontSize: '20px', 
            fontWeight: 'bold', 
            color: getMarginColor(calculation.profitMargin)
          }}>
            {calculation.profitMargin}%
          </div>
        </div>

        {/* –ü—Ä–∏–±—ã–ª—å */}
        <div style={{
          padding: '15px',
          background: 'white',
          borderRadius: '8px',
          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '12px', color: '#666', marginBottom: '5px' }}>
            –ü—Ä–∏–±—ã–ª—å
          </div>
          <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#8e44ad' }}>
            {calculation.recommendedPrice - calculation.totalCost}‚ÇΩ
          </div>
        </div>
      </div>

      {/* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ü–µ–Ω–∞ */}
      <div style={{
        padding: '15px',
        background: 'white',
        borderRadius: '8px',
        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
        marginBottom: '20px'
      }}>
        <div style={{ marginBottom: '10px', fontWeight: 'bold' }}>
          üéØ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ—é —Ü–µ–Ω—É:
        </div>
        <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>
          <input
            type="number"
            value={customPrice}
            onChange={(e) => handleCustomPriceChange(parseInt(e.target.value))}
            style={{
              padding: '8px',
              border: '2px solid #3498db',
              borderRadius: '4px',
              fontSize: '16px',
              width: '120px'
            }}
          />
          <span style={{ color: '#666' }}>‚ÇΩ</span>
          <div style={{ fontSize: '14px', color: '#666' }}>
            –ú–∞—Ä–∂–∞: {Math.round(((customPrice - calculation.totalCost) / customPrice) * 100)}%
          </div>
        </div>
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞ */}
      {showBreakdown && (
        <div style={{
          padding: '20px',
          background: 'white',
          borderRadius: '8px',
          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
        }}>
          <h3 style={{ color: '#2c3e50', marginBottom: '15px' }}>
            üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞ –∑–∞—Ç—Ä–∞—Ç
          </h3>
          
          <div style={{ display: 'grid', gap: '10px' }}>
            {/* –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã */}
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              padding: '10px',
              background: '#ecf0f1',
              borderRadius: '4px'
            }}>
              <span>ü•ò –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:</span>
              <span style={{ fontWeight: 'bold' }}>{Math.round(calculation.ingredients.total)}‚ÇΩ</span>
            </div>

            {/* –£–ø–∞–∫–æ–≤–∫–∞ */}
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              padding: '10px',
              background: '#ecf0f1',
              borderRadius: '4px'
            }}>
              <span>üì¶ –£–ø–∞–∫–æ–≤–∫–∞:</span>
              <span style={{ fontWeight: 'bold' }}>{Math.round(calculation.packaging.total)}‚ÇΩ</span>
            </div>

            {/* –≠–Ω–µ—Ä–≥–∏—è */}
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              padding: '10px',
              background: '#ecf0f1',
              borderRadius: '4px'
            }}>
              <span>‚ö° –≠–Ω–µ—Ä–≥–∏—è:</span>
              <span style={{ fontWeight: 'bold' }}>{Math.round(calculation.energy.total)}‚ÇΩ</span>
            </div>

            {/* –¢—Ä—É–¥ –ø–æ–≤–∞—Ä–∞ */}
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              padding: '10px',
              background: '#ecf0f1',
              borderRadius: '4px'
            }}>
              <span>üë®‚Äçüç≥ –¢—Ä—É–¥ –ø–æ–≤–∞—Ä–∞:</span>
              <span style={{ fontWeight: 'bold' }}>{Math.round(calculation.labor.total)}‚ÇΩ</span>
            </div>

            {/* –î–æ—Å—Ç–∞–≤–∫–∞ */}
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              padding: '10px',
              background: '#ecf0f1',
              borderRadius: '4px'
            }}>
              <span>üöö –î–æ—Å—Ç–∞–≤–∫–∞:</span>
              <span style={{ fontWeight: 'bold' }}>{Math.round(calculation.delivery.total)}‚ÇΩ</span>
            </div>

            {/* –ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã */}
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              padding: '10px',
              background: '#e8f4fd',
              borderRadius: '4px',
              border: '1px solid #3498db'
            }}>
              <span>üè¢ –ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã ({Math.round(calculation.platformCommission.rate * 100)}%):</span>
              <span style={{ fontWeight: 'bold' }}>{Math.round(calculation.platformCommission.amount)}‚ÇΩ</span>
            </div>

            {/* –ò—Ç–æ–≥–æ */}
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              padding: '15px',
              background: '#2c3e50',
              color: 'white',
              borderRadius: '4px',
              fontSize: '16px',
              fontWeight: 'bold'
            }}>
              <span>–ò–¢–û–ì–û –°–ï–ë–ï–°–¢–û–ò–ú–û–°–¢–¨:</span>
              <span>{Math.round(calculation.totalCost)}‚ÇΩ</span>
            </div>
          </div>
        </div>
      )}

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      {calculation.recommendations && calculation.recommendations.length > 0 && (
        <div style={{
          marginTop: '20px',
          padding: '15px',
          background: '#fff3cd',
          borderRadius: '8px',
          border: '1px solid #ffeaa7'
        }}>
          <h4 style={{ color: '#856404', marginBottom: '10px' }}>
            üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
          </h4>
          {calculation.recommendations.map((rec, index) => (
            <div key={index} style={{
              padding: '8px',
              marginBottom: '5px',
              background: rec.type === 'warning' ? '#f8d7da' : 
                         rec.type === 'success' ? '#d4edda' : '#d1ecf1',
              borderRadius: '4px',
              fontSize: '14px',
              color: rec.type === 'warning' ? '#721c24' : 
                     rec.type === 'success' ? '#155724' : '#0c5460'
            }}>
              {rec.message}
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default DetailedPricingCalculator;
