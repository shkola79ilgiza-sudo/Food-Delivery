import React, { useState } from "react";
import { useLanguage } from "../contexts/LanguageContext";

const ClientCookingRequest = ({ dish, onClose, onRequestSubmit }) => {
  // const { t } = useLanguage(); // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
  const [formData, setFormData] = useState({
    products: [],
    description: "",
    preferredTime: "",
    budget: "",
    specialRequests: "",
    contactPhone: "",
    address: "",
  });
  const [uploadedImages, setUploadedImages] = useState([]);
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleImageUpload = (e) => {
    const files = Array.from(e.target.files);
    const newImages = files.map((file) => ({
      id: Date.now() + Math.random(),
      file,
      preview: URL.createObjectURL(file),
    }));
    setUploadedImages((prev) => [...prev, ...newImages]);
  };

  const removeImage = (imageId) => {
    setUploadedImages((prev) => prev.filter((img) => img.id !== imageId));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);

    try {
      const requestData = {
        dishId: dish.id,
        chefId: dish.chefId,
        ...formData,
        images: uploadedImages.map((img) => img.file),
        type: dish.isMasterClass
          ? "master_class"
          : dish.isConsultation
          ? "consultation"
          : "cooking",
        estimatedTime: dish.estimatedTime,
        minOrderValue: dish.minOrderValue,
      };

      await onRequestSubmit(requestData);
      onClose();
    } catch (error) {
      console.error("Error submitting cooking request:", error);
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="client-cooking-modal">
      <div className="client-cooking-overlay" onClick={onClose}>
        <div
          className="client-cooking-content"
          onClick={(e) => e.stopPropagation()}
        >
          <div className="client-cooking-header">
            <h2>üç≥ {dish.name}</h2>
            <button className="close-button" onClick={onClose}>
              √ó
            </button>
          </div>

          <div className="client-cooking-body">
            <p className="dish-description">{dish.description}</p>

            <form onSubmit={handleSubmit} className="cooking-request-form">
              {/* –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ */}
              <div className="form-group">
                <label>üì∏ –§–æ—Ç–æ –≤–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤</label>
                <input
                  type="file"
                  multiple
                  accept="image/*"
                  onChange={handleImageUpload}
                  className="file-input"
                />
                {uploadedImages.length > 0 && (
                  <div className="uploaded-images">
                    {uploadedImages.map((img) => (
                      <div key={img.id} className="image-preview">
                        <img src={img.preview} alt="Product" />
                        <button
                          type="button"
                          onClick={() => removeImage(img.id)}
                        >
                          √ó
                        </button>
                      </div>
                    ))}
                  </div>
                )}
              </div>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ –∂–µ–ª–∞–µ–º–æ–≥–æ –±–ª—é–¥–∞ */}
              <div className="form-group">
                <label>üçΩÔ∏è –û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –±–ª—é–¥–æ</label>
                <textarea
                  name="description"
                  value={formData.description}
                  onChange={handleInputChange}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –•–æ—á—É –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –±–æ—Ä—â —Å –º—è—Å–æ–º, —É –º–µ–Ω—è –µ—Å—Ç—å –≥–æ–≤—è–¥–∏–Ω–∞, —Å–≤–µ–∫–ª–∞, –∫–∞–ø—É—Å—Ç–∞..."
                  rows="4"
                  required
                />
              </div>

              {/* –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è */}
              <div className="form-group">
                <label>‚è∞ –ö–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ –≥–æ—Ç–æ–≤–∏—Ç—å?</label>
                <select
                  name="preferredTime"
                  value={formData.preferredTime}
                  onChange={handleInputChange}
                  required
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è</option>
                  <option value="morning">–£—Ç—Ä–æ–º (9:00-12:00)</option>
                  <option value="afternoon">–î–Ω–µ–º (12:00-17:00)</option>
                  <option value="evening">–í–µ—á–µ—Ä–æ–º (17:00-21:00)</option>
                  <option value="flexible">–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫</option>
                </select>
              </div>

              {/* –ë—é–¥–∂–µ—Ç */}
              <div className="form-group">
                <label>üí∞ –í–∞—à –±—é–¥–∂–µ—Ç (—Ä—É–±.)</label>
                <input
                  type="number"
                  name="budget"
                  value={formData.budget}
                  onChange={handleInputChange}
                  placeholder="–ú–∏–Ω–∏–º—É–º 500 —Ä—É–±."
                  min={dish.minOrderValue}
                  required
                />
                <small>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {dish.minOrderValue} —Ä—É–±.</small>
              </div>

              {/* –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è */}
              <div className="form-group">
                <label>üìù –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è</label>
                <textarea
                  name="specialRequests"
                  value={formData.specialRequests}
                  onChange={handleInputChange}
                  placeholder="–ê–ª–ª–µ—Ä–≥–∏–∏, –¥–∏–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ —Å–ø–µ—Ü–∏—è–º..."
                  rows="3"
                />
              </div>

              {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
              <div className="form-group">
                <label>üìû –¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏</label>
                <input
                  type="tel"
                  name="contactPhone"
                  value={formData.contactPhone}
                  onChange={handleInputChange}
                  placeholder="+7 (999) 123-45-67"
                  required
                />
              </div>

              <div className="form-group">
                <label>üè† –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</label>
                <input
                  type="text"
                  name="address"
                  value={formData.address}
                  onChange={handleInputChange}
                  placeholder="–£–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                  required
                />
              </div>

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≤–∞—Ä–µ */}
              <div className="chef-info">
                <h4>üë®‚Äçüç≥ –ü–æ–≤–∞—Ä: {dish.chef}</h4>
                <p>‚≠ê –†–µ–π—Ç–∏–Ω–≥: {dish.rating}/5</p>
                <p>‚è±Ô∏è –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {dish.estimatedTime}</p>
              </div>

              <div className="form-actions">
                <button type="button" onClick={onClose} className="cancel-btn">
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button
                  type="submit"
                  disabled={isSubmitting}
                  className="submit-btn"
                >
                  {isSubmitting ? "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å"}
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ClientCookingRequest;
