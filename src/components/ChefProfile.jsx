import React, { useState, useEffect } from 'react';
import { useToast } from '../contexts/ToastContext';
import VerificationBadges from './VerificationBadges';
import ChefTiers from './ChefTiers';
import { getChefData } from '../api/adapter';
import '../App.css';

const ChefProfile = ({ onClose }) => {
  const { showSuccess, showError } = useToast();
  const [profile, setProfile] = useState({
    name: '',
    avatar: 'üë®‚Äçüç≥',
    location: '',
    description: '',
    specialties: [],
    cuisines: [],
    dishes: [],
    priceCategory: '–°—Ä–µ–¥–Ω—è—è',
    deliveryTime: '60-90 –º–∏–Ω',
    workingHours: '–ü–Ω-–ü—Ç 09:00-20:00',
    rating: 4.5,
    reviewsCount: 0,
    // –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –≤—ã–µ–∑–¥–∞
    availableForTravel: false,
    travelRadius: 10, // –∫–º
    travelFee: 0, // –±–∞–∑–æ–≤–∞—è –ø–ª–∞—Ç–∞ –∑–∞ –≤—ã–µ–∑–¥
    travelDiscount: 0, // —Å–∫–∏–¥–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –Ω–∞ —Å—É–º–º—É
    minOrderAmount: 1000, // –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –¥–ª—è –≤—ã–µ–∑–¥–∞
  });

  const [loading, setLoading] = useState(false);

  useEffect(() => {
    loadProfile();
  }, []);

  const loadProfile = () => {
    try {
      const savedProfile = localStorage.getItem('chefProfile');
      if (savedProfile) {
        setProfile(JSON.parse(savedProfile));
      }
    } catch (error) {
      console.error('Error loading chef profile:', error);
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–≤–∞—Ä–∞
    const chefId = localStorage.getItem('chefEmail') || 'demo-chef';
    getChefData(chefId).then(chefData => {
      setProfile(prev => ({
        ...prev,
        ...chefData,
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        location: prev.location,
        description: prev.description,
        specialties: prev.specialties,
        cuisines: prev.cuisines,
        dishes: prev.dishes,
        priceCategory: prev.priceCategory,
        deliveryTime: prev.deliveryTime,
        workingHours: prev.workingHours,
        availableForTravel: prev.availableForTravel,
        travelRadius: prev.travelRadius,
        travelFee: prev.travelFee,
        travelDiscount: prev.travelDiscount,
        minOrderAmount: prev.minOrderAmount
      }));
    });
  };

  const saveProfile = () => {
    try {
      localStorage.setItem('chefProfile', JSON.stringify(profile));
      showSuccess('–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
    } catch (error) {
      console.error('Error saving chef profile:', error);
      showError('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è');
    }
  };

  const handleInputChange = (field, value) => {
    setProfile(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleArrayChange = (field, value) => {
    const items = value.split(',').map(item => item.trim()).filter(item => item);
    setProfile(prev => ({
      ...prev,
      [field]: items
    }));
  };

  return (
    <div className="chef-profile-overlay" onClick={onClose}>
      <div className="chef-profile-modal" onClick={(e) => e.stopPropagation()}>
        <div className="chef-profile-header">
          <h3>üë®‚Äçüç≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–≤–∞—Ä–∞</h3>
          <button onClick={onClose} className="back-button">‚úï</button>
        </div>

        <div className="chef-profile-content">
          <div className="profile-section">
            <h4>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
            <div className="form-group">
              <label>–ò–º—è –ø–æ–≤–∞—Ä–∞:</label>
              <input
                type="text"
                value={profile.name}
                onChange={(e) => handleInputChange('name', e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
              />
            </div>
            
            <div className="form-group">
              <label>–≠–º–æ–¥–∑–∏ –∞–≤–∞—Ç–∞—Ä:</label>
              <input
                type="text"
                value={profile.avatar}
                onChange={(e) => handleInputChange('avatar', e.target.value)}
                placeholder="üë®‚Äçüç≥"
              />
            </div>

            <div className="form-group">
              <label>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</label>
              <input
                type="text"
                value={profile.location}
                onChange={(e) => handleInputChange('location', e.target.value)}
                placeholder="–ì–æ—Ä–æ–¥, —Ä–∞–π–æ–Ω"
              />
            </div>

            <div className="form-group">
              <label>–û–ø–∏—Å–∞–Ω–∏–µ:</label>
              <textarea
                value={profile.description}
                onChange={(e) => handleInputChange('description', e.target.value)}
                placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –∏ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ"
                rows={3}
              />
            </div>
          </div>

          {/* –ë–µ–π–¥–∂–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ */}
          <div className="profile-section">
            <h4>–°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏</h4>
            <VerificationBadges chef={profile} showTooltips={true} />
          </div>

          {/* –¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω */}
          <div className="profile-section">
            <ChefTiers 
              chefId={localStorage.getItem('chefEmail') || 'demo-chef'}
              onTierChange={(tier, tierInfo) => {
                console.log('Tier changed:', tier, tierInfo);
                showSuccess(`–¢–∞—Ä–∏—Ñ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "${tierInfo.name}"`);
              }}
            />
          </div>

          <div className="profile-section">
            <h4>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è</h4>
            <div className="form-group">
              <label>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):</label>
              <input
                type="text"
                value={profile.specialties.join(', ')}
                onChange={(e) => handleArrayChange('specialties', e.target.value)}
                placeholder="–†—É—Å—Å–∫–∞—è –∫—É—Ö–Ω—è, –í—ã–ø–µ—á–∫–∞, –î–æ–º–∞—à–Ω–∏–µ –æ–±–µ–¥—ã"
              />
            </div>

            <div className="form-group">
              <label>–ö—É—Ö–Ω–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):</label>
              <input
                type="text"
                value={profile.cuisines.join(', ')}
                onChange={(e) => handleArrayChange('cuisines', e.target.value)}
                placeholder="–†—É—Å—Å–∫–∞—è, –¢–∞—Ç–∞—Ä—Å–∫–∞—è, –ï–≤—Ä–æ–ø–µ–π—Å–∫–∞—è"
              />
            </div>

            <div className="form-group">
              <label>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–ª—é–¥–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):</label>
              <input
                type="text"
                value={profile.dishes.join(', ')}
                onChange={(e) => handleArrayChange('dishes', e.target.value)}
                placeholder="–ë–æ—Ä—â, –ü–µ–ª—å–º–µ–Ω–∏, –ü–∏—Ä–æ–∂–∫–∏"
              />
            </div>
          </div>

          <div className="profile-section">
            <h4>–£—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã</h4>
            <div className="form-group">
              <label>–¶–µ–Ω–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
              <select
                value={profile.priceCategory}
                onChange={(e) => handleInputChange('priceCategory', e.target.value)}
              >
                <option value="–ù–∏–∑–∫–∞—è">–ù–∏–∑–∫–∞—è</option>
                <option value="–°—Ä–µ–¥–Ω—è—è">–°—Ä–µ–¥–Ω—è—è</option>
                <option value="–í—ã—Å–æ–∫–∞—è">–í—ã—Å–æ–∫–∞—è</option>
              </select>
            </div>

            <div className="form-group">
              <label>–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:</label>
              <input
                type="text"
                value={profile.deliveryTime}
                onChange={(e) => handleInputChange('deliveryTime', e.target.value)}
                placeholder="60-90 –º–∏–Ω"
              />
            </div>

            <div className="form-group">
              <label>–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:</label>
              <input
                type="text"
                value={profile.workingHours}
                onChange={(e) => handleInputChange('workingHours', e.target.value)}
                placeholder="–ü–Ω-–ü—Ç 09:00-20:00"
              />
            </div>
          </div>

          <div className="profile-section">
            <h4>üöó –í—ã–µ–∑–¥–Ω—ã–µ —É—Å–ª—É–≥–∏</h4>
            <div className="form-group">
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  checked={profile.availableForTravel}
                  onChange={(e) => handleInputChange('availableForTravel', e.target.checked)}
                />
                <span>–ì–æ—Ç–æ–≤ –∫ –≤—ã–µ–∑–¥—É –Ω–∞ –¥–æ–º</span>
              </label>
            </div>

            {profile.availableForTravel && (
              <>
                <div className="form-group">
                  <label>–†–∞–¥–∏—É—Å –≤—ã–µ–∑–¥–∞ (–∫–º):</label>
                  <input
                    type="number"
                    value={profile.travelRadius}
                    onChange={(e) => handleInputChange('travelRadius', parseInt(e.target.value))}
                    min="1"
                    max="100"
                  />
                </div>

                <div className="form-group">
                  <label>–ë–∞–∑–æ–≤–∞—è –ø–ª–∞—Ç–∞ –∑–∞ –≤—ã–µ–∑–¥ (‚ÇΩ):</label>
                  <input
                    type="number"
                    value={profile.travelFee}
                    onChange={(e) => handleInputChange('travelFee', parseInt(e.target.value))}
                    min="0"
                  />
                </div>

                <div className="form-group">
                  <label>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –¥–ª—è –≤—ã–µ–∑–¥–∞ (‚ÇΩ):</label>
                  <input
                    type="number"
                    value={profile.minOrderAmount}
                    onChange={(e) => handleInputChange('minOrderAmount', parseInt(e.target.value))}
                    min="0"
                  />
                </div>

                <div className="form-group">
                  <label>–°–∫–∏–¥–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç (‚ÇΩ):</label>
                  <input
                    type="number"
                    value={profile.travelDiscount}
                    onChange={(e) => handleInputChange('travelDiscount', parseInt(e.target.value))}
                    min="0"
                  />
                </div>
              </>
            )}
          </div>

          <div className="profile-actions">
            <button onClick={saveProfile} className="save-btn">
              üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
            </button>
            <button onClick={onClose} className="cancel-btn">
              ‚ùå –û—Ç–º–µ–Ω–∞
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ChefProfile;
