import React, { useState } from 'react';
import { useToast } from '../contexts/ToastContext';

const SmartCart = ({ cart, onAddToCart, onRemoveFromCart }) => {
  const [suggestions, setSuggestions] = useState([]);
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [showSuggestions, setShowSuggestions] = useState(false);
  const { showSuccess, showError } = useToast();

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log('üîç SmartCart: Component rendered');
  console.log('üîç SmartCart: cart prop:', cart);
  console.log('üîç SmartCart: cart length:', cart?.length || 0);
  console.log('üîç SmartCart: isAnalyzing:', isAnalyzing);
  console.log('üîç SmartCart: showSuggestions:', showSuggestions);
  console.log('üîç SmartCart: suggestions count:', suggestions.length);

  // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–º–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–ª—è —Ç–∞—Ç–∞—Ä—Å–∫–æ–π –∫—É—Ö–Ω–∏
  const smartSuggestionsDatabase = {
    // –û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞
    '–±–æ—Ä—â': {
      essentials: ['—Å–º–µ—Ç–∞–Ω–∞', '—Ö–ª–µ–± —Ä–∂–∞–Ω–æ–π', '—Å–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π'],
      drinks: ['–∫–æ–º–ø–æ—Ç –∏–∑ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤', '—á–∞–π —Å –ª–∏–º–æ–Ω–æ–º'],
      sauces: ['—á–µ—Å–Ω–æ—á–Ω—ã–π —Å–æ—É—Å', '—Å–º–µ—Ç–∞–Ω–Ω—ã–π —Å–æ—É—Å'],
      seasonal: {
        spring: ['–∑–µ–ª–µ–Ω—ã–π –ª—É–∫', '—Ä–µ–¥–∏—Å'],
        summer: ['—Å–≤–µ–∂–∏–µ –ø–æ–º–∏–¥–æ—Ä—ã', '–æ–≥—É—Ä—Ü—ã'],
        autumn: ['–∫–≤–∞—à–µ–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞'],
        winter: ['–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≤–æ—â–∏']
      }
    },
    '–ø–ª–æ–≤': {
      essentials: ['—Å–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π', '—Ö–ª–µ–± –ª–µ–ø–µ—à–∫–∞', '–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≤–æ—â–∏'],
      drinks: ['–∞–π—Ä–∞–Ω', '—á–∞–π –∑–µ–ª–µ–Ω—ã–π', '–∫–æ–º–ø–æ—Ç'],
      sauces: ['—Å–æ—É—Å —Ç–æ–º–∞—Ç–Ω—ã–π', '—Å–æ—É—Å —á–µ—Å–Ω–æ—á–Ω—ã–π'],
      seasonal: {
        spring: ['–∑–µ–ª–µ–Ω—ã–π —Å–∞–ª–∞—Ç', '—Ä–µ–¥–∏—Å'],
        summer: ['—Å–≤–µ–∂–∏–µ –æ–≤–æ—â–∏', '–∑–µ–ª–µ–Ω—å'],
        autumn: ['–∫–≤–∞—à–µ–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞', '—Å–æ–ª–µ–Ω—å—è'],
        winter: ['–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≤–æ—â–∏', '–∫–≤–∞—à–µ–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞']
      }
    },
    '–º–∞–Ω—Ç—ã': {
      essentials: ['—Å–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π', '—Ö–ª–µ–±', '–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≤–æ—â–∏'],
      drinks: ['–∞–π—Ä–∞–Ω', '—á–∞–π', '–∫–æ–º–ø–æ—Ç'],
      sauces: ['—Å–æ—É—Å —Å–º–µ—Ç–∞–Ω–Ω—ã–π', '—Å–æ—É—Å —Ç–æ–º–∞—Ç–Ω—ã–π', '—Å–æ—É—Å —á–µ—Å–Ω–æ—á–Ω—ã–π'],
      seasonal: {
        spring: ['–∑–µ–ª–µ–Ω—ã–π —Å–∞–ª–∞—Ç', '—Ä–µ–¥–∏—Å'],
        summer: ['—Å–≤–µ–∂–∏–µ –æ–≤–æ—â–∏', '–∑–µ–ª–µ–Ω—å'],
        autumn: ['–∫–≤–∞—à–µ–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞', '—Å–æ–ª–µ–Ω—å—è'],
        winter: ['–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≤–æ—â–∏', '–∫–≤–∞—à–µ–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞']
      }
    },
    '—Å–∞–ª–∞—Ç': {
      essentials: ['—Ö–ª–µ–±', '–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≤–æ—â–∏'],
      drinks: ['—á–∞–π', '–∫–æ–º–ø–æ—Ç', '—Å–æ–∫'],
      sauces: ['—Å–æ—É—Å –¥–ª—è —Å–∞–ª–∞—Ç–∞', '–æ–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ'],
      seasonal: {
        spring: ['–∑–µ–ª–µ–Ω—ã–π –ª—É–∫', '—Ä–µ–¥–∏—Å'],
        summer: ['—Å–≤–µ–∂–∏–µ –æ–≤–æ—â–∏', '–∑–µ–ª–µ–Ω—å'],
        autumn: ['–∫–≤–∞—à–µ–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞', '—Å–æ–ª–µ–Ω—å—è'],
        winter: ['–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≤–æ—â–∏', '–∫–≤–∞—à–µ–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞']
      }
    },
    '—Å—É–ø': {
      essentials: ['—Ö–ª–µ–±', '—Å–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π'],
      drinks: ['—á–∞–π', '–∫–æ–º–ø–æ—Ç', '—Å–æ–∫'],
      sauces: ['—Å–º–µ—Ç–∞–Ω–∞', '—á–µ—Å–Ω–æ—á–Ω—ã–π —Å–æ—É—Å'],
      seasonal: {
        spring: ['–∑–µ–ª–µ–Ω—ã–π –ª—É–∫', '—Ä–µ–¥–∏—Å'],
        summer: ['—Å–≤–µ–∂–∏–µ –æ–≤–æ—â–∏', '–∑–µ–ª–µ–Ω—å'],
        autumn: ['–∫–≤–∞—à–µ–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞', '—Å–æ–ª–µ–Ω—å—è'],
        winter: ['–º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≤–æ—â–∏', '–∫–≤–∞—à–µ–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞']
      }
    },
    '–≤—ã–ø–µ—á–∫–∞': {
      essentials: ['—á–∞–π', '–∫–æ—Ñ–µ', '–º–æ–ª–æ–∫–æ'],
      drinks: ['—á–∞–π', '–∫–æ—Ñ–µ', '–∫–∞–∫–∞–æ', '—Å–æ–∫'],
      sauces: ['–≤–∞—Ä–µ–Ω—å–µ', '–º–µ–¥', '—Å–º–µ—Ç–∞–Ω–∞'],
      seasonal: {
        spring: ['–∑–µ–ª–µ–Ω—ã–π —á–∞–π', '—Ç—Ä–∞–≤—è–Ω–æ–π —á–∞–π'],
        summer: ['—Ö–æ–ª–æ–¥–Ω—ã–π —á–∞–π', '–ª–∏–º–æ–Ω–∞–¥'],
        autumn: ['–≥–æ—Ä—è—á–∏–π —á–∞–π', '–∫–æ—Ñ–µ'],
        winter: ['–≥–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥', '–≥–ª–∏–Ω—Ç–≤–µ–π–Ω']
      }
    },
    '–¥–µ—Å–µ—Ä—Ç': {
      essentials: ['—á–∞–π', '–∫–æ—Ñ–µ'],
      drinks: ['—á–∞–π', '–∫–æ—Ñ–µ', '—Å–æ–∫', '–º–æ–ª–æ–∫–æ'],
      sauces: ['–≤–∞—Ä–µ–Ω—å–µ', '–º–µ–¥', '—Å–∏—Ä–æ–ø'],
      seasonal: {
        spring: ['–∑–µ–ª–µ–Ω—ã–π —á–∞–π', '—Ç—Ä–∞–≤—è–Ω–æ–π —á–∞–π'],
        summer: ['—Ö–æ–ª–æ–¥–Ω—ã–π —á–∞–π', '–ª–∏–º–æ–Ω–∞–¥'],
        autumn: ['–≥–æ—Ä—è—á–∏–π —á–∞–π', '–∫–æ—Ñ–µ'],
        winter: ['–≥–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥', '–≥–ª–∏–Ω—Ç–≤–µ–π–Ω']
      }
    }
  };

  // –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
  const holidaySuggestions = {
    '–Ω–∞–≤—Ä—É–∑': {
      traditional: ['—Å—É–º–∞–ª—è–∫', '—Ö–∞–ª–≤–∞', '–æ—Ä–µ—Ö–∏', '—Å—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã'],
      drinks: ['–∑–µ–ª–µ–Ω—ã–π —á–∞–π', '–∫–æ–º–ø–æ—Ç –∏–∑ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤'],
      message: '–ù–∞–≤—Ä—É–∑ –º—É–±–∞—Ä–∞–∫! –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –≤–µ—Å–µ–Ω–Ω–∏–µ —É–≥–æ—â–µ–Ω–∏—è'
    },
    '—É—Ä–∞–∑–∞': {
      traditional: ['—Ñ–∏–Ω–∏–∫–∏', '—Å—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã', '–æ—Ä–µ—Ö–∏', '—Ö–∞–ª–≤–∞'],
      drinks: ['—á–∞–π', '–∫–æ–º–ø–æ—Ç', '—Å–æ–∫'],
      message: '–†–∞–º–∞–¥–∞–Ω –∫–∞—Ä–∏–º! –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É–≥–æ—â–µ–Ω–∏—è –¥–ª—è –∏—Ñ—Ç–∞—Ä–∞'
    },
    '–Ω–æ–≤—ã–π –≥–æ–¥': {
      traditional: ['–æ–ª–∏–≤—å–µ', '—Å–µ–ª–µ–¥–∫–∞ –ø–æ–¥ —à—É–±–æ–π', '—à–∞–º–ø–∞–Ω—Å–∫–æ–µ', '–º–∞–Ω–¥–∞—Ä–∏–Ω—ã'],
      drinks: ['—à–∞–º–ø–∞–Ω—Å–∫–æ–µ', '—Å–æ–∫', '–∫–æ–º–ø–æ—Ç'],
      message: '–° –ù–æ–≤—ã–º –≥–æ–¥–æ–º! –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –±–ª—é–¥–∞ –¥–ª—è —Å—Ç–æ–ª–∞'
    },
    '8 –º–∞—Ä—Ç–∞': {
      traditional: ['—Ç–æ—Ä—Ç', '–∫–æ–Ω—Ñ–µ—Ç—ã', '—Ñ—Ä—É–∫—Ç—ã', '—à–∞–º–ø–∞–Ω—Å–∫–æ–µ'],
      drinks: ['—à–∞–º–ø–∞–Ω—Å–∫–æ–µ', '—Å–æ–∫', '—á–∞–π'],
      message: '–° 8 –º–∞—Ä—Ç–∞! –°–ª–∞–¥–∫–∏–µ —É–≥–æ—â–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã—Ö –¥–∞–º'
    },
    '–º–∞—Å–ª–µ–Ω–∏—Ü–∞': {
      traditional: ['–±–ª–∏–Ω—ã', '—Å–º–µ—Ç–∞–Ω–∞', '–≤–∞—Ä–µ–Ω—å–µ', '–º–µ–¥'],
      drinks: ['—á–∞–π', '–∫–æ—Ñ–µ', '—Å–æ–∫'],
      message: '–ú–∞—Å–ª–µ–Ω–∏—Ü–∞! –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –±–ª–∏–Ω—ã –∏ —É–≥–æ—â–µ–Ω–∏—è'
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–µ–∑–æ–Ω–∞
  const getCurrentSeason = () => {
    const month = new Date().getMonth();
    if (month >= 2 && month <= 4) return 'spring';
    if (month >= 5 && month <= 7) return 'summer';
    if (month >= 8 && month <= 10) return 'autumn';
    return 'winter';
  };

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞
  const getCurrentHoliday = () => {
    const now = new Date();
    const month = now.getMonth() + 1;
    const day = now.getDate();

    // –ù–∞–≤—Ä—É–∑ (21 –º–∞—Ä—Ç–∞)
    if (month === 3 && day >= 20 && day <= 22) return '–Ω–∞–≤—Ä—É–∑';
    
    // 8 –º–∞—Ä—Ç–∞
    if (month === 3 && day === 8) return '8 –º–∞—Ä—Ç–∞';
    
    // –ù–æ–≤—ã–π –≥–æ–¥ (–¥–µ–∫–∞–±—Ä—å-—è–Ω–≤–∞—Ä—å)
    if (month === 12 || month === 1) return '–Ω–æ–≤—ã–π –≥–æ–¥';
    
    // –ú–∞—Å–ª–µ–Ω–∏—Ü–∞ (—Ñ–µ–≤—Ä–∞–ª—å-–º–∞—Ä—Ç)
    if (month === 2 || (month === 3 && day <= 15)) return '–º–∞—Å–ª–µ–Ω–∏—Ü–∞';
    
    // –†–∞–º–∞–¥–∞–Ω (–ø—Ä–∏–º–µ—Ä–Ω–æ –º–∞–π-–∏—é–Ω—å, –Ω–æ –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω—è—Ç—å –∫–∞–∂–¥—ã–π –≥–æ–¥)
    if (month >= 5 && month <= 6) return '—É—Ä–∞–∑–∞';
    
    return null;
  };

  // –ê–Ω–∞–ª–∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
  const analyzeCart = () => {
    console.log('üîç SmartCart: analyzeCart called');
    console.log('üîç SmartCart: cart length:', cart.length);
    console.log('üîç SmartCart: cart items:', cart);
    
    setIsAnalyzing(true);
    
    setTimeout(() => {
      const newSuggestions = [];
      const currentSeason = getCurrentSeason();
      const currentHoliday = getCurrentHoliday();
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–µ –±–ª—é–¥–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ
      console.log('üîç SmartCart: Starting analysis...');
      console.log('üîç SmartCart: Current season:', currentSeason);
      console.log('üîç SmartCart: Current holiday:', currentHoliday);
      
      cart.forEach(item => {
        const dishName = item.name.toLowerCase();
        const dishSuggestions = smartSuggestionsDatabase[dishName];
        console.log('üîç SmartCart: Analyzing dish:', dishName, 'Suggestions found:', !!dishSuggestions);
        
        if (dishSuggestions) {
          // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
          dishSuggestions.essentials.forEach(essential => {
            if (!cart.some(cartItem => cartItem.name.toLowerCase().includes(essential.toLowerCase()))) {
              newSuggestions.push({
                name: essential,
                category: 'essential',
                reason: `–û—Ç–ª–∏—á–Ω–æ —Å–æ—á–µ—Ç–∞–µ—Ç—Å—è —Å ${item.name}`,
                price: Math.floor(Math.random() * 200) + 50,
                emoji: '‚≠ê'
              });
            }
          });
          
          // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–ø–∏—Ç–∫–∏
          dishSuggestions.drinks.forEach(drink => {
            if (!cart.some(cartItem => cartItem.name.toLowerCase().includes(drink.toLowerCase()))) {
              newSuggestions.push({
                name: drink,
                category: 'drink',
                reason: `–ò–¥–µ–∞–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –∫ ${item.name}`,
                price: Math.floor(Math.random() * 150) + 30,
                emoji: 'ü•§'
              });
            }
          });
          
          // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—É—Å—ã
          dishSuggestions.sauces.forEach(sauce => {
            if (!cart.some(cartItem => cartItem.name.toLowerCase().includes(sauce.toLowerCase()))) {
              newSuggestions.push({
                name: sauce,
                category: 'sauce',
                reason: `–í–∫—É—Å–Ω—ã–π —Å–æ—É—Å –¥–ª—è ${item.name}`,
                price: Math.floor(Math.random() * 100) + 25,
                emoji: 'üçØ'
              });
            }
          });
          
          // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∑–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
          if (dishSuggestions.seasonal && dishSuggestions.seasonal[currentSeason]) {
            dishSuggestions.seasonal[currentSeason].forEach(seasonal => {
              if (!cart.some(cartItem => cartItem.name.toLowerCase().includes(seasonal.toLowerCase()))) {
                newSuggestions.push({
                  name: seasonal,
                  category: 'seasonal',
                  reason: `–°–µ–∑–æ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è ${item.name}`,
                  price: Math.floor(Math.random() * 120) + 40,
                  emoji: 'üåø'
                });
              }
            });
          }
        }
      });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
      if (currentHoliday && holidaySuggestions[currentHoliday]) {
        const holiday = holidaySuggestions[currentHoliday];
        holiday.traditional.forEach(traditional => {
          if (!cart.some(cartItem => cartItem.name.toLowerCase().includes(traditional.toLowerCase()))) {
            newSuggestions.push({
              name: traditional,
              category: 'holiday',
              reason: holiday.message,
              price: Math.floor(Math.random() * 300) + 100,
              emoji: 'üéâ'
            });
          }
        });
      }
      
      // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
      if (cart.length === 0) {
        console.log('üîç SmartCart: Cart is empty, showing general suggestions');
        const generalSuggestions = [
          { name: '–°–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π', category: 'essential', reason: '–°–≤–µ–∂–∏–µ –æ–≤–æ—â–∏ –¥–ª—è –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è', price: 180, emoji: 'ü•ó' },
          { name: '–•–ª–µ–± —Ä–∂–∞–Ω–æ–π', category: 'essential', reason: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Ö–ª–µ–± –∫ –ª—é–±–æ–º—É –±–ª—é–¥—É', price: 120, emoji: 'üçû' },
          { name: '–ß–∞–π –∑–µ–ª–µ–Ω—ã–π', category: 'drink', reason: '–ü–æ–ª–µ–∑–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫', price: 80, emoji: 'üçµ' },
          { name: '–ö–æ–º–ø–æ—Ç –∏–∑ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤', category: 'drink', reason: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫', price: 150, emoji: 'ü•§' },
          { name: '–°–º–µ—Ç–∞–Ω–∞', category: 'sauce', reason: '–î–æ–±–∞–≤–∫–∞ –∫ —Å—É–ø–∞–º –∏ —Å–∞–ª–∞—Ç–∞–º', price: 90, emoji: 'ü•õ' },
          { name: '–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≤–æ—â–∏', category: 'seasonal', reason: '–°–µ–∑–æ–Ω–Ω–∞—è –∑–∞–∫—É—Å–∫–∞', price: 200, emoji: 'ü•í' }
        ];
        setSuggestions(generalSuggestions);
        setIsAnalyzing(false);
        setShowSuggestions(true);
        showSuccess('–ü–æ–∫–∞–∑–∞–Ω—ã –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–∫–∞–∑–∞!');
        return;
      }
      
      // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      const uniqueSuggestions = newSuggestions.filter((suggestion, index, self) => 
        index === self.findIndex(s => s.name === suggestion.name)
      ).slice(0, 6);
      
      console.log('üîç SmartCart: Generated suggestions:', uniqueSuggestions);
      
      setSuggestions(uniqueSuggestions);
      setIsAnalyzing(false);
      setShowSuggestions(true);
      
      if (uniqueSuggestions.length > 0) {
        showSuccess(`–ù–∞–π–¥–µ–Ω–æ ${uniqueSuggestions.length} —É–º–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π!`);
      } else {
        showSuccess('–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω, –Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
    }, 1500);
  };

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
  const addSuggestion = (suggestion) => {
    console.log('üîç SmartCart: addSuggestion called with:', suggestion);
    console.log('üîç SmartCart: onAddToCart function:', typeof onAddToCart);
    
    const newItem = {
      id: Date.now() + Math.random(),
      name: suggestion.name,
      price: suggestion.price,
      quantity: 1,
      category: suggestion.category,
      emoji: suggestion.emoji
    };
    
    console.log('üîç SmartCart: Created new item:', newItem);
    
    if (typeof onAddToCart === 'function') {
      onAddToCart(newItem);
      showSuccess(`${suggestion.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`);
      
      // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
      setSuggestions(prev => prev.filter(s => s.name !== suggestion.name));
    } else {
      console.error('üîç SmartCart: onAddToCart is not a function!');
      showError('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É');
    }
  };

  // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–π —Å—É–º–º—ã –∫–æ—Ä–∑–∏–Ω—ã
  const cartTotal = cart.reduce((total, item) => total + (item.price * item.quantity), 0);

  return (
    <div className="smart-cart-container" style={{
      background: 'rgba(255, 255, 255, 0.95)',
      borderRadius: '15px',
      padding: '20px',
      marginBottom: '20px',
      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',
      backdropFilter: 'blur(10px)',
      border: '1px solid rgba(255, 255, 255, 0.2)'
    }}>
      <div className="smart-cart-header" style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: 0, color: '#333' }}>ü§ñ –£–º–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞</h3>
        <div style={{ display: 'flex', gap: '10px' }}>
          <button
            onClick={analyzeCart}
            disabled={isAnalyzing}
            style={{
              background: isAnalyzing ? '#ccc' : 'linear-gradient(135deg, #667eea, #764ba2)',
              color: 'white',
              border: 'none',
              padding: '10px 20px',
              borderRadius: '8px',
              cursor: isAnalyzing ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: 'bold'
            }}
          >
            {isAnalyzing ? 'üîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é...' : (cart.length === 0 ? 'üß† –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏' : 'üß† –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑')}
          </button>
          
          <button
            onClick={() => {
              console.log('üîç SmartCart: Test button clicked');
              console.log('üîç SmartCart: Current state:', { cart, isAnalyzing, showSuggestions, suggestions });
              
              // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
              const testSuggestions = [
                { name: '–¢–µ—Å—Ç–æ–≤—ã–π —Å–∞–ª–∞—Ç', category: 'essential', reason: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', price: 150, emoji: 'ü•ó' },
                { name: '–¢–µ—Å—Ç–æ–≤—ã–π –Ω–∞–ø–∏—Ç–æ–∫', category: 'drink', reason: '–¢–µ—Å—Ç–æ–≤—ã–π –Ω–∞–ø–∏—Ç–æ–∫', price: 100, emoji: 'ü•§' }
              ];
              setSuggestions(testSuggestions);
              setShowSuggestions(true);
              showSuccess('–ü–æ–∫–∞–∑–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!');
            }}
            style={{
              background: 'linear-gradient(135deg, #28a745, #20c997)',
              color: 'white',
              border: 'none',
              padding: '10px 15px',
              borderRadius: '8px',
              cursor: 'pointer',
              fontSize: '12px',
              fontWeight: 'bold'
            }}
          >
            üîç –¢–µ—Å—Ç
          </button>
        </div>
      </div>

      {cart.length > 0 && (
        <div className="cart-summary" style={{
          background: 'rgba(102, 126, 234, 0.1)',
          padding: '15px',
          borderRadius: '10px',
          marginBottom: '20px'
        }}>
          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>
            <span><strong>–¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:</strong> {cart.length}</span>
            <span><strong>–û–±—â–∞—è —Å—É–º–º–∞:</strong> {cartTotal}‚ÇΩ</span>
          </div>
          <div style={{ fontSize: '14px', color: '#666' }}>
            üí° –£–º–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞ –º–æ–∂–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫ –≤–∞—à–µ–º—É –∑–∞–∫–∞–∑—É
          </div>
        </div>
      )}

      {showSuggestions && suggestions.length > 0 && (
        <div className="suggestions-section">
          <h4 style={{ color: '#333', marginBottom: '15px' }}>üí° –£–º–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</h4>
          <div className="suggestions-grid" style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
            gap: '15px'
          }}>
            {suggestions.map((suggestion, index) => (
              <div key={index} className="suggestion-card" style={{
                background: 'linear-gradient(135deg, #f8f9fa, #e9ecef)',
                padding: '15px',
                borderRadius: '10px',
                border: '1px solid #dee2e6',
                cursor: 'pointer',
                transition: 'all 0.3s ease',
                position: 'relative'
              }}
              onMouseEnter={(e) => {
                e.target.style.transform = 'translateY(-2px)';
                e.target.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.1)';
              }}
              onMouseLeave={(e) => {
                e.target.style.transform = 'translateY(0)';
                e.target.style.boxShadow = 'none';
              }}
              onClick={() => addSuggestion(suggestion)}
              >
                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>
                  <span style={{ fontSize: '18px' }}>{suggestion.emoji}</span>
                  <span style={{ fontSize: '16px', fontWeight: 'bold', color: '#28a745' }}>+{suggestion.price}‚ÇΩ</span>
                </div>
                <div style={{ fontWeight: 'bold', marginBottom: '5px', color: '#333' }}>
                  {suggestion.name}
                </div>
                <div style={{ fontSize: '12px', color: '#666', marginBottom: '10px' }}>
                  {suggestion.reason}
                </div>
                <div style={{
                  background: 'linear-gradient(135deg, #667eea, #764ba2)',
                  color: 'white',
                  padding: '8px 12px',
                  borderRadius: '6px',
                  fontSize: '12px',
                  fontWeight: 'bold',
                  textAlign: 'center'
                }}>
                  –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {cart.length === 0 && (
        <div style={{
          textAlign: 'center',
          padding: '40px 20px',
          color: '#666'
        }}>
          <div style={{ fontSize: '48px', marginBottom: '20px' }}>üõí</div>
          <div style={{ fontSize: '18px', marginBottom: '10px' }}>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>
          <div style={{ fontSize: '14px' }}>–î–æ–±–∞–≤—å—Ç–µ –±–ª—é–¥–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —É–º–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</div>
        </div>
      )}
    </div>
  );
};

export default SmartCart;
