import React, { useState, useEffect } from 'react';
import DiabeticChecker from './DiabeticChecker';

const DiabeticMenuSection = ({ dishes = [], onAddToCart }) => {
  const [activeTab, setActiveTab] = useState('verified'); // 'verified' –∏–ª–∏ 'ai-check'
  const [filteredDishes, setFilteredDishes] = useState([]);
  const [allDishes, setAllDishes] = useState([]);
  const [sortBy, setSortBy] = useState('gi'); // gi, calories, protein
  const [filterBy, setFilterBy] = useState('all'); // all, low-gi, high-protein, low-calories

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–ª—é–¥–∞
  const addTestDish = () => {
    const testDishes = [
      {
        id: `test-${Date.now()}`,
        name: '–ì—Ä–µ—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç —Å –∞–≤–æ–∫–∞–¥–æ',
        price: 450,
        image: '/images/placeholder.jpg',
        ingredients: '–ü–æ–º–∏–¥–æ—Ä—ã, –æ–≥—É—Ä—Ü—ã, –∞–≤–æ–∫–∞–¥–æ, –æ–ª–∏–≤–∫–∏, —Å—ã—Ä —Ñ–µ—Ç–∞, –æ–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ, –ª–∏–º–æ–Ω–Ω—ã–π —Å–æ–∫, –±–∞–∑–∏–ª–∏–∫',
        calories: 280,
        protein: 12,
        glycemicIndex: 25,
        diabeticFriendly: false, // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è AI-–ø—Ä–æ–≤–µ—Ä–∫–∏
        description: '–°–≤–µ–∂–∏–π —Å–∞–ª–∞—Ç —Å –Ω–∏–∑–∫–∏–º –≥–ª–∏–∫–µ–º–∏—á–µ—Å–∫–∏–º –∏–Ω–¥–µ–∫—Å–æ–º'
      },
      {
        id: `test-${Date.now()}-2`,
        name: '–û–≤—Å—è–Ω–∞—è –∫–∞—à–∞ —Å —è–≥–æ–¥–∞–º–∏',
        price: 320,
        image: '/images/placeholder.jpg',
        ingredients: '–û–≤—Å—è–Ω—ã–µ —Ö–ª–æ–ø—å—è, —á–µ—Ä–Ω–∏–∫–∞, –º–∞–ª–∏–Ω–∞, –º–µ–¥, –º–∏–Ω–¥–∞–ª—å, –∫–æ—Ä–∏—Ü–∞',
        calories: 350,
        protein: 15,
        glycemicIndex: 55,
        diabeticFriendly: false,
        description: '–ü–æ–ª–µ–∑–Ω–∞—è –∫–∞—à–∞ —Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º–∏ —è–≥–æ–¥–∞–º–∏'
      },
      {
        id: `test-${Date.now()}-3`,
        name: '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å –æ–≤–æ—â–∞–º–∏',
        price: 580,
        image: '/images/placeholder.jpg',
        ingredients: '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞, –±—Ä–æ–∫–∫–æ–ª–∏, –º–æ—Ä–∫–æ–≤—å, —Ü—É–∫–∏–Ω–∏, –æ–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ, —á–µ—Å–Ω–æ–∫, —Ä–æ–∑–º–∞—Ä–∏–Ω',
        calories: 320,
        protein: 35,
        glycemicIndex: 15,
        diabeticFriendly: false,
        description: '–ë–µ–ª–∫–æ–≤–æ–µ –±–ª—é–¥–æ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º —É–≥–ª–µ–≤–æ–¥–æ–≤'
      }
    ];
    
    const randomDish = testDishes[Math.floor(Math.random() * testDishes.length)];
    setAllDishes(prev => [...prev, randomDish]);
  };

  useEffect(() => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º allDishes —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
    if (allDishes.length === 0 && dishes.length > 0) {
      setAllDishes(dishes);
    }
  }, [dishes, allDishes.length]);

  useEffect(() => {
    let filtered;
    if (activeTab === 'verified') {
      // –¢–æ–ª—å–∫–æ –±–ª—é–¥–∞, –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ –ø–æ–≤–∞—Ä–∞–º–∏ –∫–∞–∫ –¥–∏–∞–±–µ—Ç–∏—á–µ—Å–∫–∏–µ
      filtered = allDishes.filter(dish => dish.diabeticFriendly === true);
    } else {
      // –í—Å–µ –±–ª—é–¥–∞ –¥–ª—è AI-–ø—Ä–æ–≤–µ—Ä–∫–∏
      filtered = allDishes.filter(dish => dish.diabeticFriendly !== true);
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
    switch (filterBy) {
      case 'low-gi':
        filtered = filtered.filter(dish => (dish.glycemicIndex || 0) < 50);
        break;
      case 'high-protein':
        filtered = filtered.filter(dish => (dish.protein || 0) > 15);
        break;
      case 'low-calories':
        filtered = filtered.filter(dish => (dish.calories || 0) < 300);
        break;
      default:
        break;
    }

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    switch (sortBy) {
      case 'gi':
        filtered.sort((a, b) => (a.glycemicIndex || 0) - (b.glycemicIndex || 0));
        break;
      case 'calories':
        filtered.sort((a, b) => (a.calories || 0) - (b.calories || 0));
        break;
      case 'protein':
        filtered.sort((a, b) => (b.protein || 0) - (a.protein || 0));
        break;
      default:
        break;
    }

    setFilteredDishes(filtered);
  }, [allDishes, sortBy, filterBy, activeTab]);

  const getGIColor = (gi) => {
    if (gi < 50) return '#4caf50'; // –ó–µ–ª–µ–Ω—ã–π - –Ω–∏–∑–∫–∏–π –ì–ò
    if (gi < 70) return '#ff9800'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π - —Å—Ä–µ–¥–Ω–∏–π –ì–ò
    return '#f44336'; // –ö—Ä–∞—Å–Ω—ã–π - –≤—ã—Å–æ–∫–∏–π –ì–ò
  };

  const getGILabel = (gi) => {
    if (gi < 50) return '–ù–∏–∑–∫–∏–π –ì–ò';
    if (gi < 70) return '–°—Ä–µ–¥–Ω–∏–π –ì–ò';
    return '–í—ã—Å–æ–∫–∏–π –ì–ò';
  };

  const handleAddToCart = (dish) => {
    if (onAddToCart) {
      onAddToCart(dish);
    }
  };

  return (
    <div style={{ padding: '20px' }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ */}
      <div style={{
        textAlign: 'center',
        marginBottom: '20px',
        padding: '20px',
        backgroundColor: '#e8f5e8',
        borderRadius: '12px',
        border: '2px solid #4caf50'
      }}>
        <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#2e7d32', marginBottom: '10px' }}>
          ü©∫ –ú–µ–Ω—é –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤
        </div>
        <div style={{ fontSize: '14px', color: '#666' }}>
          {activeTab === 'verified' 
            ? '–ë–ª—é–¥–∞, –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø–æ–≤–∞—Ä–∞–º–∏ –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤'
            : '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª—é–±—ã–µ –±–ª—é–¥–∞ AI-—Å–∏—Å—Ç–µ–º–æ–π –Ω–∞ –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤'
          }
        </div>
        <div style={{ fontSize: '12px', color: '#4caf50', marginTop: '5px' }}>
          ‚úÖ –ë–µ–∑ —Å–∞—Ö–∞—Ä–∞ ‚Ä¢ ‚úÖ –ù–∏–∑–∫–∏–π –ì–ò ‚Ä¢ ‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏
        </div>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div style={{
        display: 'flex',
        marginBottom: '20px',
        borderBottom: '2px solid #e0e0e0'
      }}>
        <button
          onClick={() => setActiveTab('verified')}
          style={{
            padding: '12px 24px',
            border: 'none',
            backgroundColor: activeTab === 'verified' ? '#4caf50' : 'transparent',
            color: activeTab === 'verified' ? 'white' : '#666',
            fontSize: '16px',
            fontWeight: 'bold',
            cursor: 'pointer',
            borderTopLeftRadius: '8px',
            borderTopRightRadius: '8px',
            transition: 'all 0.3s ease'
          }}
        >
          ‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø–æ–≤–∞—Ä–∞–º–∏
        </button>
        <button
          onClick={() => setActiveTab('ai-check')}
          style={{
            padding: '12px 24px',
            border: 'none',
            backgroundColor: activeTab === 'ai-check' ? '#2196f3' : 'transparent',
            color: activeTab === 'ai-check' ? 'white' : '#666',
            fontSize: '16px',
            fontWeight: 'bold',
            cursor: 'pointer',
            borderTopLeftRadius: '8px',
            borderTopRightRadius: '8px',
            transition: 'all 0.3s ease'
          }}
        >
          ü§ñ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å AI-—Å–∏—Å—Ç–µ–º–æ–π
        </button>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–ª—é–¥–∞ */}
      <div style={{
        display: 'flex',
        justifyContent: 'center',
        marginBottom: '20px'
      }}>
        <button
          onClick={addTestDish}
          style={{
            padding: '10px 20px',
            backgroundColor: '#ff9800',
            color: 'white',
            border: 'none',
            borderRadius: '20px',
            fontSize: '14px',
            fontWeight: 'bold',
            cursor: 'pointer',
            transition: 'all 0.3s ease',
            display: 'flex',
            alignItems: 'center',
            gap: '8px'
          }}
          onMouseEnter={(e) => e.target.style.backgroundColor = '#f57c00'}
          onMouseLeave={(e) => e.target.style.backgroundColor = '#ff9800'}
        >
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ –¥–ª—è AI-–ø—Ä–æ–≤–µ—Ä–∫–∏
        </button>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
      <div style={{
        display: 'flex',
        gap: '15px',
        marginBottom: '20px',
        flexWrap: 'wrap',
        alignItems: 'center'
      }}>
        <div>
          <label style={{ marginRight: '5px', fontWeight: 'bold' }}>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</label>
          <select
            value={sortBy}
            onChange={(e) => setSortBy(e.target.value)}
            style={{
              padding: '5px 10px',
              borderRadius: '4px',
              border: '1px solid #ddd'
            }}
          >
            <option value="gi">–ü–æ –≥–ª–∏–∫–µ–º–∏—á–µ—Å–∫–æ–º—É –∏–Ω–¥–µ–∫—Å—É</option>
            <option value="calories">–ü–æ –∫–∞–ª–æ—Ä–∏—è–º</option>
            <option value="protein">–ü–æ –±–µ–ª–∫—É</option>
          </select>
        </div>

        <div>
          <label style={{ marginRight: '5px', fontWeight: 'bold' }}>–§–∏–ª—å—Ç—Ä:</label>
          <select
            value={filterBy}
            onChange={(e) => setFilterBy(e.target.value)}
            style={{
              padding: '5px 10px',
              borderRadius: '4px',
              border: '1px solid #ddd'
            }}
          >
            <option value="all">–í—Å–µ –±–ª—é–¥–∞</option>
            <option value="low-gi">–ù–∏–∑–∫–∏–π –ì–ò (&lt;50)</option>
            <option value="high-protein">–í—ã—Å–æ–∫–æ–±–µ–ª–∫–æ–≤—ã–µ (&gt;15–≥)</option>
            <option value="low-calories">–ù–∏–∑–∫–æ–∫–∞–ª–æ—Ä–∏–π–Ω—ã–µ (&lt;300 –∫–∫–∞–ª)</option>
          </select>
        </div>

        <div style={{
          fontSize: '12px',
          color: '#666',
          marginLeft: 'auto'
        }}>
          –ù–∞–π–¥–µ–Ω–æ: {filteredDishes.length} –±–ª—é–¥
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –±–ª—é–¥ */}
      {filteredDishes.length === 0 ? (
        <div style={{
          textAlign: 'center',
          padding: '40px',
          color: '#666',
          fontSize: '16px'
        }}>
          <div style={{ fontSize: '48px', marginBottom: '10px' }}>
            {activeTab === 'verified' ? 'üçΩÔ∏è' : 'ü§ñ'}
          </div>
          <div>
            {activeTab === 'verified' 
              ? '–ü–æ–∫–∞ –Ω–µ—Ç –±–ª—é–¥ –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤' 
              : '–ù–µ—Ç –±–ª—é–¥ –¥–ª—è AI-–ø—Ä–æ–≤–µ—Ä–∫–∏'
            }
          </div>
          <div style={{ fontSize: '12px', marginTop: '5px' }}>
            {activeTab === 'verified' 
              ? '–ü–æ–≤–∞—Ä–∞ –¥–æ–±–∞–≤–ª—è—é—Ç –Ω–æ–≤—ã–µ –±–ª—é–¥–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å'
              : '–í—Å–µ –±–ª—é–¥–∞ —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –ø–æ–≤–∞—Ä–∞–º–∏ –∏–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–ª—é–¥'
            }
          </div>
        </div>
      ) : (
        <div style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',
          gap: '20px'
        }}>
          {filteredDishes.map((dish, index) => (
            <div key={index} style={{
              border: `2px solid ${activeTab === 'verified' ? '#4caf50' : '#2196f3'}`,
              borderRadius: '12px',
              padding: '15px',
              backgroundColor: activeTab === 'verified' ? '#f8fff8' : '#f0f8ff',
              transition: 'transform 0.2s ease',
              cursor: 'pointer'
            }}
            onMouseEnter={(e) => e.target.style.transform = 'translateY(-2px)'}
            onMouseLeave={(e) => e.target.style.transform = 'translateY(0)'}
            >
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª—é–¥–∞ */}
              <div style={{
                fontSize: '18px',
                fontWeight: 'bold',
                marginBottom: '10px',
                color: '#2e7d32'
              }}>
                {dish.name}
              </div>

              {/* –§–æ—Ç–æ –±–ª—é–¥–∞ */}
              {dish.image && (
                <div style={{
                  width: '100%',
                  height: '150px',
                  backgroundColor: '#f0f0f0',
                  borderRadius: '8px',
                  marginBottom: '10px',
                  backgroundImage: `url(${dish.image})`,
                  backgroundSize: 'cover',
                  backgroundPosition: 'center'
                }} />
              )}

              {/* –ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å */}
              <div style={{
                display: 'grid',
                gridTemplateColumns: '1fr 1fr',
                gap: '8px',
                marginBottom: '10px',
                fontSize: '12px'
              }}>
                <div>
                  <span style={{ fontWeight: 'bold' }}>–ö–∞–ª–æ—Ä–∏–∏:</span> {dish.calories || 0} –∫–∫–∞–ª
                </div>
                <div>
                  <span style={{ fontWeight: 'bold' }}>–ë–µ–ª–∫–∏:</span> {dish.protein || 0}–≥
                </div>
                <div>
                  <span style={{ fontWeight: 'bold' }}>–£–≥–ª–µ–≤–æ–¥—ã:</span> {dish.carbs || 0}–≥
                </div>
                <div>
                  <span style={{ fontWeight: 'bold' }}>–ñ–∏—Ä—ã:</span> {dish.fat || 0}–≥
                </div>
              </div>

              {/* –ì–ª–∏–∫–µ–º–∏—á–µ—Å–∫–∏–π –∏–Ω–¥–µ–∫—Å */}
              <div style={{
                display: 'flex',
                alignItems: 'center',
                marginBottom: '10px',
                padding: '5px 10px',
                backgroundColor: getGIColor(dish.glycemicIndex || 0),
                borderRadius: '15px',
                color: 'white',
                fontSize: '12px',
                fontWeight: 'bold'
              }}>
                <span style={{ marginRight: '5px' }}>üìä</span>
                –ì–ò: {dish.glycemicIndex || 0} ({getGILabel(dish.glycemicIndex || 0)})
              </div>

              {/* –ú–µ—Ç–∫–∏ */}
              <div style={{
                display: 'flex',
                flexWrap: 'wrap',
                gap: '5px',
                marginBottom: '10px'
              }}>
                <span style={{
                  padding: '2px 8px',
                  backgroundColor: '#4caf50',
                  color: 'white',
                  borderRadius: '10px',
                  fontSize: '10px',
                  fontWeight: 'bold'
                }}>
                  ‚úÖ –ë–µ–∑ —Å–∞—Ö–∞—Ä–∞
                </span>
                <span style={{
                  padding: '2px 8px',
                  backgroundColor: '#2196f3',
                  color: 'white',
                  borderRadius: '10px',
                  fontSize: '10px',
                  fontWeight: 'bold'
                }}>
                  ü©∫ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ
                </span>
                {dish.halal && (
                  <span style={{
                    padding: '2px 8px',
                    backgroundColor: '#9c27b0',
                    color: 'white',
                    borderRadius: '10px',
                    fontSize: '10px',
                    fontWeight: 'bold'
                  }}>
                    üïå –•–∞–ª—è–ª—å
                  </span>
                )}
              </div>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
              {dish.description && (
                <div style={{
                  fontSize: '12px',
                  color: '#666',
                  marginBottom: '10px',
                  lineHeight: '1.4'
                }}>
                  {dish.description}
                </div>
              )}

              {/* AI-–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ ai-check */}
              {activeTab === 'ai-check' && dish.ingredients && (
                <div style={{
                  marginBottom: '15px',
                  padding: '10px',
                  backgroundColor: '#fff',
                  borderRadius: '8px',
                  border: '1px solid #e0e0e0'
                }}>
                  <DiabeticChecker ingredients={dish.ingredients} />
                </div>
              )}

              {/* AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –±–ª—é–¥ */}
              {activeTab === 'verified' && (
                <div style={{
                  fontSize: '11px',
                  color: '#1976d2',
                  backgroundColor: '#e3f2fd',
                  padding: '8px',
                  borderRadius: '6px',
                  borderLeft: '3px solid #2196f3'
                }}>
                  <div style={{ fontWeight: 'bold', marginBottom: '3px' }}>ü§ñ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</div>
                  <div>
                    {dish.glycemicIndex < 50 
                      ? '–û—Ç–ª–∏—á–Ω–æ –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤! –ù–∏–∑–∫–∏–π –ì–ò –∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–æ—Å—Ç–∞–≤.'
                      : dish.glycemicIndex < 70
                      ? '–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤ –≤ —É–º–µ—Ä–µ–Ω–Ω—ã—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞—Ö.'
                      : '–¢—Ä–µ–±—É–µ—Ç –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –¥–∏–∞–±–µ—Ç–µ.'
                    }
                  </div>
                </div>
              )}

              {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫–∞–∑–∞ */}
              <button 
                onClick={() => handleAddToCart(dish)}
                style={{
                  width: '100%',
                  padding: '10px',
                  backgroundColor: activeTab === 'verified' ? '#4caf50' : '#2196f3',
                  color: 'white',
                  border: 'none',
                  borderRadius: '6px',
                  fontSize: '14px',
                  fontWeight: 'bold',
                  cursor: 'pointer',
                  marginTop: '10px',
                  transition: 'background-color 0.2s ease'
                }}
                onMouseEnter={(e) => e.target.style.backgroundColor = activeTab === 'verified' ? '#45a049' : '#1976d2'}
                onMouseLeave={(e) => e.target.style.backgroundColor = activeTab === 'verified' ? '#4caf50' : '#2196f3'}
              >
                üõí {activeTab === 'verified' ? '–ó–∞–∫–∞–∑–∞—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É'} –∑–∞ {dish.price || '0'}‚ÇΩ
              </button>
            </div>
          ))}
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
      <div style={{
        marginTop: '30px',
        padding: '20px',
        backgroundColor: activeTab === 'verified' ? '#f5f5f5' : '#f0f8ff',
        borderRadius: '8px',
        fontSize: '12px',
        color: '#666',
        border: `1px solid ${activeTab === 'verified' ? '#e0e0e0' : '#2196f3'}`
      }}>
        <div style={{ fontWeight: 'bold', marginBottom: '10px', color: '#333' }}>
          ‚ÑπÔ∏è {activeTab === 'verified' ? '–û –¥–∏–∞–±–µ—Ç–∏—á–µ—Å–∫–æ–º –º–µ–Ω—é' : '–û AI-–ø—Ä–æ–≤–µ—Ä–∫–µ –±–ª—é–¥'}
        </div>
        <div style={{ lineHeight: '1.5' }}>
          {activeTab === 'verified' ? (
            <>
              –í—Å–µ –±–ª—é–¥–∞ –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É AI-—Å–∏—Å—Ç–µ–º–æ–π –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¥–ª—è –ª—é–¥–µ–π —Å –¥–∏–∞–±–µ—Ç–æ–º.
              –ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–∞—Ö–∞—Ä–∞, –Ω–∏–∑–∫–∏–π –≥–ª–∏–∫–µ–º–∏—á–µ—Å–∫–∏–π –∏–Ω–¥–µ–∫—Å –∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–æ—Å—Ç–∞–≤.
              –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –æ —Å–æ—Å—Ç–∞–≤–µ –±–ª—é–¥–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–æ–≤–∞—Ä—É —á–µ—Ä–µ–∑ —á–∞—Ç.
            </>
          ) : (
            <>
              –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª—é–±—ã–µ –±–ª—é–¥–∞ AI-—Å–∏—Å—Ç–µ–º–æ–π –Ω–∞ –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å –¥–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤.
              –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–∞–≤ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤, —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≥–ª–∏–∫–µ–º–∏—á–µ—Å–∫–∏–π –∏–Ω–¥–µ–∫—Å –∏ –¥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.
              –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –±–ª—é–¥–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –∑–∞–∫–∞–∑–∞.
            </>
          )}
        </div>
      </div>
    </div>
  );
};

export default DiabeticMenuSection;
