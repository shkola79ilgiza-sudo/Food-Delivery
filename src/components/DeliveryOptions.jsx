import React, { useState, useEffect, useCallback, useMemo } from "react";
import { useToast } from "../contexts/ToastContext";

const DeliveryOptions = ({ order, onDeliveryOptionChange }) => {
  const { showSuccess } = useToast(); // showError –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
  const [selectedOption, setSelectedOption] = useState(
    order?.deliveryOption || "pickup"
  );
  const [deliveryAddress, setDeliveryAddress] = useState("");
  const [deliveryRadius, setDeliveryRadius] = useState(10);
  const [estimatedDeliveryTime, setEstimatedDeliveryTime] = useState("");
  const [deliveryFee, setDeliveryFee] = useState(0);
  const [courierInfo, setCourierInfo] = useState(null);

  const deliveryOptions = useMemo(
    () => [
      {
        id: "pickup",
        name: "–°–∞–º–æ–≤—ã–≤–æ–∑",
        icon: "üè™",
        description: "–ó–∞–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ",
        fee: 0,
        estimatedTime: "15-30 –º–∏–Ω",
        color: "#4CAF50",
      },
      {
        id: "chef_delivery",
        name: "–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ–≤–∞—Ä–æ–º",
        icon: "üë®‚Äçüç≥",
        description: "–ü–æ–≤–∞—Ä –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–∫–∞–∑ –ª–∏—á–Ω–æ",
        fee: 100,
        estimatedTime: "30-60 –º–∏–Ω",
        color: "#2196F3",
        maxRadius: 15,
      },
      {
        id: "courier_partner",
        name: "–ö—É—Ä—å–µ—Ä—Å–∫–∞—è —Å–ª—É–∂–±–∞",
        icon: "üöö",
        description: "–î–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ (–Ø–Ω–¥–µ–∫—Å Go, inDriver)",
        fee: 150,
        estimatedTime: "45-90 –º–∏–Ω",
        color: "#FF9800",
      },
    ],
    []
  );

  const calculateDeliveryDetails = useCallback(() => {
    const option = deliveryOptions.find((opt) => opt.id === selectedOption);
    if (!option) return;

    let fee = option.fee;
    let estimatedTime = option.estimatedTime;

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ–≤–∞—Ä–æ–º
    if (selectedOption === "chef_delivery") {
      if (deliveryRadius > 10) {
        fee += Math.round((deliveryRadius - 10) * 10); // +10‚ÇΩ –∑–∞ –∫–∞–∂–¥—ã–π –∫–º —Å–≤—ã—à–µ 10
      }
      estimatedTime = `${30 + deliveryRadius * 2}-${
        60 + deliveryRadius * 2
      } –º–∏–Ω`;
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –¥–ª—è –∫—É—Ä—å–µ—Ä—Å–∫–æ–π —Å–ª—É–∂–±—ã
    if (selectedOption === "courier_partner") {
      // –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–¥—Ä–µ—Å–∞
      if (
        deliveryAddress.includes("—Ü–µ–Ω—Ç—Ä") ||
        deliveryAddress.includes("—Ü–µ–Ω—Ç—Ä")
      ) {
        fee += 50; // –î–æ–ø–ª–∞—Ç–∞ –∑–∞ —Ü–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞
      }
      estimatedTime = "45-90 –º–∏–Ω";
    }

    setDeliveryFee(fee);
    setEstimatedDeliveryTime(estimatedTime);
  }, [selectedOption, deliveryAddress, deliveryRadius, deliveryOptions]);

  useEffect(() => {
    calculateDeliveryDetails();
  }, [calculateDeliveryDetails]);

  const handleOptionChange = (optionId) => {
    setSelectedOption(optionId);
    const option = deliveryOptions.find((opt) => opt.id === optionId);

    if (onDeliveryOptionChange) {
      onDeliveryOptionChange({
        option: optionId,
        fee: option.fee,
        estimatedTime: option.estimatedTime,
        address: deliveryAddress,
        radius: deliveryRadius,
      });
    }
  };

  const handleAddressChange = (address) => {
    setDeliveryAddress(address);
    if (onDeliveryOptionChange) {
      onDeliveryOptionChange({
        option: selectedOption,
        fee: deliveryFee,
        estimatedTime: estimatedDeliveryTime,
        address: address,
        radius: deliveryRadius,
      });
    }
  };

  const simulateCourierAssignment = () => {
    if (selectedOption !== "courier_partner") return;

    // –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞
    const couriers = [
      { name: "–ê–ª–µ–∫—Å–µ–π", rating: 4.8, eta: "25 –º–∏–Ω", vehicle: "üöó" },
      { name: "–ú–∞—Ä–∏—è", rating: 4.9, eta: "35 –º–∏–Ω", vehicle: "üõµ" },
      { name: "–î–º–∏—Ç—Ä–∏–π", rating: 4.7, eta: "20 –º–∏–Ω", vehicle: "üöó" },
    ];

    const assignedCourier =
      couriers[Math.floor(Math.random() * couriers.length)];
    setCourierInfo(assignedCourier);
    showSuccess(
      `–ö—É—Ä—å–µ—Ä ${assignedCourier.name} –Ω–∞–∑–Ω–∞—á–µ–Ω! ETA: ${assignedCourier.eta}`
    );
  };

  const selectedDeliveryOption = deliveryOptions.find(
    (opt) => opt.id === selectedOption
  );

  return (
    <div
      style={{
        background: "rgba(255, 255, 255, 0.95)",
        borderRadius: "15px",
        padding: "20px",
        marginBottom: "20px",
        boxShadow: "0 8px 32px rgba(0, 0, 0, 0.1)",
        backdropFilter: "blur(10px)",
        border: "1px solid rgba(255, 255, 255, 0.2)",
      }}
    >
      <h3
        style={{
          color: "#2D5016",
          marginBottom: "20px",
          display: "flex",
          alignItems: "center",
          gap: "10px",
        }}
      >
        üöö –û–ø—Ü–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
      </h3>

      {/* –í—ã–±–æ—Ä –æ–ø—Ü–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ */}
      <div style={{ marginBottom: "20px" }}>
        <div
          style={{
            display: "grid",
            gridTemplateColumns: "repeat(auto-fit, minmax(200px, 1fr))",
            gap: "15px",
          }}
        >
          {deliveryOptions.map((option) => (
            <div
              key={option.id}
              onClick={() => handleOptionChange(option.id)}
              style={{
                padding: "15px",
                borderRadius: "12px",
                border:
                  selectedOption === option.id
                    ? `3px solid ${option.color}`
                    : "2px solid #e0e0e0",
                background:
                  selectedOption === option.id ? `${option.color}15` : "white",
                cursor: "pointer",
                transition: "all 0.3s ease",
                textAlign: "center",
              }}
              onMouseEnter={(e) => {
                if (selectedOption !== option.id) {
                  e.target.style.transform = "translateY(-2px)";
                  e.target.style.boxShadow = "0 4px 12px rgba(0,0,0,0.15)";
                }
              }}
              onMouseLeave={(e) => {
                if (selectedOption !== option.id) {
                  e.target.style.transform = "translateY(0)";
                  e.target.style.boxShadow = "none";
                }
              }}
            >
              <div style={{ fontSize: "24px", marginBottom: "8px" }}>
                {option.icon}
              </div>
              <div
                style={{
                  fontSize: "16px",
                  fontWeight: "bold",
                  color: selectedOption === option.id ? option.color : "#333",
                  marginBottom: "5px",
                }}
              >
                {option.name}
              </div>
              <div
                style={{
                  fontSize: "12px",
                  color: "#666",
                  marginBottom: "8px",
                }}
              >
                {option.description}
              </div>
              <div
                style={{
                  fontSize: "14px",
                  fontWeight: "bold",
                  color: option.color,
                }}
              >
                {option.fee === 0 ? "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ" : `${option.fee}‚ÇΩ`}
              </div>
              <div
                style={{
                  fontSize: "12px",
                  color: "#666",
                }}
              >
                {option.estimatedTime}
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      {selectedOption !== "pickup" && (
        <div
          style={{
            background: "#f8f9fa",
            borderRadius: "10px",
            padding: "15px",
            marginBottom: "15px",
          }}
        >
          <h4 style={{ color: "#2D5016", marginBottom: "15px" }}>
            üìç –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
          </h4>

          {/* –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ */}
          <div style={{ marginBottom: "15px" }}>
            <label
              style={{
                display: "block",
                marginBottom: "8px",
                fontSize: "14px",
                fontWeight: "bold",
                color: "#333",
              }}
            >
              –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:
            </label>
            <input
              type="text"
              value={deliveryAddress}
              onChange={(e) => handleAddressChange(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏"
              style={{
                width: "100%",
                padding: "10px 15px",
                border: "2px solid #e0e0e0",
                borderRadius: "8px",
                fontSize: "14px",
                outline: "none",
              }}
            />
          </div>

          {/* –†–∞–¥–∏—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ–≤–∞—Ä–æ–º) */}
          {selectedOption === "chef_delivery" && (
            <div style={{ marginBottom: "15px" }}>
              <label
                style={{
                  display: "block",
                  marginBottom: "8px",
                  fontSize: "14px",
                  fontWeight: "bold",
                  color: "#333",
                }}
              >
                –†–∞–¥–∏—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {deliveryRadius} –∫–º
              </label>
              <input
                type="range"
                min="5"
                max="25"
                value={deliveryRadius}
                onChange={(e) => setDeliveryRadius(parseInt(e.target.value))}
                style={{
                  width: "100%",
                  height: "6px",
                  borderRadius: "3px",
                  background: "#e0e0e0",
                  outline: "none",
                }}
              />
              <div
                style={{
                  display: "flex",
                  justifyContent: "space-between",
                  fontSize: "12px",
                  color: "#666",
                  marginTop: "5px",
                }}
              >
                <span>5 –∫–º</span>
                <span>25 –∫–º</span>
              </div>
            </div>
          )}

          {/* –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞ */}
          {selectedOption === "courier_partner" && (
            <div style={{ marginBottom: "15px" }}>
              <button
                onClick={simulateCourierAssignment}
                style={{
                  background: "#FF9800",
                  color: "white",
                  border: "none",
                  borderRadius: "8px",
                  padding: "10px 20px",
                  fontSize: "14px",
                  fontWeight: "bold",
                  cursor: "pointer",
                  display: "flex",
                  alignItems: "center",
                  gap: "8px",
                }}
              >
                üöö –ù–∞–∑–Ω–∞—á–∏—Ç—å –∫—É—Ä—å–µ—Ä–∞
              </button>
            </div>
          )}

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—å–µ—Ä–µ */}
          {courierInfo && (
            <div
              style={{
                background: "#fff3cd",
                border: "1px solid #ffeaa7",
                borderRadius: "8px",
                padding: "12px",
                marginBottom: "15px",
              }}
            >
              <h5 style={{ color: "#856404", marginBottom: "8px" }}>
                üöö –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –∫—É—Ä—å–µ—Ä:
              </h5>
              <div style={{ fontSize: "14px", color: "#856404" }}>
                <div>
                  <strong>–ò–º—è:</strong> {courierInfo.name}
                </div>
                <div>
                  <strong>–†–µ–π—Ç–∏–Ω–≥:</strong> ‚≠ê {courierInfo.rating}
                </div>
                <div>
                  <strong>–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:</strong> {courierInfo.vehicle}
                </div>
                <div>
                  <strong>ETA:</strong> {courierInfo.eta}
                </div>
              </div>
            </div>
          )}
        </div>
      )}

      {/* –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div
        style={{
          background: selectedDeliveryOption.color + "15",
          border: `2px solid ${selectedDeliveryOption.color}`,
          borderRadius: "10px",
          padding: "15px",
        }}
      >
        <h4
          style={{ color: selectedDeliveryOption.color, marginBottom: "10px" }}
        >
          üìã –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        </h4>
        <div
          style={{
            display: "grid",
            gridTemplateColumns: "repeat(auto-fit, minmax(150px, 1fr))",
            gap: "10px",
            fontSize: "14px",
          }}
        >
          <div>
            <strong>–°–ø–æ—Å–æ–±:</strong> {selectedDeliveryOption.name}
          </div>
          <div>
            <strong>–°—Ç–æ–∏–º–æ—Å—Ç—å:</strong>{" "}
            {deliveryFee === 0 ? "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ" : `${deliveryFee}‚ÇΩ`}
          </div>
          <div>
            <strong>–í—Ä–µ–º—è:</strong> {estimatedDeliveryTime}
          </div>
          {deliveryAddress && (
            <div>
              <strong>–ê–¥—Ä–µ—Å:</strong> {deliveryAddress}
            </div>
          )}
          {selectedOption === "chef_delivery" && (
            <div>
              <strong>–†–∞–¥–∏—É—Å:</strong> {deliveryRadius} –∫–º
            </div>
          )}
        </div>
      </div>

      {/* SLA –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div
        style={{
          marginTop: "15px",
          padding: "10px",
          background: "#e8f5e8",
          borderRadius: "8px",
          fontSize: "12px",
          color: "#2D5016",
        }}
      >
        <div style={{ fontWeight: "bold", marginBottom: "5px" }}>
          üìã SLA –≥–∞—Ä–∞–Ω—Ç–∏–∏:
        </div>
        <div>‚Ä¢ –ü–æ–≤–∞—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–∫–∞–∑ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç</div>
        <div>‚Ä¢ –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è ¬±15 –º–∏–Ω—É—Ç –æ—Ç –∑–∞—è–≤–ª–µ–Ω–Ω–æ–≥–æ</div>
        <div>‚Ä¢ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ ¬±20 –º–∏–Ω—É—Ç –æ—Ç —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ</div>
        <div>‚Ä¢ –ü—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ SLA - –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç—É</div>
      </div>
    </div>
  );
};

export default DeliveryOptions;
