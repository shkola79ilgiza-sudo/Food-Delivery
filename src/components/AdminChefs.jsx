import React, { useState, useEffect, useCallback } from "react";
import { useNavigate } from "react-router-dom";

const AdminChefs = () => {
  const [chefs, setChefs] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedChef, setSelectedChef] = useState(null);
  const [showModal, setShowModal] = useState(false);
  const navigate = useNavigate();

  const loadChefs = useCallback(() => {
    setLoading(true);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é chef
    const allUsers = JSON.parse(localStorage.getItem("allUsers") || "[]");
    const chefUsers = allUsers.filter((user) => user.role === "chef");

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∑–∞–∫–∞–∑–∞–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–≤–∞—Ä–∞
    const orders = JSON.parse(localStorage.getItem("clientOrders") || "[]");

    const chefsWithStats = chefUsers.map((chef) => {
      const chefOrders = orders.filter((order) => order.chefId === chef.email);
      const totalRevenue = chefOrders.reduce(
        (sum, order) => sum + (order.payment?.total || 0),
        0
      );
      const completedOrders = chefOrders.filter(
        (order) => order.status === "delivered"
      ).length;

      return {
        ...chef,
        totalOrders: chefOrders.length,
        totalRevenue,
        completedOrders,
        rating: calculateChefRating(chef.email),
      };
    });

    setChefs(chefsWithStats);
    setLoading(false);
  }, []);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const token = localStorage.getItem("authToken");
    const role = localStorage.getItem("role");

    if (!token || role !== "admin") {
      navigate("/admin/login");
      return;
    }

    loadChefs();
  }, [navigate, loadChefs]);

  const calculateChefRating = (chefEmail) => {
    const reviews = JSON.parse(localStorage.getItem("chefReviews") || "[]");
    const chefReviews = reviews.filter((review) => review.chefId === chefEmail);

    if (chefReviews.length === 0) return 0;

    const totalRating = chefReviews.reduce(
      (sum, review) => sum + review.rating,
      0
    );
    return (totalRating / chefReviews.length).toFixed(1);
  };

  const handleChefClick = (chef) => {
    setSelectedChef(chef);
    setShowModal(true);
  };

  const handleBlockChef = (chefEmail) => {
    const allUsers = JSON.parse(localStorage.getItem("allUsers") || "[]");
    const updatedUsers = allUsers.map((user) =>
      user.email === chefEmail ? { ...user, blocked: !user.blocked } : user
    );
    localStorage.setItem("allUsers", JSON.stringify(updatedUsers));
    loadChefs();
  };

  const allDocumentsUploaded = (chef) => {
    return (
      chef.documents?.passport &&
      chef.documents?.healthBook &&
      chef.documents?.selfEmployment &&
      chef.documents?.kitchenCertificate &&
      chef.documents?.kitchenPhotos?.length > 0 &&
      chef.documents?.dishPhotos?.length >= 4
    );
  };

  const handleVerifyDocuments = (chefEmail, approved) => {
    const allUsers = JSON.parse(localStorage.getItem("allUsers") || "[]");
    const updatedUsers = allUsers.map((user) =>
      user.email === chefEmail
        ? {
            ...user,
            documentsVerified: approved,
            documentsVerifiedAt: new Date().toISOString(),
            documentsVerifiedBy: "admin",
            verified: approved,
          }
        : user
    );
    localStorage.setItem("allUsers", JSON.stringify(updatedUsers));
    loadChefs();

    if (approved) {
      alert("–î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ–≤–∞—Ä–∞ –æ–¥–æ–±—Ä–µ–Ω—ã! –ü–æ–≤–∞—Ä –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É.");
    } else {
      alert("–î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ–≤–∞—Ä–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã! –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞.");
    }
  };

  const handleRequestDocuments = (chefEmail) => {
    const chef = chefs.find((c) => c.email === chefEmail);
    if (!chef) return;

    const missingDocs = [];
    if (!chef.documents?.passport)
      missingDocs.push("–ü–∞—Å–ø–æ—Ä—Ç/–£–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏");
    if (!chef.documents?.healthBook) missingDocs.push("–ú–µ–¥–∫–Ω–∏–∂–∫–∞");
    if (!chef.documents?.selfEmployment)
      missingDocs.push("–î–æ–∫—É–º–µ–Ω—Ç –æ —Å–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç–∏/–ò–ü");
    if (!chef.documents?.kitchenCertificate)
      missingDocs.push("–°–≠–°-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫—É—Ö–Ω–∏");
    if (!chef.documents?.kitchenPhotos?.length) missingDocs.push("–§–æ—Ç–æ –∫—É—Ö–Ω–∏");
    if (
      !chef.documents?.dishPhotos?.length ||
      chef.documents.dishPhotos.length < 4
    )
      missingDocs.push("–§–æ—Ç–æ –±–ª—é–¥ (–º–∏–Ω–∏–º—É–º 4)");

    if (missingDocs.length === 0) {
      alert("–í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!");
      return;
    }

    const message = `–ü–æ–≤–∞—Ä—É ${
      chef.name || chefEmail
    } –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:\n\n${missingDocs.join(
      "\n"
    )}\n\n‚ö†Ô∏è –ú–µ–¥–∫–Ω–∏–∂–∫–∞ –∏ –¥–æ–∫—É–º–µ–Ω—Ç –æ —Å–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 6-12 –º–µ—Å—è—Ü–µ–≤.`;
    alert(message);

    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–≤–∞—Ä—É
    console.log(
      "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–≤–∞—Ä—É:",
      chefEmail,
      "–ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:",
      missingDocs
    );
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString("ru-RU", {
      day: "2-digit",
      month: "2-digit",
      year: "numeric",
    });
  };

  if (loading) {
    return (
      <div className="admin-chefs">
        <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
      </div>
    );
  }

  return (
    <div className="admin-chefs">
      <div className="page-header">
        <h1>üë®‚Äçüç≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–≤–∞—Ä–∞–º–∏</h1>
        <div className="header-actions">
          <button onClick={loadChefs} className="refresh-button">
            üîÑ –û–±–Ω–æ–≤–∏—Ç—å
          </button>
        </div>
      </div>

      {chefs.length === 0 ? (
        <div className="no-data">
          <p>–ü–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>
        </div>
      ) : (
        <div className="chefs-grid">
          {chefs.map((chef) => (
            <div key={chef.email} className="chef-card">
              <div className="chef-avatar">
                {chef.avatar ? (
                  <img src={chef.avatar} alt={chef.name} />
                ) : (
                  <div className="avatar-placeholder">
                    {chef.name ? chef.name.charAt(0).toUpperCase() : "–ü"}
                  </div>
                )}
              </div>

              <div className="chef-info">
                <h3>{chef.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</h3>
                <p className="chef-email">{chef.email}</p>
                <p className="chef-specialization">
                  {chef.specialization || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
                </p>

                <div className="chef-stats">
                  <div className="stat">
                    <span className="stat-label">–†–µ–π—Ç–∏–Ω–≥:</span>
                    <span className="stat-value">
                      {chef.rating > 0 ? `‚≠ê ${chef.rating}/5` : "–ù–µ—Ç –æ—Ü–µ–Ω–æ–∫"}
                    </span>
                  </div>
                  <div className="stat">
                    <span className="stat-label">–ó–∞–∫–∞–∑–æ–≤:</span>
                    <span className="stat-value">{chef.totalOrders}</span>
                  </div>
                  <div className="stat">
                    <span className="stat-label">–í—ã—Ä—É—á–∫–∞:</span>
                    <span className="stat-value">
                      {chef.totalRevenue.toLocaleString()} ‚ÇΩ
                    </span>
                  </div>
                </div>

                <div className="chef-actions">
                  <button
                    onClick={() => handleChefClick(chef)}
                    className="view-button"
                  >
                    üëÅÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  </button>
                  <button
                    onClick={() => handleBlockChef(chef.email)}
                    className={chef.blocked ? "unblock-button" : "block-button"}
                  >
                    {chef.blocked ? "üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" : "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å"}
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–≤–∞—Ä–µ */}
      {showModal && selectedChef && (
        <div className="modal-overlay" onClick={() => setShowModal(false)}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <div className="modal-header">
              <h2>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≤–∞—Ä–µ</h2>
              <button
                onClick={() => setShowModal(false)}
                className="close-button"
              >
                ‚úï
              </button>
            </div>

            <div className="modal-body">
              <div className="chef-details">
                <div className="chef-avatar-large">
                  {selectedChef.avatar ? (
                    <img src={selectedChef.avatar} alt={selectedChef.name} />
                  ) : (
                    <div className="avatar-placeholder-large">
                      {selectedChef.name
                        ? selectedChef.name.charAt(0).toUpperCase()
                        : "–ü"}
                    </div>
                  )}
                </div>

                <div className="chef-details-info">
                  <h3>{selectedChef.name || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</h3>
                  <p>
                    <strong>Email:</strong> {selectedChef.email}
                  </p>
                  <p>
                    <strong>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</strong>{" "}
                    {selectedChef.specialization || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
                  </p>
                  <p>
                    <strong>–û–ø—ã—Ç:</strong>{" "}
                    {selectedChef.experience || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"} –ª–µ—Ç
                  </p>
                  <p>
                    <strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong>{" "}
                    {selectedChef.description || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
                  </p>
                  <p>
                    <strong>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong>{" "}
                    {formatDate(selectedChef.createdAt)}
                  </p>
                  <p>
                    <strong>–°—Ç–∞—Ç—É—Å:</strong>
                    <span
                      className={
                        selectedChef.blocked
                          ? "status-blocked"
                          : "status-active"
                      }
                    >
                      {selectedChef.blocked ? "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" : "–ê–∫—Ç–∏–≤–µ–Ω"}
                    </span>
                  </p>
                </div>
              </div>

              {/* –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ */}
              <div className="document-verification">
                <h4>üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ–≤–∞—Ä–∞</h4>
                <div className="verification-section">
                  {/* –ü–∞—Å–ø–æ—Ä—Ç */}
                  <div className="document-item">
                    <div className="document-info">
                      <h5>üìÑ –ü–∞—Å–ø–æ—Ä—Ç/–£–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏</h5>
                      <p>
                        –°—Ç–∞—Ç—É—Å:
                        <span
                          className={`verification-status ${
                            selectedChef.documents?.passport
                              ? "verified"
                              : "pending"
                          }`}
                        >
                          {selectedChef.documents?.passport
                            ? "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω"
                            : "‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω"}
                        </span>
                      </p>
                      {selectedChef.documents?.passport && (
                        <div className="document-actions">
                          <button
                            onClick={() =>
                              window.open(
                                selectedChef.documents.passport,
                                "_blank"
                              )
                            }
                            className="view-document-button"
                          >
                            üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
                          </button>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* –ú–µ–¥–∫–Ω–∏–∂–∫–∞ */}
                  <div className="document-item">
                    <div className="document-info">
                      <h5>üè• –ú–µ–¥–∫–Ω–∏–∂–∫–∞</h5>
                      <p>
                        –°—Ç–∞—Ç—É—Å:
                        <span
                          className={`verification-status ${
                            selectedChef.documents?.healthBook
                              ? "verified"
                              : "pending"
                          }`}
                        >
                          {selectedChef.documents?.healthBook
                            ? "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞"
                            : "‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"}
                        </span>
                      </p>
                      <p className="document-note">
                        ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 6-12 –º–µ—Å—è—Ü–µ–≤
                      </p>
                      {selectedChef.documents?.healthBook && (
                        <div className="document-actions">
                          <button
                            onClick={() =>
                              window.open(
                                selectedChef.documents.healthBook,
                                "_blank"
                              )
                            }
                            className="view-document-button"
                          >
                            üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
                          </button>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* –°–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç—å/–ò–ü */}
                  <div className="document-item">
                    <div className="document-info">
                      <h5>üíº –î–æ–∫—É–º–µ–Ω—Ç –æ —Å–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç–∏/–ò–ü</h5>
                      <p>
                        –°—Ç–∞—Ç—É—Å:
                        <span
                          className={`verification-status ${
                            selectedChef.documents?.selfEmployment
                              ? "verified"
                              : "pending"
                          }`}
                        >
                          {selectedChef.documents?.selfEmployment
                            ? "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω"
                            : "‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω"}
                        </span>
                      </p>
                      <p className="document-note">
                        ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 6-12 –º–µ—Å—è—Ü–µ–≤
                      </p>
                      {selectedChef.documents?.selfEmployment && (
                        <div className="document-actions">
                          <button
                            onClick={() =>
                              window.open(
                                selectedChef.documents.selfEmployment,
                                "_blank"
                              )
                            }
                            className="view-document-button"
                          >
                            üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
                          </button>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* –°–≠–°-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç */}
                  <div className="document-item">
                    <div className="document-info">
                      <h5>üè≠ –°–≠–°-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫—É—Ö–Ω–∏</h5>
                      <p>
                        –°—Ç–∞—Ç—É—Å:
                        <span
                          className={`verification-status ${
                            selectedChef.documents?.kitchenCertificate
                              ? "verified"
                              : "pending"
                          }`}
                        >
                          {selectedChef.documents?.kitchenCertificate
                            ? "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω"
                            : "‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω"}
                        </span>
                      </p>
                      {selectedChef.documents?.kitchenCertificate && (
                        <div className="document-actions">
                          <button
                            onClick={() =>
                              window.open(
                                selectedChef.documents.kitchenCertificate,
                                "_blank"
                              )
                            }
                            className="view-document-button"
                          >
                            üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
                          </button>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* –§–æ—Ç–æ –∫—É—Ö–Ω–∏ */}
                  <div className="document-item">
                    <div className="document-info">
                      <h5>üè† –§–æ—Ç–æ –∫—É—Ö–Ω–∏</h5>
                      <p>
                        –°—Ç–∞—Ç—É—Å:
                        <span
                          className={`verification-status ${
                            selectedChef.documents?.kitchenPhotos?.length > 0
                              ? "verified"
                              : "pending"
                          }`}
                        >
                          {selectedChef.documents?.kitchenPhotos?.length > 0
                            ? `‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${selectedChef.documents.kitchenPhotos.length} —Ñ–æ—Ç–æ`
                            : "‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"}
                        </span>
                      </p>
                      {selectedChef.documents?.kitchenPhotos?.length > 0 && (
                        <div className="photo-gallery">
                          {selectedChef.documents.kitchenPhotos.map(
                            (photo, index) => (
                              <img
                                key={index}
                                src={photo}
                                alt={`–ö—É—Ö–Ω—è ${index + 1}`}
                                className="document-photo"
                                onClick={() => window.open(photo, "_blank")}
                              />
                            )
                          )}
                        </div>
                      )}
                    </div>
                  </div>

                  {/* –§–æ—Ç–æ –±–ª—é–¥ */}
                  <div className="document-item">
                    <div className="document-info">
                      <h5>üçΩÔ∏è –§–æ—Ç–æ –±–ª—é–¥</h5>
                      <p>
                        –°—Ç–∞—Ç—É—Å:
                        <span
                          className={`verification-status ${
                            selectedChef.documents?.dishPhotos?.length >= 4
                              ? "verified"
                              : "pending"
                          }`}
                        >
                          {selectedChef.documents?.dishPhotos?.length > 0
                            ? `‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${selectedChef.documents.dishPhotos.length} —Ñ–æ—Ç–æ`
                            : "‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"}
                        </span>
                      </p>
                      {selectedChef.documents?.dishPhotos?.length > 0 && (
                        <div className="photo-gallery">
                          {selectedChef.documents.dishPhotos.map(
                            (photo, index) => (
                              <img
                                key={index}
                                src={photo}
                                alt={`–ë–ª—é–¥–æ ${index + 1}`}
                                className="document-photo"
                                onClick={() => window.open(photo, "_blank")}
                              />
                            )
                          )}
                        </div>
                      )}
                    </div>
                  </div>

                  {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  <div className="document-item">
                    <div className="document-info">
                      <h5>üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h5>
                      <div className="info-section">
                        <p>
                          <strong>–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:</strong>
                        </p>
                        <p className="info-text">
                          {selectedChef.documents?.experience || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
                        </p>
                      </div>
                      <div className="info-section">
                        <p>
                          <strong>–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ö–Ω–∏:</strong>
                        </p>
                        <p className="info-text">
                          {selectedChef.documents?.kitchenDescription ||
                            "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
                        </p>
                      </div>
                      <div className="info-section">
                        <p>
                          <strong>–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:</strong>
                        </p>
                        <p className="info-text">
                          {selectedChef.documents?.uploadedAt
                            ? new Date(
                                selectedChef.documents.uploadedAt
                              ).toLocaleDateString("ru-RU")
                            : "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
                        </p>
                      </div>
                    </div>
                  </div>

                  <div className="verification-actions">
                    <button
                      onClick={() =>
                        handleVerifyDocuments(selectedChef.email, true)
                      }
                      className="verify-button"
                      disabled={!allDocumentsUploaded(selectedChef)}
                    >
                      ‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
                    </button>
                    <button
                      onClick={() =>
                        handleVerifyDocuments(selectedChef.email, false)
                      }
                      className="reject-button"
                    >
                      ‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã
                    </button>
                    <button
                      onClick={() => handleRequestDocuments(selectedChef.email)}
                      className="request-button"
                    >
                      üìß –ó–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
                    </button>
                  </div>
                </div>
              </div>

              <div className="chef-stats-detailed">
                <h4>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h4>
                <div className="stats-grid">
                  <div className="stat-item">
                    <span className="stat-label">–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥</span>
                    <span className="stat-value">
                      {selectedChef.rating > 0
                        ? `‚≠ê ${selectedChef.rating}/5`
                        : "–ù–µ—Ç –æ—Ü–µ–Ω–æ–∫"}
                    </span>
                  </div>
                  <div className="stat-item">
                    <span className="stat-label">–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</span>
                    <span className="stat-value">
                      {selectedChef.totalOrders}
                    </span>
                  </div>
                  <div className="stat-item">
                    <span className="stat-label">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤</span>
                    <span className="stat-value">
                      {selectedChef.completedOrders}
                    </span>
                  </div>
                  <div className="stat-item">
                    <span className="stat-label">–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞</span>
                    <span className="stat-value">
                      {selectedChef.totalRevenue.toLocaleString()} ‚ÇΩ
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default AdminChefs;
