import React, { useState, useEffect } from 'react';
import { useLanguage } from '../contexts/LanguageContext';
import { useToast } from '../contexts/ToastContext';
import aiMealPlanner from '../utils/aiMealPlanner';

const AIMealPlanner = ({ onClose, availableDishes = [] }) => {
  const [goal, setGoal] = useState('healthy');
  const [allergies, setAllergies] = useState([]);
  const [preferences, setPreferences] = useState([]);
  const [mealPlan, setMealPlan] = useState(null);
  const [isGenerating, setIsGenerating] = useState(false);
  const [selectedDay, setSelectedDay] = useState(0);
  const [showShoppingList, setShowShoppingList] = useState(false);
  const { t } = useLanguage();
  const { showSuccess, showError } = useToast();

  const goals = [
    { id: 'weight_loss', name: '–ü–æ—Ö—É–¥–µ–Ω–∏–µ', icon: 'üí™', calories: '1800 –∫–∫–∞–ª', description: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –≤–µ—Å–∞' },
    { id: 'muscle_gain', name: '–ù–∞–±–æ—Ä –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã', icon: 'üèãÔ∏è', calories: '2500 –∫–∫–∞–ª', description: '–í—ã—Å–æ–∫–æ–±–µ–ª–∫–æ–≤—ã–π —Ä–∞—Ü–∏–æ–Ω –¥–ª—è —Ä–æ—Å—Ç–∞ –º—ã—à—Ü' },
    { id: 'healthy', name: '–ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ', icon: 'üå±', calories: '2200 –∫–∫–∞–ª', description: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è' },
    { id: 'diabetic_friendly', name: '–î–ª—è –¥–∏–∞–±–µ—Ç–∏–∫–æ–≤', icon: 'ü©∫', calories: '2000 –∫–∫–∞–ª', description: '–ù–∏–∑–∫–æ–≥–ª–∏–∫–µ–º–∏—á–µ—Å–∫–∏–π —Ä–∞—Ü–∏–æ–Ω' },
    { id: 'keto', name: '–ö–µ—Ç–æ-–¥–∏–µ—Ç–∞', icon: 'ü•ë', calories: '1800 –∫–∫–∞–ª', description: '–ù–∏–∑–∫–æ—É–≥–ª–µ–≤–æ–¥–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω' }
  ];

  const allergyOptions = [
    { id: 'gluten', name: '–ì–ª—é—Ç–µ–Ω', icon: 'üåæ' },
    { id: 'dairy', name: '–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã', icon: 'ü•õ' },
    { id: 'nuts', name: '–û—Ä–µ—Ö–∏', icon: 'ü•ú' },
    { id: 'seafood', name: '–ú–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã', icon: 'üêü' },
    { id: 'eggs', name: '–Ø–π—Ü–∞', icon: 'ü•ö' },
    { id: 'soy', name: '–°–æ—è', icon: 'ü´ò' }
  ];

  const preferenceOptions = [
    { id: 'vegetarian', name: '–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–µ', icon: 'ü•ó' },
    { id: 'vegan', name: '–í–µ–≥–∞–Ω—Å–∫–æ–µ', icon: 'üåø' },
    { id: 'halal', name: '–•–∞–ª—è–ª—å', icon: '‚ò™Ô∏è' },
    { id: 'kosher', name: '–ö–æ—à–µ—Ä–Ω–æ–µ', icon: '‚ú°Ô∏è' },
    { id: 'organic', name: '–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–µ', icon: 'üå±' }
  ];

  const generateMealPlan = async () => {
    if (availableDishes.length === 0) {
      showError('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–ª—é–¥ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –î–æ–±–∞–≤—å—Ç–µ –±–ª—é–¥–∞ –≤ –º–µ–Ω—é.');
      return;
    }

    setIsGenerating(true);
    try {
      console.log('üçΩÔ∏è Generating meal plan...', { goal, allergies, preferences });
      
      const plan = await aiMealPlanner.generateMealPlan({
        goal,
        allergies,
        preferences,
        availableDishes,
        budget: 'medium',
        cookingTime: 'medium'
      });

      console.log('‚úÖ Meal plan generated:', plan);
      setMealPlan(plan);
      showSuccess('–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –≥–æ—Ç–æ–≤! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.');
    } catch (error) {
      console.error('‚ùå Error generating meal plan:', error);
      showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.');
    } finally {
      setIsGenerating(false);
    }
  };

  const toggleAllergy = (allergyId) => {
    setAllergies(prev => 
      prev.includes(allergyId) 
        ? prev.filter(id => id !== allergyId)
        : [...prev, allergyId]
    );
  };

  const togglePreference = (preferenceId) => {
    setPreferences(prev => 
      prev.includes(preferenceId) 
        ? prev.filter(id => id !== preferenceId)
        : [...prev, preferenceId]
    );
  };

  const getMealIcon = (mealTime) => {
    switch (mealTime) {
      case 'breakfast': return 'üåÖ';
      case 'lunch': return '‚òÄÔ∏è';
      case 'dinner': return 'üåô';
      case 'snack': return 'üçé';
      default: return 'üçΩÔ∏è';
    }
  };

  const getMealName = (mealTime) => {
    switch (mealTime) {
      case 'breakfast': return '–ó–∞–≤—Ç—Ä–∞–∫';
      case 'lunch': return '–û–±–µ–¥';
      case 'dinner': return '–£–∂–∏–Ω';
      case 'snack': return '–ü–µ—Ä–µ–∫—É—Å';
      default: return mealTime;
    }
  };

  const getScoreColor = (score) => {
    if (score >= 80) return '#4caf50';
    if (score >= 60) return '#ff9800';
    return '#f44336';
  };

  if (isGenerating) {
    return (
      <div style={{
        background: 'rgba(255, 255, 255, 0.95)',
        borderRadius: '15px',
        padding: '40px',
        textAlign: 'center',
        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',
        backdropFilter: 'blur(10px)'
      }}>
        <div style={{ fontSize: '64px', marginBottom: '20px' }}>üçΩÔ∏è</div>
        <h3 style={{ color: '#333', marginBottom: '10px' }}>
          AI —Å–æ–∑–¥–∞–µ—Ç –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è...
        </h3>
        <p style={{ color: '#666', marginBottom: '30px' }}>
          –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–ª—é–¥–∞ –∏ –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
        </p>
        <div style={{
          width: '100%',
          height: '6px',
          background: '#f0f0f0',
          borderRadius: '3px',
          overflow: 'hidden'
        }}>
          <div style={{
            width: '85%',
            height: '100%',
            background: 'linear-gradient(90deg, #4caf50, #8bc34a)',
            animation: 'loading 2s ease-in-out infinite'
          }}></div>
        </div>
        <p style={{ color: '#999', fontSize: '14px', marginTop: '15px' }}>
          –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...
        </p>
      </div>
    );
  }

  if (mealPlan) {
    return (
      <div style={{
        background: 'rgba(255, 255, 255, 0.95)',
        borderRadius: '15px',
        padding: '25px',
        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',
        backdropFilter: 'blur(10px)',
        maxHeight: '90vh',
        overflowY: 'auto'
      }}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          marginBottom: '25px',
          borderBottom: '2px solid #f0f0f0',
          paddingBottom: '15px'
        }}>
          <div>
            <h2 style={{ color: '#333', margin: '0', display: 'flex', alignItems: 'center', gap: '10px' }}>
              üçΩÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è
            </h2>
            <p style={{ color: '#666', margin: '5px 0 0 0', fontSize: '14px' }}>
              –¶–µ–ª—å: {goals.find(g => g.id === goal)?.name} ‚Ä¢ {mealPlan.days.length} –¥–Ω—è
            </p>
          </div>
          {onClose && (
            <button
              onClick={onClose}
              style={{
                background: 'none',
                border: 'none',
                fontSize: '24px',
                cursor: 'pointer',
                color: '#999',
                padding: '5px'
              }}
            >
              ‚úï
            </button>
          )}
        </div>

        {/* –û–±—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏ */}
        <div style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',
          gap: '15px',
          marginBottom: '25px'
        }}>
          <div style={{
            background: 'linear-gradient(135deg, #f8f9fa, #e9ecef)',
            padding: '15px',
            borderRadius: '10px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#4caf50', marginBottom: '5px' }}>
              {mealPlan.summary.varietyScore.toFixed(0)}%
            </div>
            <div style={{ color: '#666', fontSize: '14px' }}>–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ</div>
          </div>
          <div style={{
            background: 'linear-gradient(135deg, #f8f9fa, #e9ecef)',
            padding: '15px',
            borderRadius: '10px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#2196f3', marginBottom: '5px' }}>
              {mealPlan.summary.nutritionBalance.toFixed(0)}%
            </div>
            <div style={{ color: '#666', fontSize: '14px' }}>–ë–∞–ª–∞–Ω—Å</div>
          </div>
          <div style={{
            background: 'linear-gradient(135deg, #f8f9fa, #e9ecef)',
            padding: '15px',
            borderRadius: '10px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#ff9800', marginBottom: '5px' }}>
              {mealPlan.cost?.averagePerDay || 0}‚ÇΩ
            </div>
            <div style={{ color: '#666', fontSize: '14px' }}>–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</div>
          </div>
          <div style={{
            background: 'linear-gradient(135deg, #f8f9fa, #e9ecef)',
            padding: '15px',
            borderRadius: '10px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '20px', fontWeight: 'bold', color: '#9c27b0', marginBottom: '5px' }}>
              {mealPlan.prepTime?.totalHours || 0}—á
            </div>
            <div style={{ color: '#666', fontSize: '14px' }}>–í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏</div>
          </div>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –¥–Ω—è–º */}
        <div style={{
          display: 'flex',
          gap: '10px',
          marginBottom: '20px',
          overflowX: 'auto',
          paddingBottom: '10px'
        }}>
          {mealPlan.days.map((day, index) => (
            <button
              key={index}
              onClick={() => setSelectedDay(index)}
              style={{
                background: selectedDay === index ? 'linear-gradient(135deg, #4caf50, #45a049)' : 'white',
                color: selectedDay === index ? 'white' : '#333',
                border: `2px solid ${selectedDay === index ? '#4caf50' : '#e0e0e0'}`,
                padding: '12px 20px',
                borderRadius: '10px',
                cursor: 'pointer',
                fontSize: '14px',
                fontWeight: 'bold',
                whiteSpace: 'nowrap',
                transition: 'all 0.3s ease',
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}
            >
              <span>üìÖ</span>
              {day.day}
              <span style={{
                background: selectedDay === index ? 'rgba(255,255,255,0.3)' : '#f0f0f0',
                color: selectedDay === index ? 'white' : '#666',
                padding: '2px 8px',
                borderRadius: '12px',
                fontSize: '12px'
              }}>
                {day.score.toFixed(0)}%
              </span>
            </button>
          ))}
        </div>

        {/* –ü–ª–∞–Ω –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å */}
        {mealPlan.days[selectedDay] && (
          <div style={{ marginBottom: '25px' }}>
            <h3 style={{ color: '#333', marginBottom: '15px' }}>
              üìÖ {mealPlan.days[selectedDay].day}
            </h3>
            
            {/* –ü—Ä–∏–µ–º—ã –ø–∏—â–∏ */}
            <div style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>
              {Object.entries(mealPlan.days[selectedDay].meals).map(([mealTime, meal]) => {
                if (!meal) return null;
                
                return (
                  <div
                    key={mealTime}
                    style={{
                      background: 'linear-gradient(135deg, #f8f9fa, #e9ecef)',
                      border: '2px solid #e0e0e0',
                      borderRadius: '12px',
                      padding: '15px',
                      transition: 'all 0.3s ease'
                    }}
                    onMouseEnter={(e) => e.target.style.transform = 'translateY(-2px)'}
                    onMouseLeave={(e) => e.target.style.transform = 'translateY(0)'}
                  >
                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>
                      <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>
                        <span style={{ fontSize: '20px' }}>{getMealIcon(mealTime)}</span>
                        <h4 style={{ margin: '0', color: '#333' }}>{getMealName(mealTime)}</h4>
                      </div>
                      <div style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>
                        {meal.dishCalories && (
                          <span style={{ color: '#666', fontSize: '14px' }}>
                            {meal.dishCalories} –∫–∫–∞–ª
                          </span>
                        )}
                        {meal.price && (
                          <span style={{ color: '#4caf50', fontWeight: 'bold', fontSize: '14px' }}>
                            {meal.price}‚ÇΩ
                          </span>
                        )}
                      </div>
                    </div>
                    
                    <h5 style={{ margin: '0 0 8px 0', color: '#333', fontSize: '16px' }}>
                      {meal.name}
                    </h5>
                    
                    {meal.ingredients && (
                      <p style={{ margin: '0', color: '#666', fontSize: '14px' }}>
                        <strong>–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:</strong> {meal.ingredients}
                      </p>
                    )}
                    
                    {(meal.dishProtein || meal.dishCarbs || meal.dishFat) && (
                      <div style={{ 
                        display: 'flex', 
                        gap: '15px', 
                        marginTop: '8px',
                        fontSize: '12px',
                        color: '#666'
                      }}>
                        {meal.dishProtein && <span>–ë: {meal.dishProtein}–≥</span>}
                        {meal.dishCarbs && <span>–£: {meal.dishCarbs}–≥</span>}
                        {meal.dishFat && <span>–ñ: {meal.dishFat}–≥</span>}
                      </div>
                    )}
                  </div>
                );
              })}
            </div>

            {/* –ò—Ç–æ–≥–∏ –¥–Ω—è */}
            <div style={{
              background: 'linear-gradient(135deg, #e3f2fd, #bbdefb)',
              border: '2px solid #2196f3',
              borderRadius: '10px',
              padding: '15px',
              marginTop: '15px'
            }}>
              <h4 style={{ margin: '0 0 10px 0', color: '#333' }}>üìä –ò—Ç–æ–≥–∏ –¥–Ω—è</h4>
              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(100px, 1fr))', gap: '10px' }}>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#2196f3' }}>
                    {mealPlan.days[selectedDay].totals.calories.toFixed(0)}
                  </div>
                  <div style={{ fontSize: '12px', color: '#666' }}>–∫–∫–∞–ª</div>
                </div>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#4caf50' }}>
                    {mealPlan.days[selectedDay].totals.protein.toFixed(1)}
                  </div>
                  <div style={{ fontSize: '12px', color: '#666' }}>–≥ –±–µ–ª–∫–∞</div>
                </div>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#ff9800' }}>
                    {mealPlan.days[selectedDay].totals.carbs.toFixed(1)}
                  </div>
                  <div style={{ fontSize: '12px', color: '#666' }}>–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤</div>
                </div>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#9c27b0' }}>
                    {mealPlan.days[selectedDay].totals.fat.toFixed(1)}
                  </div>
                  <div style={{ fontSize: '12px', color: '#666' }}>–≥ –∂–∏—Ä–æ–≤</div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
        {mealPlan.aiRecommendations && mealPlan.aiRecommendations.length > 0 && (
          <div style={{ marginBottom: '25px' }}>
            <h3 style={{ color: '#333', marginBottom: '15px' }}>ü§ñ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
            <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>
              {mealPlan.aiRecommendations.map((rec, index) => (
                <div
                  key={index}
                  style={{
                    background: rec.type === 'warning' ? 'rgba(244, 67, 54, 0.1)' :
                               rec.type === 'success' ? 'rgba(76, 175, 80, 0.1)' :
                               'rgba(33, 150, 243, 0.1)',
                    border: `2px solid ${rec.type === 'warning' ? '#f44336' :
                                      rec.type === 'success' ? '#4caf50' : '#2196f3'}`,
                    borderRadius: '10px',
                    padding: '15px'
                  }}
                >
                  <div style={{ display: 'flex', alignItems: 'center', gap: '10px', marginBottom: '8px' }}>
                    <span style={{ fontSize: '20px' }}>{rec.icon}</span>
                    <h4 style={{ margin: '0', color: '#333' }}>{rec.title}</h4>
                  </div>
                  <p style={{ margin: '0 0 5px 0', color: '#666', fontSize: '14px' }}>{rec.message}</p>
                  {rec.action && (
                    <p style={{ margin: '0', color: '#2196f3', fontSize: '13px', fontWeight: 'bold' }}>
                      üí° {rec.action}
                    </p>
                  )}
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap', marginBottom: '20px' }}>
          <button
            onClick={() => setShowShoppingList(!showShoppingList)}
            style={{
              background: 'linear-gradient(135deg, #ff9800, #f57c00)',
              color: 'white',
              border: 'none',
              padding: '12px 20px',
              borderRadius: '8px',
              cursor: 'pointer',
              fontSize: '14px',
              fontWeight: 'bold',
              display: 'flex',
              alignItems: 'center',
              gap: '8px'
            }}
          >
            üõí –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
          </button>
          
          <button
            onClick={() => {
              const planText = mealPlan.days.map(day => 
                `${day.day}:\n` +
                Object.entries(day.meals).map(([time, meal]) => 
                  `${getMealName(time)}: ${meal?.name || '–ù–µ –≤—ã–±—Ä–∞–Ω–æ'}`
                ).join('\n')
              ).join('\n\n');
              
              navigator.clipboard.writeText(planText);
              showSuccess('–ü–ª–∞–Ω —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
            }}
            style={{
              background: 'linear-gradient(135deg, #9c27b0, #7b1fa2)',
              color: 'white',
              border: 'none',
              padding: '12px 20px',
              borderRadius: '8px',
              cursor: 'pointer',
              fontSize: '14px',
              fontWeight: 'bold',
              display: 'flex',
              alignItems: 'center',
              gap: '8px'
            }}
          >
            üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω
          </button>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ */}
        {showShoppingList && mealPlan.shoppingList && (
          <div style={{ marginBottom: '25px' }}>
            <h3 style={{ color: '#333', marginBottom: '15px' }}>üõí –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫</h3>
            <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>
              {mealPlan.shoppingList.map((item, index) => (
                <div
                  key={index}
                  style={{
                    background: 'white',
                    border: '2px solid #e0e0e0',
                    borderRadius: '8px',
                    padding: '12px',
                    display: 'flex',
                    justifyContent: 'space-between',
                    alignItems: 'center'
                  }}
                >
                  <div>
                    <strong>{item.ingredient}</strong>
                    <span style={{ color: '#666', fontSize: '14px', marginLeft: '10px' }}>
                      ({item.category})
                    </span>
                  </div>
                  <span style={{
                    background: '#4caf50',
                    color: 'white',
                    padding: '4px 8px',
                    borderRadius: '12px',
                    fontSize: '12px',
                    fontWeight: 'bold'
                  }}>
                    {item.count} —Ä–∞–∑
                  </span>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞ */}
        <div style={{ textAlign: 'center', marginTop: '20px' }}>
          <button
            onClick={() => setMealPlan(null)}
            style={{
              background: 'linear-gradient(135deg, #4caf50, #45a049)',
              color: 'white',
              border: 'none',
              padding: '12px 24px',
              borderRadius: '8px',
              cursor: 'pointer',
              fontSize: '14px',
              fontWeight: 'bold',
              boxShadow: '0 4px 15px rgba(76, 175, 80, 0.3)',
              transition: 'all 0.3s ease'
            }}
          >
            üîÑ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–ª–∞–Ω
          </button>
        </div>

        {/* CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ */}
        <style>{`
          @keyframes loading {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
          }
        `}</style>
      </div>
    );
  }

  // –§–æ—Ä–º–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞–Ω–∞
  return (
    <div style={{
      background: 'rgba(255, 255, 255, 0.95)',
      borderRadius: '15px',
      padding: '25px',
      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',
      backdropFilter: 'blur(10px)',
      maxHeight: '90vh',
      overflowY: 'auto'
    }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginBottom: '25px',
        borderBottom: '2px solid #f0f0f0',
        paddingBottom: '15px'
      }}>
        <div>
          <h2 style={{ color: '#333', margin: '0', display: 'flex', alignItems: 'center', gap: '10px' }}>
            üçΩÔ∏è AI –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–∏—Ç–∞–Ω–∏—è
          </h2>
          <p style={{ color: '#666', margin: '5px 0 0 0', fontSize: '14px' }}>
            –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ 3 –¥–Ω—è
          </p>
        </div>
        {onClose && (
          <button
            onClick={onClose}
            style={{
              background: 'none',
              border: 'none',
              fontSize: '24px',
              cursor: 'pointer',
              color: '#999',
              padding: '5px'
            }}
          >
            ‚úï
          </button>
        )}
      </div>

      {/* –í—ã–±–æ—Ä —Ü–µ–ª–∏ */}
      <div style={{ marginBottom: '25px' }}>
        <h3 style={{ color: '#333', marginBottom: '15px' }}>üéØ –í–∞—à–∞ —Ü–µ–ª—å</h3>
        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '10px' }}>
          {goals.map(goalOption => (
            <button
              key={goalOption.id}
              onClick={() => setGoal(goalOption.id)}
              style={{
                background: goal === goalOption.id ? 'linear-gradient(135deg, #4caf50, #45a049)' : 'white',
                color: goal === goalOption.id ? 'white' : '#333',
                border: `2px solid ${goal === goalOption.id ? '#4caf50' : '#e0e0e0'}`,
                padding: '15px',
                borderRadius: '10px',
                cursor: 'pointer',
                fontSize: '14px',
                fontWeight: 'bold',
                textAlign: 'left',
                transition: 'all 0.3s ease',
                display: 'flex',
                flexDirection: 'column',
                gap: '5px'
              }}
            >
              <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                <span style={{ fontSize: '20px' }}>{goalOption.icon}</span>
                <span>{goalOption.name}</span>
              </div>
              <div style={{ fontSize: '12px', opacity: 0.8 }}>
                {goalOption.calories} ‚Ä¢ {goalOption.description}
              </div>
            </button>
          ))}
        </div>
      </div>

      {/* –ê–ª–ª–µ—Ä–≥–∏–∏ */}
      <div style={{ marginBottom: '25px' }}>
        <h3 style={{ color: '#333', marginBottom: '15px' }}>üö´ –ê–ª–ª–µ—Ä–≥–∏–∏ –∏ –Ω–µ–ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å</h3>
        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>
          {allergyOptions.map(allergy => (
            <button
              key={allergy.id}
              onClick={() => toggleAllergy(allergy.id)}
              style={{
                background: allergies.includes(allergy.id) ? 'linear-gradient(135deg, #f44336, #d32f2f)' : 'white',
                color: allergies.includes(allergy.id) ? 'white' : '#333',
                border: `2px solid ${allergies.includes(allergy.id) ? '#f44336' : '#e0e0e0'}`,
                padding: '10px 15px',
                borderRadius: '8px',
                cursor: 'pointer',
                fontSize: '14px',
                fontWeight: 'bold',
                display: 'flex',
                alignItems: 'center',
                gap: '8px',
                transition: 'all 0.3s ease'
              }}
            >
              <span>{allergy.icon}</span>
              {allergy.name}
            </button>
          ))}
        </div>
      </div>

      {/* –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è */}
      <div style={{ marginBottom: '25px' }}>
        <h3 style={{ color: '#333', marginBottom: '15px' }}>‚ú® –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –ø–∏—Ç–∞–Ω–∏–∏</h3>
        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>
          {preferenceOptions.map(preference => (
            <button
              key={preference.id}
              onClick={() => togglePreference(preference.id)}
              style={{
                background: preferences.includes(preference.id) ? 'linear-gradient(135deg, #2196f3, #1976d2)' : 'white',
                color: preferences.includes(preference.id) ? 'white' : '#333',
                border: `2px solid ${preferences.includes(preference.id) ? '#2196f3' : '#e0e0e0'}`,
                padding: '10px 15px',
                borderRadius: '8px',
                cursor: 'pointer',
                fontSize: '14px',
                fontWeight: 'bold',
                display: 'flex',
                alignItems: 'center',
                gap: '8px',
                transition: 'all 0.3s ease'
              }}
            >
              <span>{preference.icon}</span>
              {preference.name}
            </button>
          ))}
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–ª—é–¥–∞—Ö */}
      <div style={{
        background: 'linear-gradient(135deg, #e8f5e8, #c8e6c9)',
        border: '2px solid #4caf50',
        borderRadius: '10px',
        padding: '15px',
        marginBottom: '25px'
      }}>
        <div style={{ display: 'flex', alignItems: 'center', gap: '10px', marginBottom: '8px' }}>
          <span style={{ fontSize: '20px' }}>üìä</span>
          <h4 style={{ margin: '0', color: '#333' }}>–î–æ—Å—Ç—É–ø–Ω—ã–µ –±–ª—é–¥–∞</h4>
        </div>
        <p style={{ margin: '0', color: '#666', fontSize: '14px' }}>
          –í –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω–æ <strong>{availableDishes.length}</strong> –±–ª—é–¥ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
          {allergies.length > 0 && (
            <span> –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∞–ª–ª–µ—Ä–≥–∏—è–º –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –º–µ–Ω—å—à–µ –±–ª—é–¥.</span>
          )}
        </p>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
      <div style={{ textAlign: 'center' }}>
        <button
          onClick={generateMealPlan}
          disabled={availableDishes.length === 0}
          style={{
            background: availableDishes.length > 0 ? 'linear-gradient(135deg, #4caf50, #45a049)' : '#ccc',
            color: 'white',
            border: 'none',
            padding: '15px 30px',
            borderRadius: '10px',
            cursor: availableDishes.length > 0 ? 'pointer' : 'not-allowed',
            fontSize: '16px',
            fontWeight: 'bold',
            boxShadow: availableDishes.length > 0 ? '0 4px 15px rgba(76, 175, 80, 0.3)' : 'none',
            transition: 'all 0.3s ease',
            display: 'flex',
            alignItems: 'center',
            gap: '10px',
            margin: '0 auto'
          }}
        >
          <span>ü§ñ</span>
          –°–æ–∑–¥–∞—Ç—å –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è
        </button>
        
        {availableDishes.length === 0 && (
          <p style={{ color: '#f44336', fontSize: '14px', marginTop: '10px' }}>
            –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–ª—é–¥ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
          </p>
        )}
      </div>
    </div>
  );
};

export default AIMealPlanner;
