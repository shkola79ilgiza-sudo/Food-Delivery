import React, { useState, useEffect } from 'react';
import { useLanguage } from '../contexts/LanguageContext';

const PushNotifications = () => {
  const [isSupported, setIsSupported] = useState(false);
  const [permission, setPermission] = useState('default');
  const [subscription, setSubscription] = useState(null);
  const [isOpen, setIsOpen] = useState(false);
  const { t } = useLanguage();

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É Push API
    if ('serviceWorker' in navigator && 'PushManager' in window) {
      setIsSupported(true);
      checkPermission();
    }
  }, []);

  const checkPermission = async () => {
    try {
      const permission = await Notification.requestPermission();
      setPermission(permission);
    } catch (error) {
      console.error('Error checking notification permission:', error);
    }
  };

  const requestPermission = async () => {
    try {
      const permission = await Notification.requestPermission();
      setPermission(permission);
      
      if (permission === 'granted') {
        await subscribeToPush();
      }
    } catch (error) {
      console.error('Error requesting notification permission:', error);
    }
  };

  const subscribeToPush = async () => {
    try {
      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Service Worker
      const registration = await navigator.serviceWorker.register('/sw.js');
      console.log('Service Worker registered:', registration);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      if (!registration.pushManager) {
        throw new Error('Push Manager –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
      }

      // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–±–µ–∑ VAPID –∫–ª—é—á–∞ –¥–ª—è –¥–µ–º–æ)
      const subscription = await registration.pushManager.subscribe({
        userVisibleOnly: true
      });

      setSubscription(subscription);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ª–æ–∫–∞–ª—å–Ω–æ
      localStorage.setItem('pushSubscription', JSON.stringify(subscription));
      
      console.log('Push subscription successful:', subscription);
    } catch (error) {
      console.error('Error subscribing to push notifications:', error);
      // –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑—Ä–µ—à–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      setSubscription({ demo: true });
    }
  };

  const sendSubscriptionToServer = async (subscription) => {
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const token = localStorage.getItem('authToken');
      const role = localStorage.getItem('role');
      
      if (token && role) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ª–æ–∫–∞–ª—å–Ω–æ
        localStorage.setItem('pushSubscription', JSON.stringify(subscription));
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        console.log('Subscription saved locally:', subscription);
      }
    } catch (error) {
      console.error('Error sending subscription to server:', error);
    }
  };

  const unsubscribeFromPush = async () => {
    try {
      if (subscription) {
        await subscription.unsubscribe();
        setSubscription(null);
        localStorage.removeItem('pushSubscription');
        console.log('Unsubscribed from push notifications');
      }
    } catch (error) {
      console.error('Error unsubscribing from push notifications:', error);
    }
  };

  const sendTestNotification = async () => {
    if (permission === 'granted') {
      try {
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ Service Worker
        if ('serviceWorker' in navigator) {
          const registration = await navigator.serviceWorker.ready;
          await registration.showNotification('üçΩÔ∏è Food Delivery', {
            body: '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –ø–æ—Å—Ç—É–ø–∏–ª! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–Ω–µ–ª—å –ø–æ–≤–∞—Ä–∞.',
            icon: '/logo192.png',
            badge: '/logo192.png',
            tag: 'new-order',
            requireInteraction: true
          });
          console.log('Test notification sent via Service Worker');
        } else {
          // Fallback –∫ –æ–±—ã—á–Ω—ã–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º
          const notification = new Notification('üçΩÔ∏è Food Delivery', {
            body: '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –ø–æ—Å—Ç—É–ø–∏–ª! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–Ω–µ–ª—å –ø–æ–≤–∞—Ä–∞.',
            icon: '/logo192.png',
            badge: '/logo192.png',
            tag: 'new-order',
            requireInteraction: true
          });

          // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é
          notification.onclick = () => {
            window.focus();
            notification.close();
          };

          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
          setTimeout(() => {
            notification.close();
          }, 5000);

          console.log('Test notification sent via Notification API');
        }
      } catch (error) {
        console.error('Error sending test notification:', error);
        alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ' + error.message);
      }
    } else {
      alert('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã. –†–∞–∑—Ä–µ—à–∏—Ç–µ –∏—Ö –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞.');
    }
  };

  if (!isSupported) {
    return (
      <div style={{
        padding: '15px',
        background: '#f8f9fa',
        borderRadius: '8px',
        border: '1px solid #dee2e6',
        margin: '10px 0'
      }}>
        <p style={{ margin: 0, color: '#6c757d', fontSize: '14px' }}>
          ‚ö†Ô∏è Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ
        </p>
      </div>
    );
  }

  return (
    <div style={{
      padding: '0',
      background: 'transparent',
      borderRadius: '15px',
      border: 'none',
      margin: '20px 0'
    }}>
      <button
        onClick={() => setIsOpen(prev => !prev)}
        style={{
          width: '100%',
          background: 'rgba(255,255,255,0.9)',
          border: '1px solid #e0e0e0',
          borderRadius: '12px',
          padding: '12px 16px',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'space-between',
          cursor: 'pointer',
          boxShadow: '0 4px 12px rgba(0,0,0,0.06)'
        }}
      >
        <span style={{ fontWeight: 600, color: '#2D5016' }}>üîî Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
        <span style={{ opacity: 0.8 }}>{isOpen ? '‚ñ≤' : '‚ñº'}</span>
      </button>

      {isOpen && (
      <div style={{
        padding: '16px',
        background: 'rgba(255, 255, 255, 0.9)',
        borderRadius: '12px',
        border: '1px solid #e0e0e0',
        marginTop: '10px',
        boxShadow: '0 4px 15px rgba(0, 0, 0, 0.06)'
      }}>

      <div style={{ marginBottom: '15px' }}>
        <p style={{
          margin: '0 0 10px 0',
          color: '#666',
          fontSize: '14px',
          lineHeight: '1.4'
        }}>
          –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö, —Å—Ç–∞—Ç—É—Å–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö.
        </p>
      </div>

      {permission === 'default' && (
        <button
          onClick={requestPermission}
          style={{
            background: 'linear-gradient(135deg, #2D5016 0%, #4A7C59 100%)',
            color: 'white',
            border: 'none',
            borderRadius: '25px',
            padding: '12px 24px',
            fontSize: '14px',
            fontWeight: '600',
            cursor: 'pointer',
            transition: 'all 0.3s ease',
            boxShadow: '0 4px 15px rgba(45, 80, 22, 0.3)',
            marginRight: '10px'
          }}
          onMouseEnter={(e) => {
            e.target.style.transform = 'translateY(-2px)';
            e.target.style.boxShadow = '0 6px 20px rgba(45, 80, 22, 0.4)';
          }}
          onMouseLeave={(e) => {
            e.target.style.transform = 'translateY(0)';
            e.target.style.boxShadow = '0 4px 15px rgba(45, 80, 22, 0.3)';
          }}
        >
          üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        </button>
      )}

      {permission === 'granted' && (
        <div>
          <div style={{
            display: 'flex',
            alignItems: 'center',
            gap: '10px',
            marginBottom: '15px'
          }}>
            <span style={{ color: '#28a745', fontSize: '16px' }}>‚úÖ</span>
            <span style={{ color: '#28a745', fontSize: '14px', fontWeight: '500' }}>
              –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã
            </span>
          </div>

          <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>
            <button
              onClick={sendTestNotification}
              style={{
                background: 'transparent',
                color: '#2D5016',
                border: '2px solid #2D5016',
                borderRadius: '25px',
                padding: '10px 20px',
                fontSize: '14px',
                fontWeight: '600',
                cursor: 'pointer',
                transition: 'all 0.3s ease'
              }}
              onMouseEnter={(e) => {
                e.target.style.background = '#2D5016';
                e.target.style.color = 'white';
              }}
              onMouseLeave={(e) => {
                e.target.style.background = 'transparent';
                e.target.style.color = '#2D5016';
              }}
            >
              üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            </button>

            <button
              onClick={unsubscribeFromPush}
              style={{
                background: 'transparent',
                color: '#dc3545',
                border: '2px solid #dc3545',
                borderRadius: '25px',
                padding: '10px 20px',
                fontSize: '14px',
                fontWeight: '600',
                cursor: 'pointer',
                transition: 'all 0.3s ease'
              }}
              onMouseEnter={(e) => {
                e.target.style.background = '#dc3545';
                e.target.style.color = 'white';
              }}
              onMouseLeave={(e) => {
                e.target.style.background = 'transparent';
                e.target.style.color = '#dc3545';
              }}
            >
              üîï –û—Ç–∫–ª—é—á–∏—Ç—å
            </button>
          </div>
        </div>
      )}

      {permission === 'denied' && (
        <div style={{
          padding: '15px',
          background: '#f8d7da',
          borderRadius: '8px',
          border: '1px solid #f5c6cb',
          color: '#721c24'
        }}>
          <p style={{ margin: 0, fontSize: '14px' }}>
            ‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã. –†–∞–∑—Ä–µ—à–∏—Ç–µ –∏—Ö –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞.
          </p>
        </div>
      )}
      </div>
      )}
    </div>
  );
};

export default PushNotifications;
