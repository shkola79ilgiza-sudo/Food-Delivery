import React, { useState } from 'react';

const PriceCalculationDemo = () => {
  const [demoIngredients, setDemoIngredients] = useState('–∫—É—Ä–∏—Ü–∞ 200–≥, –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å 300–≥, –º–æ—Ä–∫–æ–≤—å 100–≥, –ª—É–∫ 50–≥, –º–∞—Å–ª–æ 20–≥');
  const [cookingMethod, setCookingMethod] = useState('—Ç—É—à–µ–Ω–∏–µ');
  const [category, setCategory] = useState('–≥–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞');

  // –ë–∞–∑–∞ —Ü–µ–Ω –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ (–∏–∑ advancedPricingAnalyzer.js)
  const ingredientCosts = {
    '–∫—É—Ä–∏—Ü–∞': 280,      // –∑–∞ 100–≥
    '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å': 40,    // –∑–∞ 100–≥
    '–º–æ—Ä–∫–æ–≤—å': 30,      // –∑–∞ 100–≥
    '–ª—É–∫': 25,          // –∑–∞ 100–≥
    '–º–∞—Å–ª–æ': 200        // –∑–∞ 100–≥ (—Å–ª–∏–≤–æ—á–Ω–æ–µ)
  };

  // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  const complexityFactors = {
    '—Å—ã—Ä–æ–π': 1.0,
    '–≤–∞—Ä–∫–∞': 1.1,
    '–∂–∞—Ä–∫–∞': 1.3,
    '–∑–∞–ø–µ–∫–∞–Ω–∏–µ': 1.4,
    '—Ç—É—à–µ–Ω–∏–µ': 1.5,
    '–≥—Ä–∏–ª—å': 1.6,
    '—Ñ—Ä–∏—Ç—é—Ä': 1.7
  };

  // –†—ã–Ω–æ—á–Ω—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏
  const marketMultipliers = {
    'budget': 1.0,
    'mid-range': 1.5,
    'premium': 2.5,
    'fine-dining': 4.0
  };

  // –°–µ–∑–æ–Ω–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã (–∑–∏–º–∞)
  const seasonalFactors = {
    '—Å—É–ø—ã': 1.2,
    '–≥–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞': 1.15,
    '—Å–∞–ª–∞—Ç—ã': 0.8,
    '—Ö–æ–ª–æ–¥–Ω—ã–µ –∑–∞–∫—É—Å–∫–∏': 0.7
  };

  const calculatePrice = () => {
    // 1. –ü–∞—Ä—Å–∏–Ω–≥ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
    const ingredients = demoIngredients.split(',').map(ing => {
      const match = ing.trim().match(/(\d+(?:\.\d+)?)\s*(–≥|–∫–≥|–º–ª|–ª|—à—Ç)?\s*(.+)/);
      if (match) {
        let quantity = parseFloat(match[1]);
        const unit = match[2] || '–≥';
        const name = match[3].trim();
        
        // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –≥—Ä–∞–º–º—ã
        if (unit === '–∫–≥') quantity *= 1000;
        if (unit === '–ª') quantity *= 1000;
        if (unit === '—à—Ç') quantity *= 50;
        
        return { name, quantity, unit };
      }
      return { name: ing.trim(), quantity: 100, unit: '–≥' };
    });

    // 2. –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
    let totalCost = 0;
    const breakdown = [];
    
    ingredients.forEach(ingredient => {
      const costPer100g = ingredientCosts[ingredient.name] || 100;
      const cost = (costPer100g * ingredient.quantity) / 100;
      totalCost += cost;
      
      breakdown.push({
        name: ingredient.name,
        quantity: ingredient.quantity,
        unit: ingredient.unit,
        costPer100g: costPer100g,
        totalCost: cost
      });
    });

    // 3. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
    const complexityFactor = complexityFactors[cookingMethod] || 1.0;
    const seasonalFactor = seasonalFactors[category] || 1.0;
    const marketMultiplier = marketMultipliers['mid-range']; // –°—Ä–µ–¥–Ω–∏–π —Å–µ–≥–º–µ–Ω—Ç

    // 4. –†–∞—Å—á–µ—Ç –±–∞–∑–æ–≤–æ–π —Ü–µ–Ω—ã
    const basePrice = totalCost * complexityFactor * seasonalFactor * marketMultiplier;

    // 5. –†–∞—Å—á–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —Ü–µ–Ω
    const suggestedPrices = {
      minimum: Math.round(basePrice * 0.8),      // -20%
      recommended: Math.round(basePrice),         // –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞
      premium: Math.round(basePrice * 1.3),      // +30%
      maximum: Math.round(basePrice * 1.5)       // +50%
    };

    // 6. –†–∞—Å—á–µ—Ç –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏
    const profitMargin = Math.round(((suggestedPrices.recommended - totalCost) / suggestedPrices.recommended) * 100);

    return {
      totalCost,
      breakdown,
      complexityFactor,
      seasonalFactor,
      marketMultiplier,
      basePrice,
      suggestedPrices,
      profitMargin
    };
  };

  const result = calculatePrice();

  return (
    <div style={{
      padding: '20px',
      background: 'linear-gradient(135deg, #f5f7fa, #c3cfe2)',
      borderRadius: '12px',
      margin: '20px 0',
      fontFamily: 'Arial, sans-serif'
    }}>
      <h2 style={{ 
        textAlign: 'center', 
        color: '#2c3e50', 
        marginBottom: '20px',
        fontSize: '24px'
      }}>
        üßÆ –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Ü–µ–Ω—ã –±–ª—é–¥–∞
      </h2>

      {/* –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: '1fr 1fr 1fr',
        gap: '15px',
        marginBottom: '20px',
        padding: '15px',
        background: 'white',
        borderRadius: '8px',
        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
      }}>
        <div>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>
            –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:
          </label>
          <textarea
            value={demoIngredients}
            onChange={(e) => setDemoIngredients(e.target.value)}
            style={{
              width: '100%',
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px',
              resize: 'vertical'
            }}
            rows="3"
          />
        </div>
        <div>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>
            –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:
          </label>
          <select
            value={cookingMethod}
            onChange={(e) => setCookingMethod(e.target.value)}
            style={{
              width: '100%',
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px'
            }}
          >
            <option value="—Å—ã—Ä–æ–π">–°—ã—Ä–æ–π (1.0x)</option>
            <option value="–≤–∞—Ä–∫–∞">–í–∞—Ä–∫–∞ (1.1x)</option>
            <option value="–∂–∞—Ä–∫–∞">–ñ–∞—Ä–∫–∞ (1.3x)</option>
            <option value="–∑–∞–ø–µ–∫–∞–Ω–∏–µ">–ó–∞–ø–µ–∫–∞–Ω–∏–µ (1.4x)</option>
            <option value="—Ç—É—à–µ–Ω–∏–µ">–¢—É—à–µ–Ω–∏–µ (1.5x)</option>
            <option value="–≥—Ä–∏–ª—å">–ì—Ä–∏–ª—å (1.6x)</option>
            <option value="—Ñ—Ä–∏—Ç—é—Ä">–§—Ä–∏—Ç—é—Ä (1.7x)</option>
          </select>
        </div>
        <div>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>
            –ö–∞—Ç–µ–≥–æ—Ä–∏—è:
          </label>
          <select
            value={category}
            onChange={(e) => setCategory(e.target.value)}
            style={{
              width: '100%',
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px'
            }}
          >
            <option value="—Å—É–ø—ã">–°—É–ø—ã (1.2x)</option>
            <option value="–≥–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞">–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞ (1.15x)</option>
            <option value="—Å–∞–ª–∞—Ç—ã">–°–∞–ª–∞—Ç—ã (0.8x)</option>
            <option value="—Ö–æ–ª–æ–¥–Ω—ã–µ –∑–∞–∫—É—Å–∫–∏">–•–æ–ª–æ–¥–Ω—ã–µ –∑–∞–∫—É—Å–∫–∏ (0.7x)</option>
          </select>
        </div>
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: '1fr 1fr',
        gap: '20px',
        marginBottom: '20px'
      }}>
        {/* –°—Ç–æ–∏–º–æ—Å—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ */}
        <div style={{
          padding: '15px',
          background: 'white',
          borderRadius: '8px',
          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
        }}>
          <h3 style={{ color: '#2c3e50', marginBottom: '15px' }}>
            üìä –°—Ç–æ–∏–º–æ—Å—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
          </h3>
          {result.breakdown.map((item, index) => (
            <div key={index} style={{
              display: 'flex',
              justifyContent: 'space-between',
              padding: '8px 0',
              borderBottom: '1px solid #eee'
            }}>
              <span>{item.name} ({item.quantity}{item.unit})</span>
              <span style={{ fontWeight: 'bold' }}>
                {item.totalCost.toFixed(0)}‚ÇΩ
              </span>
            </div>
          ))}
          <div style={{
            display: 'flex',
            justifyContent: 'space-between',
            padding: '10px 0',
            borderTop: '2px solid #3498db',
            fontWeight: 'bold',
            fontSize: '16px',
            color: '#2c3e50'
          }}>
            <span>–ò—Ç–æ–≥–æ:</span>
            <span>{result.totalCost.toFixed(0)}‚ÇΩ</span>
          </div>
        </div>

        {/* –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã */}
        <div style={{
          padding: '15px',
          background: 'white',
          borderRadius: '8px',
          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
        }}>
          <h3 style={{ color: '#2c3e50', marginBottom: '15px' }}>
            ‚öôÔ∏è –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã —Ä–∞—Å—á–µ—Ç–∞
          </h3>
          <div style={{ marginBottom: '10px' }}>
            <div style={{ display: 'flex', justifyContent: 'space-between' }}>
              <span>–°–ª–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:</span>
              <span style={{ fontWeight: 'bold' }}>{result.complexityFactor}x</span>
            </div>
            <div style={{ fontSize: '12px', color: '#666' }}>
              {cookingMethod} ‚Üí {result.complexityFactor}x
            </div>
          </div>
          <div style={{ marginBottom: '10px' }}>
            <div style={{ display: 'flex', justifyContent: 'space-between' }}>
              <span>–°–µ–∑–æ–Ω–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä:</span>
              <span style={{ fontWeight: 'bold' }}>{result.seasonalFactor}x</span>
            </div>
            <div style={{ fontSize: '12px', color: '#666' }}>
              {category} (–∑–∏–º–∞) ‚Üí {result.seasonalFactor}x
            </div>
          </div>
          <div style={{ marginBottom: '10px' }}>
            <div style={{ display: 'flex', justifyContent: 'space-between' }}>
              <span>–†—ã–Ω–æ—á–Ω—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å:</span>
              <span style={{ fontWeight: 'bold' }}>{result.marketMultiplier}x</span>
            </div>
            <div style={{ fontSize: '12px', color: '#666' }}>
              –°—Ä–µ–¥–Ω–∏–π —Å–µ–≥–º–µ–Ω—Ç ‚Üí {result.marketMultiplier}x
            </div>
          </div>
          <div style={{
            padding: '10px',
            background: '#ecf0f1',
            borderRadius: '4px',
            marginTop: '10px'
          }}>
            <div style={{ display: 'flex', justifyContent: 'space-between', fontWeight: 'bold' }}>
              <span>–û–±—â–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç:</span>
              <span>{(result.complexityFactor * result.seasonalFactor * result.marketMultiplier).toFixed(2)}x</span>
            </div>
          </div>
        </div>
      </div>

      {/* –§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞ */}
      <div style={{
        padding: '15px',
        background: '#2c3e50',
        color: 'white',
        borderRadius: '8px',
        marginBottom: '20px',
        fontFamily: 'monospace'
      }}>
        <h3 style={{ marginBottom: '10px' }}>üßÆ –§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞:</h3>
        <div style={{ fontSize: '14px', lineHeight: '1.6' }}>
          <div>–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ = –°—Ç–æ–∏–º–æ—Å—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ √ó –°–ª–æ–∂–Ω–æ—Å—Ç—å √ó –°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å √ó –†—ã–Ω–æ–∫</div>
          <div>–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ = {result.totalCost.toFixed(0)}‚ÇΩ √ó {result.complexityFactor} √ó {result.seasonalFactor} √ó {result.marketMultiplier}</div>
          <div style={{ color: '#3498db', fontWeight: 'bold' }}>
            –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ = {result.basePrice.toFixed(0)}‚ÇΩ
          </div>
        </div>
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ü–µ–Ω—ã */}
      <div style={{
        padding: '20px',
        background: 'linear-gradient(135deg, #667eea, #764ba2)',
        color: 'white',
        borderRadius: '8px',
        textAlign: 'center'
      }}>
        <h3 style={{ marginBottom: '20px', fontSize: '20px' }}>
          üí∞ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ü–µ–Ω—ã
        </h3>
        <div style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(4, 1fr)',
          gap: '15px'
        }}>
          <div style={{
            padding: '15px',
            background: 'rgba(255,255,255,0.1)',
            borderRadius: '8px',
            border: '2px solid rgba(255,255,255,0.3)'
          }}>
            <div style={{ fontSize: '12px', marginBottom: '5px' }}>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è</div>
            <div style={{ fontSize: '18px', fontWeight: 'bold' }}>
              {result.suggestedPrices.minimum}‚ÇΩ
            </div>
            <div style={{ fontSize: '10px', opacity: 0.8 }}>-20%</div>
          </div>
          <div style={{
            padding: '15px',
            background: 'rgba(46, 204, 113, 0.3)',
            borderRadius: '8px',
            border: '2px solid #2ecc71'
          }}>
            <div style={{ fontSize: '12px', marginBottom: '5px' }}>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è</div>
            <div style={{ fontSize: '20px', fontWeight: 'bold' }}>
              {result.suggestedPrices.recommended}‚ÇΩ
            </div>
            <div style={{ fontSize: '10px', opacity: 0.8 }}>–ë–∞–∑–æ–≤–∞—è</div>
          </div>
          <div style={{
            padding: '15px',
            background: 'rgba(255,255,255,0.1)',
            borderRadius: '8px',
            border: '2px solid rgba(255,255,255,0.3)'
          }}>
            <div style={{ fontSize: '12px', marginBottom: '5px' }}>–ü—Ä–µ–º–∏—É–º</div>
            <div style={{ fontSize: '18px', fontWeight: 'bold' }}>
              {result.suggestedPrices.premium}‚ÇΩ
            </div>
            <div style={{ fontSize: '10px', opacity: 0.8 }}>+30%</div>
          </div>
          <div style={{
            padding: '15px',
            background: 'rgba(255,255,255,0.1)',
            borderRadius: '8px',
            border: '2px solid rgba(255,255,255,0.3)'
          }}>
            <div style={{ fontSize: '12px', marginBottom: '5px' }}>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è</div>
            <div style={{ fontSize: '18px', fontWeight: 'bold' }}>
              {result.suggestedPrices.maximum}‚ÇΩ
            </div>
            <div style={{ fontSize: '10px', opacity: 0.8 }}>+50%</div>
          </div>
        </div>
        
        <div style={{
          marginTop: '20px',
          padding: '15px',
          background: 'rgba(255,255,255,0.1)',
          borderRadius: '8px',
          fontSize: '16px'
        }}>
          <div style={{ marginBottom: '10px' }}>
            <strong>–ü—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å: {result.profitMargin}%</strong>
          </div>
          <div style={{ fontSize: '14px', opacity: 0.9 }}>
            –ü—Ä–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–π —Ü–µ–Ω–µ {result.suggestedPrices.recommended}‚ÇΩ –ø—Ä–∏–±—ã–ª—å —Å–æ—Å—Ç–∞–≤–∏—Ç {result.suggestedPrices.recommended - result.totalCost}‚ÇΩ
          </div>
        </div>
      </div>
    </div>
  );
};

export default PriceCalculationDemo;
