import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';
import '../App.css';

const Register = () => {
  const navigate = useNavigate();
  const { register } = useAuth();
  
  const [formData, setFormData] = useState({
    email: '',
    password: '',
    role: 'CLIENT',
    firstName: '',
    lastName: '',
    phone: '',
    // –î–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    address: '',
    // –î–ª—è –ø–æ–≤–∞—Ä–∞
    bio: '',
    specialization: '',
    agreeTerms: false
  });
  
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData({
      ...formData,
      [name]: type === 'checkbox' ? checked : value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');
    setLoading(true);

    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
      const userData = {
        email: formData.email,
        password: formData.password,
        role: formData.role,
        firstName: formData.firstName,
        lastName: formData.lastName,
      };

      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
      if (formData.phone && formData.phone.trim()) {
        userData.phone = formData.phone;
      }

      if (formData.role === 'CLIENT' && formData.address && formData.address.trim()) {
        userData.address = formData.address;
      } else if (formData.role === 'CHEF') {
        if (formData.bio && formData.bio.trim()) userData.bio = formData.bio;
        if (formData.specialization && formData.specialization.trim()) userData.specialization = formData.specialization;
      }

      const data = await register(userData);
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
      if (data.user.role === 'CHEF') {
        navigate('/chef');
      } else if (data.user.role === 'CLIENT') {
        navigate('/client');
      }
    } catch (err) {
      console.error('Registration error:', err);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      if (err.message === 'Email already exists') {
        setError('–≠—Ç–æ—Ç email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π email –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
      } else if (err.message.includes('password')) {
        setError('–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤.');
      } else if (err.message.includes('email')) {
        setError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å.');
      } else {
        setError(err.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      }
    } finally {
      setLoading(false);
    }
  };

  return (
    <div 
      className="register-page-container"
      style={{
        backgroundImage: `url(${process.env.PUBLIC_URL}/backgrounds/register-pattern.png)`,
        backgroundSize: 'cover',
        backgroundPosition: 'center center',
        backgroundRepeat: 'no-repeat',
        backgroundAttachment: 'fixed',
        minHeight: '100vh',
        width: '100vw',
        margin: 0,
        padding: 0
      }}
    >
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="register-content">
        {/* –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
        <div className="register-form-section">
          <form onSubmit={handleSubmit}>
            <div className="register-header">
              <div className="logo-section">
                <span className="logo-icon">üçΩÔ∏è</span>
                <h1 className="app-title">Food Delivery</h1>
              </div>
              <h2 className="page-title">–ü–æ–≤–∞—Ä - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
            </div>

            {error && (
              <div className="error-message">
                ‚ùå {error}
                {error.includes('—É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω') && (
                  <div className="error-login-button-container">
                    <button 
                      className="error-login-button"
                      onClick={() => navigate('/client/login')}
                    >
                      –í–æ–π—Ç–∏
                    </button>
                  </div>
                )}
              </div>
            )}

            <div className="form-group">
              <label>Email:</label>
              <input
                type="email"
                name="email"
                value={formData.email}
                onChange={handleChange}
                placeholder="example@mail.com"
                required
              />
            </div>

            <div className="form-group">
              <label>–ü–∞—Ä–æ–ª—å:</label>
              <input
                type="password"
                name="password"
                value={formData.password}
                onChange={handleChange}
                placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
                required
              />
            </div>

            <div className="form-group">
              <label>–†–æ–ª—å:</label>
              <select
                name="role"
                value={formData.role}
                onChange={handleChange}
                required
              >
                <option value="CLIENT">–ö–ª–∏–µ–Ω—Ç</option>
                <option value="CHEF">–ü–æ–≤–∞—Ä</option>
              </select>
            </div>

            <div className="form-group">
              <label>–ò–º—è:</label>
              <input
                type="text"
                name="firstName"
                value={formData.firstName}
                onChange={handleChange}
                placeholder="–í–∞—à–µ –∏–º—è"
                required
              />
            </div>

            <div className="form-group">
              <label>–§–∞–º–∏–ª–∏—è:</label>
              <input
                type="text"
                name="lastName"
                value={formData.lastName}
                onChange={handleChange}
                placeholder="–í–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è"
                required
              />
            </div>

            <div className="form-group">
              <label>–¢–µ–ª–µ—Ñ–æ–Ω:</label>
              <input
                type="tel"
                name="phone"
                value={formData.phone}
                onChange={handleChange}
                placeholder="+7 (999) 123-45-67"
              />
            </div>

            {formData.role === 'CLIENT' && (
              <div className="form-group">
                <label>–ê–¥—Ä–µ—Å:</label>
                <input
                  type="text"
                  name="address"
                  value={formData.address}
                  onChange={handleChange}
                  placeholder="–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏"
                />
              </div>
            )}

            {formData.role === 'CHEF' && (
              <>
                <div className="form-group">
                  <label>–ë–∏–æ–≥—Ä–∞—Ñ–∏—è:</label>
                  <textarea
                    name="bio"
                    value={formData.bio}
                    onChange={handleChange}
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –∏ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ"
                    rows="3"
                  />
                </div>

                <div className="form-group">
                  <label>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</label>
                  <input
                    type="text"
                    name="specialization"
                    value={formData.specialization}
                    onChange={handleChange}
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è, –°—É—à–∏, –î–µ—Å–µ—Ä—Ç—ã"
                  />
                </div>
              </>
            )}

            <div className="form-group">
              <label className="checkbox-label">
                <input
                  type="checkbox"
                  name="agreeTerms"
                  checked={formData.agreeTerms}
                  onChange={handleChange}
                  required
                />
                –Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å <button 
                  type="button" 
                  className="terms-link-button"
                  onClick={() => alert('–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è')}
                >
                  —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                </button>
              </label>
            </div>

            <button type="submit" disabled={loading}>
              {loading ? '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
            </button>
          </form>

          <div className="register-footer">
            <p>–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?</p>
            <button 
              className="login-link"
              onClick={() => navigate('/client/login')}
            >
              –í–æ–π—Ç–∏
            </button>
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <div className="register-info-cards">
        <div className="info-card">
          <div className="info-card-icon">‚≠ê</div>
          <h3>–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –±–ª—é–¥–∞</h3>
          <p>–¢–æ–ª—å–∫–æ —Å–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–æ–≤–∞—Ä–æ–≤</p>
        </div>
        <div className="info-card">
          <div className="info-card-icon">üë•</div>
          <h3>–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</h3>
          <p>–î–æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 30-60 –º–∏–Ω—É—Ç –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –≥–æ—Ä–æ–¥–∞</p>
        </div>
        <div className="info-card">
          <div className="info-card-icon">üí∞</div>
          <h3>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã</h3>
          <p>–ß–µ—Å—Ç–Ω—ã–µ —Ü–µ–Ω—ã –±–µ–∑ —Å–∫—Ä—ã—Ç—ã—Ö –Ω–∞—Ü–µ–Ω–æ–∫ –∏ –∫–æ–º–∏—Å—Å–∏–π</p>
        </div>
      </div>
    </div>
  );
};

export default Register;