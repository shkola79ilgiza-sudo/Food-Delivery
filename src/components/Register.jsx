import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';
import './Register.css';

const Register = () => {
  const navigate = useNavigate();
  const { register } = useAuth();
  
  const [formData, setFormData] = useState({
    email: '',
    password: '',
    role: 'CLIENT',
    firstName: '',
    lastName: '',
    phone: '',
    // –î–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    address: '',
    // –î–ª—è –ø–æ–≤–∞—Ä–∞
    bio: '',
    specialization: '',
  });
  
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');
    setLoading(true);

    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
      const userData = {
        email: formData.email,
        password: formData.password,
        role: formData.role,
        firstName: formData.firstName,
        lastName: formData.lastName,
      };

      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
      if (formData.phone && formData.phone.trim()) {
        userData.phone = formData.phone;
      }

      if (formData.role === 'CLIENT' && formData.address && formData.address.trim()) {
        userData.address = formData.address;
      } else if (formData.role === 'CHEF') {
        if (formData.bio && formData.bio.trim()) userData.bio = formData.bio;
        if (formData.specialization && formData.specialization.trim()) userData.specialization = formData.specialization;
      }

      const data = await register(userData);
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
      if (data.user.role === 'CHEF') {
        navigate('/chef');
      } else if (data.user.role === 'CLIENT') {
        navigate('/client');
      }
    } catch (err) {
      console.error('Registration error:', err);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      if (err.message === 'Email already exists') {
        setError('–≠—Ç–æ—Ç email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π email –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
      } else if (err.message.includes('password')) {
        setError('–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤.');
      } else if (err.message.includes('email')) {
        setError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å.');
      } else {
        setError(err.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      }
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="register-container">
      <div className="register-card">
        <h1>üçΩÔ∏è Food Delivery</h1>
        <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>

        {error && (
          <div className="error-message">
            ‚ùå {error}
            {error.includes('—É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω') && (
              <div style={{ marginTop: '10px' }}>
                <button 
                  type="button"
                  onClick={() => navigate('/login')}
                  style={{
                    background: '#007bff',
                    color: 'white',
                    border: 'none',
                    padding: '8px 16px',
                    borderRadius: '4px',
                    cursor: 'pointer',
                    fontSize: '14px'
                  }}
                >
                  –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
                </button>
              </div>
            )}
          </div>
        )}

        <form onSubmit={handleSubmit}>
          {/* –†–æ–ª—å */}
          <div className="form-group">
            <label>–Ø —Ö–æ—á—É:</label>
            <select
              name="role"
              value={formData.role}
              onChange={handleChange}
              required
            >
              <option value="CLIENT">–ó–∞–∫–∞–∑—ã–≤–∞—Ç—å –µ–¥—É (–ö–ª–∏–µ–Ω—Ç)</option>
              <option value="CHEF">–ì–æ—Ç–æ–≤–∏—Ç—å –µ–¥—É (–ü–æ–≤–∞—Ä)</option>
            </select>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
          <div className="form-row">
            <div className="form-group">
              <label>–ò–º—è:</label>
              <input
                type="text"
                name="firstName"
                value={formData.firstName}
                onChange={handleChange}
                placeholder="–ò–≤–∞–Ω"
                required
              />
            </div>

            <div className="form-group">
              <label>–§–∞–º–∏–ª–∏—è:</label>
              <input
                type="text"
                name="lastName"
                value={formData.lastName}
                onChange={handleChange}
                placeholder="–ò–≤–∞–Ω–æ–≤"
                required
              />
            </div>
          </div>

          <div className="form-group">
            <label>Email:</label>
            <input
              type="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              placeholder="example@mail.com"
              required
            />
          </div>

          <div className="form-group">
            <label>–¢–µ–ª–µ—Ñ–æ–Ω:</label>
            <input
              type="tel"
              name="phone"
              value={formData.phone}
              onChange={handleChange}
              placeholder="+7 (999) 123-45-67"
              required
            />
          </div>

          <div className="form-group">
            <label>–ü–∞—Ä–æ–ª—å:</label>
            <input
              type="password"
              name="password"
              value={formData.password}
              onChange={handleChange}
              placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
              minLength="6"
              required
            />
          </div>

          {/* –ü–æ–ª—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ */}
          {formData.role === 'CLIENT' && (
            <div className="form-group">
              <label>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</label>
              <input
                type="text"
                name="address"
                value={formData.address}
                onChange={handleChange}
                placeholder="—É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. 10, –∫–≤. 5"
                required
              />
            </div>
          )}

          {/* –ü–æ–ª—è –¥–ª—è –ø–æ–≤–∞—Ä–∞ */}
          {formData.role === 'CHEF' && (
            <>
              <div className="form-group">
                <label>–û —Å–µ–±–µ:</label>
                <textarea
                  name="bio"
                  value={formData.bio}
                  onChange={handleChange}
                  placeholder="–û–ø—ã—Ç–Ω—ã–π –ø–æ–≤–∞—Ä —Å 10-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º..."
                  rows="3"
                  required
                />
              </div>

              <div className="form-group">
                <label>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</label>
                <input
                  type="text"
                  name="specialization"
                  value={formData.specialization}
                  onChange={handleChange}
                  placeholder="–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è, –ø–∞—Å—Ç–∞, –ø–∏—Ü—Ü–∞"
                  required
                />
              </div>
            </>
          )}

          <button type="submit" disabled={loading}>
            {loading ? '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
          </button>
        </form>

        <div className="register-footer">
          <p>–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?</p>
          <button 
            className="login-link"
            onClick={() => navigate('/login')}
          >
            –í–æ–π—Ç–∏
          </button>
        </div>
      </div>
    </div>
  );
};

export default Register;
