import React, { useState, useEffect } from 'react';
import './PWAInstallPrompt.css';

const PWAInstallPrompt = () => {
  const [deferredPrompt, setDeferredPrompt] = useState(null);
  const [showInstallPrompt, setShowInstallPrompt] = useState(false);
  const [isInstalled, setIsInstalled] = useState(false);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    const checkInstalled = () => {
      if (window.matchMedia('(display-mode: standalone)').matches || 
          window.navigator.standalone === true) {
        setIsInstalled(true);
        return;
      }
    };

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ beforeinstallprompt
    const handleBeforeInstallPrompt = (e) => {
      console.log('PWA: beforeinstallprompt event fired');
      e.preventDefault();
      setDeferredPrompt(e);
      setShowInstallPrompt(true);
    };

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ appinstalled
    const handleAppInstalled = () => {
      console.log('PWA: App was installed');
      setIsInstalled(true);
      setShowInstallPrompt(false);
      setDeferredPrompt(null);
    };

    checkInstalled();
    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
    window.addEventListener('appinstalled', handleAppInstalled);

    return () => {
      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
      window.removeEventListener('appinstalled', handleAppInstalled);
    };
  }, []);

  const handleInstallClick = async () => {
    if (!deferredPrompt) return;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º prompt —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    deferredPrompt.prompt();
    
    // –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    const { outcome } = await deferredPrompt.userChoice;
    console.log(`PWA: User choice outcome: ${outcome}`);
    
    setDeferredPrompt(null);
    setShowInstallPrompt(false);
  };

  const handleDismiss = () => {
    setShowInstallPrompt(false);
    // –°–∫—Ä—ã–≤–∞–µ–º –Ω–∞ 24 —á–∞—Å–∞
    localStorage.setItem('pwa-install-dismissed', Date.now().toString());
  };

  // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—Å–ª–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ–¥–∞–≤–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏–ª–∏
  if (isInstalled || !showInstallPrompt) {
    const dismissed = localStorage.getItem('pwa-install-dismissed');
    if (dismissed && Date.now() - parseInt(dismissed) < 24 * 60 * 60 * 1000) {
      return null;
    }
  }

  if (isInstalled) {
    return (
      <div className="pwa-installed-banner">
        <div className="pwa-installed-content">
          <span className="pwa-icon">üì±</span>
          <span>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!</span>
        </div>
      </div>
    );
  }

  if (!showInstallPrompt) return null;

  return (
    <div className="pwa-install-prompt">
      <div className="pwa-install-content">
        <div className="pwa-install-icon">
          <span>üì±</span>
        </div>
        <div className="pwa-install-text">
          <h3>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h3>
          <p>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Food Delivery –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏ —Ä–∞–±–æ—Ç—ã offline</p>
        </div>
        <div className="pwa-install-buttons">
          <button 
            className="pwa-install-btn" 
            onClick={handleInstallClick}
          >
            –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
          </button>
          <button 
            className="pwa-dismiss-btn" 
            onClick={handleDismiss}
          >
            –ü–æ–∑–∂–µ
          </button>
        </div>
      </div>
    </div>
  );
};

export default PWAInstallPrompt;
