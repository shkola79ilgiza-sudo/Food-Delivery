import React, { useState, useEffect } from 'react';
import { useToast } from '../contexts/ToastContext';
import aiBenefitGenerator from '../utils/aiBenefitGenerator';

const AIBenefitPanel = ({ dish, onBenefitGenerated }) => {
  const [benefits, setBenefits] = useState(null);
  const [selectedFormat, setSelectedFormat] = useState('medium');
  const [selectedGoal, setSelectedGoal] = useState(null);
  const [isGenerating, setIsGenerating] = useState(false);
  const [headlines, setHeadlines] = useState([]);
  const [hashtags, setHashtags] = useState([]);
  const { showSuccess } = useToast();

  const formats = [
    { id: 'short', name: '–ö–æ—Ä–æ—Ç–∫–∏–π', description: '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ', icon: 'üìù' },
    { id: 'medium', name: '–°—Ä–µ–¥–Ω–∏–π', description: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ', icon: 'üìÑ' },
    { id: 'long', name: '–î–ª–∏–Ω–Ω—ã–π', description: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ', icon: 'üìã' }
  ];

  const goals = [
    { id: null, name: '–ë–µ–∑ —Ü–µ–ª–∏', icon: 'üåü' },
    { id: 'weight_loss', name: '–ü–æ—Ö—É–¥–µ–Ω–∏–µ', icon: 'üéØ' },
    { id: 'muscle_gain', name: '–ù–∞–±–æ—Ä –º–∞—Å—Å—ã', icon: 'üí™' },
    { id: 'healthy', name: '–ó–¥–æ—Ä–æ–≤—å–µ', icon: 'üå±' },
    { id: 'energy', name: '–≠–Ω–µ—Ä–≥–∏—è', icon: '‚ö°' },
    { id: 'immunity', name: '–ò–º–º—É–Ω–∏—Ç–µ—Ç', icon: 'üõ°Ô∏è' }
  ];

  useEffect(() => {
    if (dish) {
      generateBenefits();
    }
  }, [dish, selectedFormat, selectedGoal]);

  const generateBenefits = () => {
    if (!dish) return;

    setIsGenerating(true);
    try {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç—ã –≤—Å–µ—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
      const allBenefits = {
        short: aiBenefitGenerator.generateBenefit(dish, 'short', selectedGoal),
        medium: aiBenefitGenerator.generateBenefit(dish, 'medium', selectedGoal),
        long: aiBenefitGenerator.generateBenefit(dish, 'long', selectedGoal)
      };

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Ö–µ—à—Ç–µ–≥–∏
      const generatedHeadlines = aiBenefitGenerator.generateCatchyHeadlines(dish);
      const generatedHashtags = aiBenefitGenerator.generateHashtags(dish, selectedGoal);

      setBenefits(allBenefits);
      setHeadlines(generatedHeadlines);
      setHashtags(generatedHashtags);
    } catch (error) {
      console.error('Error generating benefits:', error);
    } finally {
      setIsGenerating(false);
    }
  };

  const handleCopyBenefit = (format) => {
    const text = benefits[format];
    navigator.clipboard.writeText(text);
    showSuccess('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
  };

  const handleUseBenefit = (format) => {
    if (onBenefitGenerated && benefits) {
      onBenefitGenerated(benefits[format]);
      showSuccess('–¢–µ–∫—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω –∫ –æ–ø–∏—Å–∞–Ω–∏—é –±–ª—é–¥–∞!');
    }
  };

  if (!dish) return null;

  if (isGenerating) {
    return (
      <div style={{
        background: 'linear-gradient(135deg, #e3f2fd, #bbdefb)',
        borderRadius: '10px',
        padding: '20px',
        textAlign: 'center',
        border: '2px solid #2196f3'
      }}>
        <div style={{ fontSize: '32px', marginBottom: '10px' }}>üí°</div>
        <h4 style={{ margin: '0', color: '#333' }}>AI –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–¥–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç—ã...</h4>
        <p style={{ margin: '10px 0 0 0', color: '#666', fontSize: '14px' }}>
          –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑—É –±–ª—é–¥–∞ –∏ —Å–æ–∑–¥–∞–µ–º —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è
        </p>
      </div>
    );
  }

  if (!benefits) return null;

  return (
    <div style={{
      background: 'linear-gradient(135deg, #e8f5e9, #c8e6c9)',
      borderRadius: '12px',
      padding: '20px',
      border: '2px solid #4caf50',
      marginTop: '15px'
    }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{ marginBottom: '20px' }}>
        <h3 style={{
          margin: '0 0 10px 0',
          color: '#2e7d32',
          display: 'flex',
          alignItems: 'center',
          gap: '10px'
        }}>
          üí° AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ–ª—å–∑—ã
        </h3>
        <p style={{ margin: '0', color: '#666', fontSize: '14px' }}>
          –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç—ã –æ –ø–æ–ª—å–∑–µ –±–ª—é–¥–∞
        </p>
      </div>

      {/* –í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ */}
      <div style={{ marginBottom: '20px' }}>
        <h4 style={{ margin: '0 0 10px 0', color: '#333', fontSize: '14px' }}>–§–æ—Ä–º–∞—Ç —Ç–µ–∫—Å—Ç–∞:</h4>
        <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>
          {formats.map(format => (
            <button
              key={format.id}
              onClick={() => setSelectedFormat(format.id)}
              style={{
                background: selectedFormat === format.id ? 'linear-gradient(135deg, #4caf50, #45a049)' : 'white',
                color: selectedFormat === format.id ? 'white' : '#333',
                border: `2px solid ${selectedFormat === format.id ? '#4caf50' : '#e0e0e0'}`,
                padding: '10px 15px',
                borderRadius: '8px',
                cursor: 'pointer',
                fontSize: '13px',
                fontWeight: 'bold',
                transition: 'all 0.3s ease',
                display: 'flex',
                alignItems: 'center',
                gap: '6px'
              }}
            >
              <span>{format.icon}</span>
              {format.name}
            </button>
          ))}
        </div>
      </div>

      {/* –í—ã–±–æ—Ä —Ü–µ–ª–∏ */}
      <div style={{ marginBottom: '20px' }}>
        <h4 style={{ margin: '0 0 10px 0', color: '#333', fontSize: '14px' }}>–¶–µ–ª—å –∫–ª–∏–µ–Ω—Ç–∞:</h4>
        <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>
          {goals.map(goal => (
            <button
              key={goal.id || 'none'}
              onClick={() => setSelectedGoal(goal.id)}
              style={{
                background: selectedGoal === goal.id ? 'linear-gradient(135deg, #2196f3, #1976d2)' : 'white',
                color: selectedGoal === goal.id ? 'white' : '#333',
                border: `2px solid ${selectedGoal === goal.id ? '#2196f3' : '#e0e0e0'}`,
                padding: '8px 12px',
                borderRadius: '8px',
                cursor: 'pointer',
                fontSize: '12px',
                fontWeight: 'bold',
                transition: 'all 0.3s ease',
                display: 'flex',
                alignItems: 'center',
                gap: '6px'
              }}
            >
              <span>{goal.icon}</span>
              {goal.name}
            </button>
          ))}
        </div>
      </div>

      {/* –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç */}
      <div style={{ marginBottom: '20px' }}>
        <h4 style={{ margin: '0 0 10px 0', color: '#333', fontSize: '14px' }}>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:</h4>
        <div style={{
          background: 'white',
          border: '2px solid #4caf50',
          borderRadius: '8px',
          padding: '15px',
          marginBottom: '10px'
        }}>
          <p style={{
            margin: '0',
            color: '#333',
            fontSize: '14px',
            lineHeight: '1.6'
          }}>
            {benefits[selectedFormat]}
          </p>
        </div>

        <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>
          <button
            onClick={() => handleCopyBenefit(selectedFormat)}
            style={{
              background: 'linear-gradient(135deg, #9c27b0, #7b1fa2)',
              color: 'white',
              border: 'none',
              padding: '10px 15px',
              borderRadius: '8px',
              cursor: 'pointer',
              fontSize: '13px',
              fontWeight: 'bold',
              display: 'flex',
              alignItems: 'center',
              gap: '6px',
              transition: 'all 0.3s ease'
            }}
          >
            üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
          </button>

          {onBenefitGenerated && (
            <button
              onClick={() => handleUseBenefit(selectedFormat)}
              style={{
                background: 'linear-gradient(135deg, #4caf50, #45a049)',
                color: 'white',
                border: 'none',
                padding: '10px 15px',
                borderRadius: '8px',
                cursor: 'pointer',
                fontSize: '13px',
                fontWeight: 'bold',
                display: 'flex',
                alignItems: 'center',
                gap: '6px',
                transition: 'all 0.3s ease'
              }}
            >
              ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            </button>
          )}

          <button
            onClick={generateBenefits}
            style={{
              background: 'linear-gradient(135deg, #ff9800, #f57c00)',
              color: 'white',
              border: 'none',
              padding: '10px 15px',
              borderRadius: '8px',
              cursor: 'pointer',
              fontSize: '13px',
              fontWeight: 'bold',
              display: 'flex',
              alignItems: 'center',
              gap: '6px',
              transition: 'all 0.3s ease'
            }}
          >
            üîÑ –û–±–Ω–æ–≤–∏—Ç—å
          </button>
        </div>
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */}
      {headlines.length > 0 && (
        <div style={{ marginBottom: '20px' }}>
          <h4 style={{ margin: '0 0 10px 0', color: '#333', fontSize: '14px' }}>–¶–µ–ø–ª—è—é—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏:</h4>
          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>
            {headlines.map((headline, index) => (
              <div
                key={index}
                onClick={() => {
                  navigator.clipboard.writeText(headline);
                  showSuccess('–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
                }}
                style={{
                  background: 'white',
                  border: '2px solid #ff9800',
                  borderRadius: '8px',
                  padding: '8px 12px',
                  fontSize: '13px',
                  color: '#333',
                  cursor: 'pointer',
                  transition: 'all 0.3s ease'
                }}
                onMouseEnter={(e) => e.target.style.background = '#fff3e0'}
                onMouseLeave={(e) => e.target.style.background = 'white'}
              >
                {headline}
              </div>
            ))}
          </div>
        </div>
      )}

      {/* –•–µ—à—Ç–µ–≥–∏ */}
      {hashtags.length > 0 && (
        <div>
          <h4 style={{ margin: '0 0 10px 0', color: '#333', fontSize: '14px' }}>–•–µ—à—Ç–µ–≥–∏ –¥–ª—è —Å–æ—Ü. —Å–µ—Ç–µ–π:</h4>
          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>
            {hashtags.map((hashtag, index) => (
              <div
                key={index}
                onClick={() => {
                  navigator.clipboard.writeText(hashtag);
                  showSuccess('–•–µ—à—Ç–µ–≥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
                }}
                style={{
                  background: 'white',
                  border: '2px solid #2196f3',
                  borderRadius: '8px',
                  padding: '6px 10px',
                  fontSize: '12px',
                  color: '#2196f3',
                  fontWeight: 'bold',
                  cursor: 'pointer',
                  transition: 'all 0.3s ease'
                }}
                onMouseEnter={(e) => {
                  e.target.style.background = '#e3f2fd';
                  e.target.style.transform = 'translateY(-2px)';
                }}
                onMouseLeave={(e) => {
                  e.target.style.background = 'white';
                  e.target.style.transform = 'translateY(0)';
                }}
              >
                {hashtag}
              </div>
            ))}
          </div>
        </div>
      )}

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
      <div style={{
        marginTop: '15px',
        padding: '12px',
        background: 'rgba(255, 255, 255, 0.7)',
        borderRadius: '8px',
        border: '1px solid #4caf50'
      }}>
        <p style={{
          margin: '0',
          color: '#666',
          fontSize: '12px',
          fontStyle: 'italic'
        }}>
          üí° <strong>–°–æ–≤–µ—Ç:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ —Ç–µ–∫—Å—Ç—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –±–ª—é–¥–∞, —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö –∏–ª–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö. –û–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –ø–æ–¥ —Ü–µ–ª—å –∫–ª–∏–µ–Ω—Ç–∞!
        </p>
      </div>
    </div>
  );
};

export default AIBenefitPanel;
