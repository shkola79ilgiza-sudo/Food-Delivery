version: '3.8'

services:
  # ============================================
  # Frontend Application
  # ============================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
        REACT_APP_SENTRY_DSN: ${REACT_APP_SENTRY_DSN}
        REACT_APP_ENVIRONMENT: ${ENVIRONMENT:-production}
    container_name: fooddelivery-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    networks:
      - fooddelivery-network
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`fooddelivery.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"

  # ============================================
  # Monitoring - Prometheus
  # ============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - fooddelivery-network

  # ============================================
  # Monitoring - Grafana
  # ============================================
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    networks:
      - fooddelivery-network
    depends_on:
      - prometheus

  # ============================================
  # Load Balancer - Nginx
  # ============================================
  nginx:
    image: nginx:alpine
    container_name: nginx-lb
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
      - nginx-logs:/var/log/nginx
    networks:
      - fooddelivery-network
    depends_on:
      - app

networks:
  fooddelivery-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  nginx-logs:

