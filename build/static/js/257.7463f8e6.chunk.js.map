{"version":3,"file":"static/js/257.7463f8e6.chunk.js","mappings":"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","sources":["../node_modules/tesseract.js/src/worker/browser/loadImage.js","../node_modules/tesseract.js/src/index.js","../node_modules/tesseract.js/src/createScheduler.js","../node_modules/tesseract.js/src/constants/OEM.js","../node_modules/tesseract.js/src/utils/getId.js","../node_modules/tesseract.js/src/utils/getEnvironment.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/tesseract.js/src/Tesseract.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/tesseract.js/src/worker/browser/defaultOptions.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/tesseract.js/src/worker/browser/index.js","../node_modules/tesseract.js/src/worker/browser/spawnWorker.js","../node_modules/tesseract.js/src/worker/browser/terminateWorker.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/tesseract.js/src/createJob.js","../node_modules/tesseract.js/src/utils/log.js","../node_modules/tesseract.js/src/constants/PSM.js","../node_modules/tesseract.js/src/worker/browser/onMessage.js","../node_modules/tesseract.js/src/worker/browser/send.js","../node_modules/tesseract.js/src/constants/defaultOptions.js","../node_modules/tesseract.js/src/constants/languages.js","../node_modules/tesseract.js/src/utils/resolvePaths.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/tesseract.js/src/createWorker.js"],"sourcesContent":["'use strict';\n\n/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n */\nconst readFromBlobOrFile = (blob) => (\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = ({ target: { error: { code } } }) => {\n      reject(Error(`File could not be read! Code=${code}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  })\n);\n\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n */\nconst loadImage = async (image) => {\n  let data = image;\n  if (typeof image === 'undefined') {\n    return 'undefined';\n  }\n\n  if (typeof image === 'string') {\n    // Base64 Image\n    if (/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\n      data = atob(image.split(',')[1])\n        .split('')\n        .map((c) => c.charCodeAt(0));\n    } else {\n      const resp = await fetch(image);\n      data = await resp.arrayBuffer();\n    }\n  } else if (typeof HTMLElement !== 'undefined' && image instanceof HTMLElement) {\n    if (image.tagName === 'IMG') {\n      data = await loadImage(image.src);\n    }\n    if (image.tagName === 'VIDEO') {\n      data = await loadImage(image.poster);\n    }\n    if (image.tagName === 'CANVAS') {\n      await new Promise((resolve) => {\n        image.toBlob(async (blob) => {\n          data = await readFromBlobOrFile(blob);\n          resolve();\n        });\n      });\n    }\n  } else if (typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas) {\n    const blob = await image.convertToBlob();\n    data = await readFromBlobOrFile(blob);\n  } else if (image instanceof File || image instanceof Blob) {\n    data = await readFromBlobOrFile(image);\n  }\n\n  return new Uint8Array(data);\n};\n\nmodule.exports = loadImage;\n","'use strict';\n\n/**\n *\n * Entry point for tesseract.js, should be the entry when bundling.\n *\n * @fileoverview entry point for tesseract.js\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nrequire('regenerator-runtime/runtime');\nconst createScheduler = require('./createScheduler');\nconst createWorker = require('./createWorker');\nconst Tesseract = require('./Tesseract');\nconst languages = require('./constants/languages');\nconst OEM = require('./constants/OEM');\nconst PSM = require('./constants/PSM');\nconst { setLogging } = require('./utils/log');\n\nmodule.exports = {\n  languages,\n  OEM,\n  PSM,\n  createScheduler,\n  createWorker,\n  setLogging,\n  ...Tesseract,\n};\n","'use strict';\n\nconst createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\n\nlet schedulerCounter = 0;\n\nmodule.exports = () => {\n  const id = getId('Scheduler', schedulerCounter);\n  const workers = {};\n  const runningWorkers = {};\n  let jobQueue = [];\n\n  schedulerCounter += 1;\n\n  const getQueueLen = () => jobQueue.length;\n  const getNumWorkers = () => Object.keys(workers).length;\n\n  const dequeue = () => {\n    if (jobQueue.length !== 0) {\n      const wIds = Object.keys(workers);\n      for (let i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n\n  const queue = (action, payload) => (\n    new Promise((resolve, reject) => {\n      const job = createJob({ action, payload });\n      jobQueue.push(async (w) => {\n        jobQueue.shift();\n        runningWorkers[w.id] = job;\n        try {\n          resolve(await w[action].apply(this, [...payload, job.id]));\n        } catch (err) {\n          reject(err);\n        } finally {\n          delete runningWorkers[w.id];\n          dequeue();\n        }\n      });\n      log(`[${id}]: Add ${job.id} to JobQueue`);\n      log(`[${id}]: JobQueue length=${jobQueue.length}`);\n      dequeue();\n    })\n  );\n\n  const addWorker = (w) => {\n    workers[w.id] = w;\n    log(`[${id}]: Add ${w.id}`);\n    log(`[${id}]: Number of workers=${getNumWorkers()}`);\n    dequeue();\n    return w.id;\n  };\n\n  const addJob = async (action, ...payload) => {\n    if (getNumWorkers() === 0) {\n      throw Error(`[${id}]: You need to have at least one worker before adding jobs`);\n    }\n    return queue(action, payload);\n  };\n\n  const terminate = async () => {\n    Object.keys(workers).forEach(async (wid) => {\n      await workers[wid].terminate();\n    });\n    jobQueue = [];\n  };\n\n  return {\n    addWorker,\n    addJob,\n    terminate,\n    getQueueLen,\n    getNumWorkers,\n  };\n};\n","'use strict';\n\n/*\n * OEM = OCR Engine Mode, and there are 4 possible modes.\n *\n * By default tesseract.js uses LSTM_ONLY mode.\n *\n */\nmodule.exports = {\n  TESSERACT_ONLY: 0,\n  LSTM_ONLY: 1,\n  TESSERACT_LSTM_COMBINED: 2,\n  DEFAULT: 3,\n};\n","'use strict';\n\nmodule.exports = (prefix, cnt) => (\n  `${prefix}-${cnt}-${Math.random().toString(16).slice(3, 8)}`\n);\n","'use strict';\n\nmodule.exports = (key) => {\n  const env = {};\n\n  if (typeof WorkerGlobalScope !== 'undefined') {\n    env.type = 'webworker';\n  } else if (typeof document === 'object') {\n    env.type = 'browser';\n  } else if (typeof process === 'object' && typeof require === 'function') {\n    env.type = 'node';\n  }\n\n  if (typeof key === 'undefined') {\n    return env;\n  }\n\n  return env[key];\n};\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nconst createWorker = require('./createWorker');\n\nconst recognize = async (image, langs, options) => {\n  const worker = await createWorker(langs, 1, options);\n  return worker.recognize(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nconst detect = async (image, options) => {\n  const worker = await createWorker('osd', 0, options);\n  return worker.detect(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nmodule.exports = {\n  recognize,\n  detect,\n};\n","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nconst version = require('../../../package.json').version;\nconst defaultOptions = require('../../constants/defaultOptions');\n\n/*\n * Default options for browser worker\n */\nmodule.exports = {\n  ...defaultOptions,\n  workerPath: `https://cdn.jsdelivr.net/npm/tesseract.js@v${version}/dist/worker.min.js`,\n};\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\n/**\n *\n * Tesseract Worker adapter for browser\n *\n * @fileoverview Tesseract Worker adapter for browser\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nconst defaultOptions = require('./defaultOptions');\nconst spawnWorker = require('./spawnWorker');\nconst terminateWorker = require('./terminateWorker');\nconst onMessage = require('./onMessage');\nconst send = require('./send');\nconst loadImage = require('./loadImage');\n\nmodule.exports = {\n  defaultOptions,\n  spawnWorker,\n  terminateWorker,\n  onMessage,\n  send,\n  loadImage,\n};\n","'use strict';\n\n/**\n * spawnWorker\n *\n * @name spawnWorker\n * @function create a new Worker in browser\n * @access public\n */\nmodule.exports = ({ workerPath, workerBlobURL }) => {\n  let worker;\n  if (Blob && URL && workerBlobURL) {\n    const blob = new Blob([`importScripts(\"${workerPath}\");`], {\n      type: 'application/javascript',\n    });\n    worker = new Worker(URL.createObjectURL(blob));\n  } else {\n    worker = new Worker(workerPath);\n  }\n\n  return worker;\n};\n","'use strict';\n\n/**\n * terminateWorker\n *\n * @name terminateWorker\n * @function terminate worker\n * @access public\n */\nmodule.exports = (worker) => {\n  worker.terminate();\n};\n","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nconst getId = require('./utils/getId');\n\nlet jobCounter = 0;\n\nmodule.exports = ({\n  id: _id,\n  action,\n  payload = {},\n}) => {\n  let id = _id;\n  if (typeof id === 'undefined') {\n    id = getId('Job', jobCounter);\n    jobCounter += 1;\n  }\n\n  return {\n    id,\n    action,\n    payload,\n  };\n};\n","'use strict';\n\nlet logging = false;\n\nexports.logging = logging;\n\nexports.setLogging = (_logging) => {\n  logging = _logging;\n};\n\nexports.log = (...args) => (logging ? console.log.apply(this, args) : null);\n","'use strict';\n\n/*\n * PSM = Page Segmentation Mode\n */\nmodule.exports = {\n  OSD_ONLY: '0',\n  AUTO_OSD: '1',\n  AUTO_ONLY: '2',\n  AUTO: '3',\n  SINGLE_COLUMN: '4',\n  SINGLE_BLOCK_VERT_TEXT: '5',\n  SINGLE_BLOCK: '6',\n  SINGLE_LINE: '7',\n  SINGLE_WORD: '8',\n  CIRCLE_WORD: '9',\n  SINGLE_CHAR: '10',\n  SPARSE_TEXT: '11',\n  SPARSE_TEXT_OSD: '12',\n  RAW_LINE: '13',\n};\n","'use strict';\n\nmodule.exports = (worker, handler) => {\n  worker.onmessage = ({ data }) => { // eslint-disable-line\n    handler(data);\n  };\n};\n","'use strict';\n\n/**\n * send\n *\n * @name send\n * @function send packet to worker and create a job\n * @access public\n */\nmodule.exports = async (worker, packet) => {\n  worker.postMessage(packet);\n};\n","'use strict';\n\nmodule.exports = {\n  /*\n   * Use BlobURL for worker script by default\n   * TODO: remove this option\n   *\n   */\n  workerBlobURL: true,\n  logger: () => {},\n};\n","'use strict';\n\n/*\n * languages with existing tesseract traineddata\n * https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016\n */\n\n/**\n * @typedef {object} Languages\n * @property {string} AFR Afrikaans\n * @property {string} AMH Amharic\n * @property {string} ARA Arabic\n * @property {string} ASM Assamese\n * @property {string} AZE Azerbaijani\n * @property {string} AZE_CYRL Azerbaijani - Cyrillic\n * @property {string} BEL Belarusian\n * @property {string} BEN Bengali\n * @property {string} BOD Tibetan\n * @property {string} BOS Bosnian\n * @property {string} BUL Bulgarian\n * @property {string} CAT Catalan; Valencian\n * @property {string} CEB Cebuano\n * @property {string} CES Czech\n * @property {string} CHI_SIM Chinese - Simplified\n * @property {string} CHI_TRA Chinese - Traditional\n * @property {string} CHR Cherokee\n * @property {string} CYM Welsh\n * @property {string} DAN Danish\n * @property {string} DEU German\n * @property {string} DZO Dzongkha\n * @property {string} ELL Greek, Modern (1453-)\n * @property {string} ENG English\n * @property {string} ENM English, Middle (1100-1500)\n * @property {string} EPO Esperanto\n * @property {string} EST Estonian\n * @property {string} EUS Basque\n * @property {string} FAS Persian\n * @property {string} FIN Finnish\n * @property {string} FRA French\n * @property {string} FRK German Fraktur\n * @property {string} FRM French, Middle (ca. 1400-1600)\n * @property {string} GLE Irish\n * @property {string} GLG Galician\n * @property {string} GRC Greek, Ancient (-1453)\n * @property {string} GUJ Gujarati\n * @property {string} HAT Haitian; Haitian Creole\n * @property {string} HEB Hebrew\n * @property {string} HIN Hindi\n * @property {string} HRV Croatian\n * @property {string} HUN Hungarian\n * @property {string} IKU Inuktitut\n * @property {string} IND Indonesian\n * @property {string} ISL Icelandic\n * @property {string} ITA Italian\n * @property {string} ITA_OLD Italian - Old\n * @property {string} JAV Javanese\n * @property {string} JPN Japanese\n * @property {string} KAN Kannada\n * @property {string} KAT Georgian\n * @property {string} KAT_OLD Georgian - Old\n * @property {string} KAZ Kazakh\n * @property {string} KHM Central Khmer\n * @property {string} KIR Kirghiz; Kyrgyz\n * @property {string} KOR Korean\n * @property {string} KUR Kurdish\n * @property {string} LAO Lao\n * @property {string} LAT Latin\n * @property {string} LAV Latvian\n * @property {string} LIT Lithuanian\n * @property {string} MAL Malayalam\n * @property {string} MAR Marathi\n * @property {string} MKD Macedonian\n * @property {string} MLT Maltese\n * @property {string} MSA Malay\n * @property {string} MYA Burmese\n * @property {string} NEP Nepali\n * @property {string} NLD Dutch; Flemish\n * @property {string} NOR Norwegian\n * @property {string} ORI Oriya\n * @property {string} PAN Panjabi; Punjabi\n * @property {string} POL Polish\n * @property {string} POR Portuguese\n * @property {string} PUS Pushto; Pashto\n * @property {string} RON Romanian; Moldavian; Moldovan\n * @property {string} RUS Russian\n * @property {string} SAN Sanskrit\n * @property {string} SIN Sinhala; Sinhalese\n * @property {string} SLK Slovak\n * @property {string} SLV Slovenian\n * @property {string} SPA Spanish; Castilian\n * @property {string} SPA_OLD Spanish; Castilian - Old\n * @property {string} SQI Albanian\n * @property {string} SRP Serbian\n * @property {string} SRP_LATN Serbian - Latin\n * @property {string} SWA Swahili\n * @property {string} SWE Swedish\n * @property {string} SYR Syriac\n * @property {string} TAM Tamil\n * @property {string} TEL Telugu\n * @property {string} TGK Tajik\n * @property {string} TGL Tagalog\n * @property {string} THA Thai\n * @property {string} TIR Tigrinya\n * @property {string} TUR Turkish\n * @property {string} UIG Uighur; Uyghur\n * @property {string} UKR Ukrainian\n * @property {string} URD Urdu\n * @property {string} UZB Uzbek\n * @property {string} UZB_CYRL Uzbek - Cyrillic\n * @property {string} VIE Vietnamese\n * @property {string} YID Yiddish\n */\n\n/**\n  * @type {Languages}\n  */\nmodule.exports = {\n  AFR: 'afr',\n  AMH: 'amh',\n  ARA: 'ara',\n  ASM: 'asm',\n  AZE: 'aze',\n  AZE_CYRL: 'aze_cyrl',\n  BEL: 'bel',\n  BEN: 'ben',\n  BOD: 'bod',\n  BOS: 'bos',\n  BUL: 'bul',\n  CAT: 'cat',\n  CEB: 'ceb',\n  CES: 'ces',\n  CHI_SIM: 'chi_sim',\n  CHI_TRA: 'chi_tra',\n  CHR: 'chr',\n  CYM: 'cym',\n  DAN: 'dan',\n  DEU: 'deu',\n  DZO: 'dzo',\n  ELL: 'ell',\n  ENG: 'eng',\n  ENM: 'enm',\n  EPO: 'epo',\n  EST: 'est',\n  EUS: 'eus',\n  FAS: 'fas',\n  FIN: 'fin',\n  FRA: 'fra',\n  FRK: 'frk',\n  FRM: 'frm',\n  GLE: 'gle',\n  GLG: 'glg',\n  GRC: 'grc',\n  GUJ: 'guj',\n  HAT: 'hat',\n  HEB: 'heb',\n  HIN: 'hin',\n  HRV: 'hrv',\n  HUN: 'hun',\n  IKU: 'iku',\n  IND: 'ind',\n  ISL: 'isl',\n  ITA: 'ita',\n  ITA_OLD: 'ita_old',\n  JAV: 'jav',\n  JPN: 'jpn',\n  KAN: 'kan',\n  KAT: 'kat',\n  KAT_OLD: 'kat_old',\n  KAZ: 'kaz',\n  KHM: 'khm',\n  KIR: 'kir',\n  KOR: 'kor',\n  KUR: 'kur',\n  LAO: 'lao',\n  LAT: 'lat',\n  LAV: 'lav',\n  LIT: 'lit',\n  MAL: 'mal',\n  MAR: 'mar',\n  MKD: 'mkd',\n  MLT: 'mlt',\n  MSA: 'msa',\n  MYA: 'mya',\n  NEP: 'nep',\n  NLD: 'nld',\n  NOR: 'nor',\n  ORI: 'ori',\n  PAN: 'pan',\n  POL: 'pol',\n  POR: 'por',\n  PUS: 'pus',\n  RON: 'ron',\n  RUS: 'rus',\n  SAN: 'san',\n  SIN: 'sin',\n  SLK: 'slk',\n  SLV: 'slv',\n  SPA: 'spa',\n  SPA_OLD: 'spa_old',\n  SQI: 'sqi',\n  SRP: 'srp',\n  SRP_LATN: 'srp_latn',\n  SWA: 'swa',\n  SWE: 'swe',\n  SYR: 'syr',\n  TAM: 'tam',\n  TEL: 'tel',\n  TGK: 'tgk',\n  TGL: 'tgl',\n  THA: 'tha',\n  TIR: 'tir',\n  TUR: 'tur',\n  UIG: 'uig',\n  UKR: 'ukr',\n  URD: 'urd',\n  UZB: 'uzb',\n  UZB_CYRL: 'uzb_cyrl',\n  VIE: 'vie',\n  YID: 'yid',\n};\n","'use strict';\n\nconst isBrowser = require('./getEnvironment')('type') === 'browser';\n\nconst resolveURL = isBrowser ? s => (new URL(s, window.location.href)).href : s => s; // eslint-disable-line\n\nmodule.exports = (options) => {\n  const opts = { ...options };\n  ['corePath', 'workerPath', 'langPath'].forEach((key) => {\n    if (options[key]) {\n      opts[key] = resolveURL(opts[key]);\n    }\n  });\n  return opts;\n};\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nconst resolvePaths = require('./utils/resolvePaths');\nconst createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\nconst OEM = require('./constants/OEM');\nconst {\n  defaultOptions,\n  spawnWorker,\n  terminateWorker,\n  onMessage,\n  loadImage,\n  send,\n} = require('./worker/node');\n\nlet workerCounter = 0;\n\nmodule.exports = async (langs = 'eng', oem = OEM.LSTM_ONLY, _options = {}, config = {}) => {\n  const id = getId('Worker', workerCounter);\n  const {\n    logger,\n    errorHandler,\n    ...options\n  } = resolvePaths({\n    ...defaultOptions,\n    ..._options,\n  });\n  const promises = {};\n\n  // Current langs, oem, and config file.\n  // Used if the user ever re-initializes the worker using `worker.reinitialize`.\n  const currentLangs = typeof langs === 'string' ? langs.split('+') : langs;\n  let currentOem = oem;\n  let currentConfig = config;\n  const lstmOnlyCore = [OEM.DEFAULT, OEM.LSTM_ONLY].includes(oem) && !options.legacyCore;\n\n  let workerResReject;\n  let workerResResolve;\n  const workerRes = new Promise((resolve, reject) => {\n    workerResResolve = resolve;\n    workerResReject = reject;\n  });\n  const workerError = (event) => { workerResReject(event.message); };\n\n  let worker = spawnWorker(options);\n  worker.onerror = workerError;\n\n  workerCounter += 1;\n\n  const startJob = ({ id: jobId, action, payload }) => (\n    new Promise((resolve, reject) => {\n      log(`[${id}]: Start ${jobId}, action=${action}`);\n      // Using both `action` and `jobId` in case user provides non-unique `jobId`.\n      const promiseId = `${action}-${jobId}`;\n      promises[promiseId] = { resolve, reject };\n      send(worker, {\n        workerId: id,\n        jobId,\n        action,\n        payload,\n      });\n    })\n  );\n\n  const load = () => (\n    console.warn('`load` is depreciated and should be removed from code (workers now come pre-loaded)')\n  );\n\n  const loadInternal = (jobId) => (\n    startJob(createJob({\n      id: jobId, action: 'load', payload: { options: { lstmOnly: lstmOnlyCore, corePath: options.corePath, logging: options.logging } },\n    }))\n  );\n\n  const writeText = (path, text, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'writeFile', args: [path, text] },\n    }))\n  );\n\n  const readText = (path, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'readFile', args: [path, { encoding: 'utf8' }] },\n    }))\n  );\n\n  const removeFile = (path, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'unlink', args: [path] },\n    }))\n  );\n\n  const FS = (method, args, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method, args },\n    }))\n  );\n\n  const loadLanguageInternal = (_langs, jobId) => startJob(createJob({\n    id: jobId,\n    action: 'loadLanguage',\n    payload: {\n      langs: _langs,\n      options: {\n        langPath: options.langPath,\n        dataPath: options.dataPath,\n        cachePath: options.cachePath,\n        cacheMethod: options.cacheMethod,\n        gzip: options.gzip,\n        lstmOnly: [OEM.DEFAULT, OEM.LSTM_ONLY].includes(currentOem)\n          && !options.legacyLang,\n      },\n    },\n  }));\n\n  const initializeInternal = (_langs, _oem, _config, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'initialize',\n      payload: { langs: _langs, oem: _oem, config: _config },\n    }))\n  );\n\n  const reinitialize = (langs = 'eng', oem, config, jobId) => { // eslint-disable-line\n\n    if (lstmOnlyCore && [OEM.TESSERACT_ONLY, OEM.TESSERACT_LSTM_COMBINED].includes(oem)) throw Error('Legacy model requested but code missing.');\n\n    const _oem = oem || currentOem;\n    currentOem = _oem;\n\n    const _config = config || currentConfig;\n    currentConfig = _config;\n\n    // Only load langs that are not already loaded.\n    // This logic fails if the user downloaded the LSTM-only English data for a language\n    // and then uses `worker.reinitialize` to switch to the Legacy engine.\n    // However, the correct data will still be downloaded after initialization fails\n    // and this can be avoided entirely if the user loads the correct data ahead of time.\n    const langsArr = typeof langs === 'string' ? langs.split('+') : langs;\n    const _langs = langsArr.filter((x) => !currentLangs.includes(x));\n    currentLangs.push(..._langs);\n\n    if (_langs.length > 0) {\n      return loadLanguageInternal(_langs, jobId)\n        .then(() => initializeInternal(langs, _oem, _config, jobId));\n    }\n\n    return initializeInternal(langs, _oem, _config, jobId);\n  };\n\n  const setParameters = (params = {}, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'setParameters',\n      payload: { params },\n    }))\n  );\n\n  const recognize = async (image, opts = {}, output = {\n    text: true,\n  }, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'recognize',\n      payload: { image: await loadImage(image), options: opts, output },\n    }))\n  );\n\n  const detect = async (image, jobId) => {\n    if (lstmOnlyCore) throw Error('`worker.detect` requires Legacy model, which was not loaded.');\n\n    return startJob(createJob({\n      id: jobId,\n      action: 'detect',\n      payload: { image: await loadImage(image) },\n    }));\n  };\n\n  const terminate = async () => {\n    if (worker !== null) {\n      /*\n      await startJob(createJob({\n        id: jobId,\n        action: 'terminate',\n      }));\n      */\n      terminateWorker(worker);\n      worker = null;\n    }\n    return Promise.resolve();\n  };\n\n  onMessage(worker, ({\n    workerId, jobId, status, action, data,\n  }) => {\n    const promiseId = `${action}-${jobId}`;\n    if (status === 'resolve') {\n      log(`[${workerId}]: Complete ${jobId}`);\n      promises[promiseId].resolve({ jobId, data });\n      delete promises[promiseId];\n    } else if (status === 'reject') {\n      promises[promiseId].reject(data);\n      delete promises[promiseId];\n      if (action === 'load') workerResReject(data);\n      if (errorHandler) {\n        errorHandler(data);\n      } else {\n        throw Error(data);\n      }\n    } else if (status === 'progress') {\n      logger({ ...data, userJobId: jobId });\n    }\n  });\n\n  const resolveObj = {\n    id,\n    worker,\n    load,\n    writeText,\n    readText,\n    removeFile,\n    FS,\n    reinitialize,\n    setParameters,\n    recognize,\n    detect,\n    terminate,\n  };\n\n  loadInternal()\n    .then(() => loadLanguageInternal(langs))\n    .then(() => initializeInternal(langs, oem, config))\n    .then(() => workerResResolve(resolveObj))\n    .catch(() => {});\n\n  return workerRes;\n};\n"],"names":["readFromBlobOrFile","blob","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","_ref","target","error","code","Error","concat","readAsArrayBuffer","loadImage","async","data","image","test","atob","split","map","c","charCodeAt","resp","fetch","arrayBuffer","HTMLElement","tagName","src","poster","toBlob","OffscreenCanvas","convertToBlob","File","Blob","Uint8Array","module","exports","_objectSpread","require","createScheduler","createWorker","Tesseract","languages","OEM","PSM","setLogging","createJob","log","getId","schedulerCounter","id","workers","runningWorkers","jobQueue","getNumWorkers","Object","keys","length","dequeue","wIds","i","queue","action","payload","job","push","shift","w","apply","this","err","addWorker","addJob","_len","arguments","Array","_key","terminate","forEach","wid","getQueueLen","TESSERACT_ONLY","LSTM_ONLY","TESSERACT_LSTM_COMBINED","DEFAULT","prefix","cnt","Math","random","toString","slice","key","env","WorkerGlobalScope","type","document","process","objectWithoutPropertiesLoose","e","t","o","r","getOwnPropertySymbols","n","indexOf","propertyIsEnumerable","call","__esModule","recognize","langs","options","worker","finally","detect","defineProperty","ownKeys","filter","getOwnPropertyDescriptor","enumerable","getOwnPropertyDescriptors","defineProperties","version","defaultOptions","workerPath","toPropertyKey","value","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","spawnWorker","terminateWorker","onMessage","send","workerBlobURL","URL","Worker","createObjectURL","hasOwnProperty","jobCounter","_id","_this","logging","_logging","args","console","OSD_ONLY","AUTO_OSD","AUTO_ONLY","AUTO","SINGLE_COLUMN","SINGLE_BLOCK_VERT_TEXT","SINGLE_BLOCK","SINGLE_LINE","SINGLE_WORD","CIRCLE_WORD","SINGLE_CHAR","SPARSE_TEXT","SPARSE_TEXT_OSD","RAW_LINE","handler","onmessage","packet","postMessage","logger","AFR","AMH","ARA","ASM","AZE","AZE_CYRL","BEL","BEN","BOD","BOS","BUL","CAT","CEB","CES","CHI_SIM","CHI_TRA","CHR","CYM","DAN","DEU","DZO","ELL","ENG","ENM","EPO","EST","EUS","FAS","FIN","FRA","FRK","FRM","GLE","GLG","GRC","GUJ","HAT","HEB","HIN","HRV","HUN","IKU","IND","ISL","ITA","ITA_OLD","JAV","JPN","KAN","KAT","KAT_OLD","KAZ","KHM","KIR","KOR","KUR","LAO","LAT","LAV","LIT","MAL","MAR","MKD","MLT","MSA","MYA","NEP","NLD","NOR","ORI","PAN","POL","POR","PUS","RON","RUS","SAN","SIN","SLK","SLV","SPA","SPA_OLD","SQI","SRP","SRP_LATN","SWA","SWE","SYR","TAM","TEL","TGK","TGL","THA","TIR","TUR","UIG","UKR","URD","UZB","UZB_CYRL","VIE","YID","resolveURL","s","window","location","href","opts","toPrimitive","TypeError","String","Number","_objectWithoutProperties","_excluded","resolvePaths","workerCounter","undefined","oem","_options","config","_resolvePaths","errorHandler","promises","currentLangs","currentOem","currentConfig","lstmOnlyCore","includes","legacyCore","workerResReject","workerResResolve","workerRes","event","message","startJob","jobId","promiseId","workerId","loadLanguageInternal","_langs","langPath","dataPath","cachePath","cacheMethod","gzip","lstmOnly","legacyLang","initializeInternal","_oem","_config","_ref2","status","userJobId","resolveObj","load","warn","writeText","path","text","method","readText","encoding","removeFile","FS","reinitialize","x","then","setParameters","params","output","corePath","catch"],"sourceRoot":""}